%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2-01.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: 
%%CreationDate: 5/1/2018
%%BoundingBox: 0 0 700 500
%%HiResBoundingBox: 0 0 700 500
%%CropBox: 0 0 700 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmp:ModifyDate>2018-05-01T14:24:01+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-05-01T14:24:01+03:00</xmp:CreateDate>
         <xmp:MetadataDate>2018-05-01T14:24:01+03:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AOM7h5N2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVaThStJwhVpOFVpOFK0nCq0nJJWk4VWk4VWk4VWk5JK0nCrRxVaTkkrScKrSc&#xA;KVpOFVhOSVaThVaThSybNS0OxV2KuxV2KuxV2KuxV2KuxV2KuxVo4UrScKrScKrScKVpOFVpOFK0&#xA;nJKtJwq0FZ2CqCzE0Cjck4pbmhMVAzKX35IDUr86bfjhibSRSiTkkLcKrScKVpOSVaThVaThStJw&#xA;qtJwqtJwpWnJKyfNQ0OxV2KuxV2KuxV2KuxV2KuxV2KtYq0ThStJySrScKUHPqdhDL6Us6rJ/LXp&#xA;8/D6cmIkshElX5AgEGoO4IwIaJwqsJwqrC14qHuW9FGFVWlZGHiq7be5oPDI8fduy4e9bJd0Vo7d&#xA;fRjYUbersD2Z6CvyFB7ZIQ6ndb7kKTliFpwq0ThVaThStJwqtJwpWk5JVpOFVpOFK0nCq04VZRmo&#xA;aHYq7FXYq7FXYq7FXYq7FXYq1irROFK0nCq0nJKo3TFYHINDTrk4DdEuSQXmlxOSkkZilHtxPtUZ&#xA;lAg8mMcsooOK41PSj8J9S3/lO6/825GUQXKjOM/en2lapaai3ASLbyAVZZWp/wADTdvkor7ZTMGP&#xA;mg4yEya4gg2tVLP/AMtEgHL/AGC7hfnufCmV8JPP5MbA5IV3Z2LMSzMasx3JJ7nLQELCckq04VaO&#xA;KrScklaThVaThSsJwqtJySrScKrScKWsKrScKspzTtDsVdirsVdirsVdirsVdirsVaJwpWk4VWk4&#xA;VRp01bhOenSG4IFXtmHGdadaKK+oPdd/EDKvF4fq28+n7Pi28F/Tv96Vz/3ZB9tvpzJjzaZcnrGr&#xA;+WdI1W3WK7hq6KFjuF2lUDwb+B2zlcGsyYjcT8Oj0OXSwyCiHl3mf8u9f0p5Luwb69Z9WSnxADxT&#xA;qPmNvGmdFpe1MeTY+mTqc2iMByuPeOfxYU9nBcMRGDb3K7mJunzH9mbNoGQx57xVrfV7+yYRXamS&#xA;PsT9qnse+QMG0CMtwnsM8U8SyxNyRtwchTURTZOKtHCq0nClaTklWk4VWk4UrScKrScKrScKVuSV&#xA;onCq0nFWVZp2h2KuxV2KuxV2KuxV2KuxVrFVpOFK0nJKtJwpcgkMiiMEyEjgFryr2pTviardITDU&#xA;Z43s5F1SkmobelJH/fA1H9+w+Fvpq9euU4okSHB9P2fD8UzyH0ni5/jn+LZ5D5z8uy331IXarNsK&#xA;tUJy/k5n4a5oZdn5hHi4dncR1uIy4bTvMNymN+YfImj6sWnjUWl8a/v4wKMT/OmwPz65sNL2lkxb&#xA;H1R7v1OFqNDDJuNi8w8y+UdU01WivYawnaK5T4oye2/Y+xzo9NrMeYek793V088M8MrPJI/LUjGO&#xA;eMn4VKsB/rVr+rMiTdlCcZFqaJwq1QsQAKk7ADqThSrtaR29frjFZB/x7JQyV/yz0T6fi9sgJmX0&#xA;/P8AHP8AG7LhrmhZpFd6qgjXsq1I/Ek5ZEUgqZOTVaThVYThStOFWjhVaThVaThSyzNM47sVdirs&#xA;VdirsVdirsVaxVonClaThCrSckqISxIjWa6f6vCwqlRWRwe6JsSPc0X3yByb0Ny2CHfs1JfBFMdm&#xA;noRkEM9aysDsQz0FB7KAPGuIx3vLf7l4u5Ts9LutQYpAAFBHORtlG+TlkEObDhtO9d8uyXMktwQL&#xA;jkSwCBY5kHYKdkkA8H3/AMrMbBqOEV/Z+z8bNk8YKC0rzHr+gVRW+v6dEQskL8g0XsQfjj+n4fDD&#xA;n0eLPv8ATP7/ANf3ssWpyYfOP4+TPdC81aPrKAW0vC4pVraSiyDxoP2h7jNFqdFkw/UNu/o7jBqo&#xA;ZeR37lvnNOfli/WgYlBQHx5CmHs81nj70a0fupPB/LX/AB8/7D/jbOvk6rKnROBpRkemOIluLx/q&#xA;lu4rGWFZJB/xXHsW/wBY0X/Kys5d6jufxzP4Pk2CHU7LH1BYlMdin1dCKNKTWZgetX24g+C022Nc&#xA;Ix3vLf7vx714q5IAnLmK0nCq0nJKtJwqtJwpawqtJwqtJwpWk4VZbmlcd2KuxV2KuxV2KuxV2KtE&#xA;4UrScKqtvZTzqZBSOBTR55DxjU9aV7mn7K1PtkZTA26soxJVDc2trtar6sw63Mqig/4xxmoHzap7&#xA;/CcHCZfVsO79v4+LKwOSCllkldpJGLyMas7Ekk+5OWgAbBiTamTk1ZxoFmRpMZiWoCCWU7ftEb/j&#xA;TNZnn6926ETSYUylKDvdLtroh3BSZP7udDxdfYMO3iDse+WQyEIIYrqnlyW3f11BjZDyS8t1IAI3&#xA;rJEu6/60f/AjM7FqLFHfyP4+9pli6jYoix816rd2+qeX9RZZ5La0W4W5BBYj1IgoLDZqrIDXMbJp&#xA;McZwyQ2uVV8C5kcuQ4pCfd8ebz7y1/x8/wCw/wCNs3EmrKy/So6WF1cWsS3GoxMvFGXmY4aMXlVD&#xA;UMQQATQ8evuMXKfUATUfvPd+OaIDYkc0qnnmnlaaZ2klc1eRyWYn3JzJjEAUOTAm+akTk0LScKVp&#xA;OFVpOFVpOFK3JKtJwqtJwqtJwpaJwqy7NI47sVdirsVdirsVdirRwqvgt57iT04EMj0JIHYDqSew&#xA;HcnBKQiLLKMSeSuVsbT+8IvLgf7rUkQqf8phQv8A7Gg9zkfVLl6R9v7GdAeZV9MsNQ8w3Tr6qrDb&#xA;ACaQgCOFWOyqi0AJ7KBmt7U7Vw6DHxS3lLkOp+P6XJ02kyaiVDky+H8vdFhi53TStT+8eR1QexVU&#xA;Ddfds4fP7Z6uRuIhAe63d4+xsXIkyKi/kXy/cxgW8zxynl9iTkdhX7DqCfvGDB7a6qMvUITHy+4/&#xA;rZZOxMdbcUWH+YPLl7o0q+qRLbS19G4UUBp1DKd1YeBzvOx+2sWuhcPTMc4np+sfgui1ejngNHcd&#xA;7OfJ6lLGhoCLVSasUH7J3YdMq128h/WZ6Xr7kdYWNvdCVD8HFjxeoYqKbVI2I+gfPtlWXKYUWWLG&#xA;JWhr2xmtZxE5DFgChXuD0yzHlEhbXPEYmkfH5QGoWbLMf3UgIdD0YdwPDMOevMZbOfDRxrdjes+S&#xA;9M0W11bUkRxfXMUcJdz8KxK0YCIBQb+mu/jmXp9bPLOET9IP62vUYBDFJ415b/4+P9h/xtnUF1+V&#xA;O0lkjkWSNikiGqupIII7gjAQCKLUCjjqFne7alGUnPS/gA5k/wDFsfwrJ/rCjdyW6ZT4cofRy7j+&#xA;g9Pu9zZxA8/mptod+15bWtsFuze1+pyQmqyAfapy4leP7QYAjvkMuuxYscsmQ8EYc76fr8qu2UcM&#xA;pECO9s00r8qoHjDX128r0rxt+KR1rQgSMHLf8BnBa328ndYMYrvl+oVXzLucXYwH1y+SKuPy18rl&#xA;XCXUqMvSk8ZPvUMgH45r8ft3rAd44z8D/wAU5B7Fx1txMT80eQdQ0WF7uJ/rdijcZJApR496Dmpr&#xA;8J/mBpnZdh+1WHWy8OQ8PL3cwfcf0fe6rV9nTwji+qLFDnVuvaOFVpOFVpOFK0nJKtJwpZhmjcZ2&#xA;KuxV2KuxV2KuVWZgqgliaADcknFKNNjBamuouVcf8ecZHq/J2NVj+mrf5OVcZl9Pz6ft/G7ZwAfV&#xA;8vxyULnUJZY/QjVYLXY+hHUKSOhcmrOfdj8qZZDGAbO5QZk7cghotPvdQlW1tDwZzSSY9I07t/AZ&#xA;hdq9qY9DhOWe/cP5x7v1+TlaDRy1GThHxel+WvLFjpNkLaMN8ThpFdyvJyv2mPdqDoM8d7R7Qza3&#xA;L4mY79ByAHd+N+97PFihhjw4xt38yU3uYaQyRsu/D+7Mh4lajcF9lKnMOujKMt7/AEKdjaxxenLc&#xA;PW4h2VY/iPFhRQwUE7b0wRjXPmyyTuwORSDzk0V7Db6egVnluvWcrQ8FVSGNRSu3X3IGdf7GykNV&#xA;IjkIG/mKH47i6ftmI8EX3ivtU1+EUXYdKDwzv3m0dp9yba7ik5FUDD1Kd1rvUZRlhxRIbcU+GQKO&#xA;1plkvLZ4SGDRrxIpTYnMbACISBcnIQckaZLa3nposUq8eCgb7UFPfp+r3zVyhe4dmCk35jBW8oXb&#xA;9aNEVPzlXMvsv+/j8fucXX/3J+H3vmvy5/x8f7D/AI2zuC6nKnBOLUi/0bKlmby7cWtsULxGSvOW&#xA;g6RIPiatPtbL75Ucwuo+o/d7/wAW2CHfsjvyv1GJfNLes3FXtpkiY7sGcpVlp34r27ZyHttxfkgR&#xA;/qkb91S/TTuOyYg5a8tvs/Q9guJLnhaG3arIeLR8gFkFB0LH4h/XPKLPR6KIG9oeDS6tILlBbwN8&#xA;UfxKzg+AbwplYhzHRtlm5EblR81XtrHo2oSSAGNrOSMBti4YHf8AmAWm3iTtm07KMvzeLh+rxI1/&#xA;pg4eeF4pXyo/c8Jz6CeKWk4VWk4UrScKrScKrScKWY5o3GdirsVdirsVRcGnFohcXMgtrVq8ZG3Z&#xA;6bH00G7eFfs+JyuWTehufxzbBDazsFz6kkAMenIbdSKNOTWdv9kPsD2X6ScAxXvLf7k8dfTt96XE&#xA;5e1qkFtcXMnpwRmRgCzU6BR1Zj0AHicEpCO5ZRiTyZn5E05fq/1gpzZzyI9g3BR36Gpzyr2v1hy6&#xA;3w/4cQA/zpbk/d8nruyMIx6fi/iyH7B+PtZFqSyCYrJC8ltCo4PUqKkCrM1DUk5ymQeWzt8JFbGi&#xA;UN5v8xR6JoYvHifmypFFCGK1aU1I5eKKhzcdk9lT12bwoHh9JJPOnBz6mOGPERe7GtN8weYtXjUR&#xA;2T28D9HuZHkLeHGIBSfpIzpR7FRif3max3RjX22fuLgy7cH8EN2T6Z5YkdjJeSsJDTkNudK7duKj&#xA;fsPxzdaeGHSQ4MEaHf3+/v8AxTr8niZ5cWQ/BLrqFIbh4kcSKpoHHQ5toSJFkU66caNNjpihEWER&#xA;ku41HjXKc8qgW/TxuYZ9JBFIoVxWn2T0I+RGaASId1THPP8ADx8nXUKbnlCF6DrMvhQZn9my/fg+&#xA;/wC5xNcP3J+H3vnPyhp9xd/W2j4pDF6frXEhCRoDypyY9zQ0A3PYHO1yZBHnz7urq5RJZCbvTrAk&#xA;WSC7uR/x+TL+7U/8VQt/xKT/AIFTlfBKf1ekdw/Sf1fMsLEeW6W3M81zI8txI00j/bdyWJ+ZOXxg&#xA;AKHJiSSbSwR3dncLcWrsrxnlG6faU5TqNNDLAwmOKEuYLfizGJBBohl+mfmpf28YjvLcuw6ywuYy&#xA;SO7JuK5wGs9gomV4MhgP5shxfb+w+932Ltux+8jxeYTNvzVjePlBaT/CTRqrEAT/AJScjv8ALNfj&#xA;9g9TdSywHuBJ/Q3y7ZxcxA/E/wBrGtc80anrP7uWkFqG5+ipNXI3Bc987LsL2VwaGXibzy/zj09w&#xA;6ff5uo13ak8w4eUe4ISz0u6u0aUcYbVDSW6mPCJfavVm/wAlQW9s6aeYR25nuHP8fY6yMCXXr6VH&#xA;F6ForzyVBe8kqlafsxxA7L7sST4L0xxiZNy28v1n9X2pNdEvJy9itJwqtJwpWk4VZnmicZ2KuxV2&#xA;KuxVM5jBqYhKSCG8jijhMMhCxuIkCKUc7KSF3DU33rvTKI3jvrG7+bcanXelstvcRzGCSNkmB4+k&#xA;QQ1T0FOuXiQIscmsxINIo2FvafFqTkSf8sURHq/KRt1i+Rq3+T3yHiGX0fPp8O/7vNs4BH6vl+OS&#xA;hdalNNH6Earb2tQRbxVCkjoWJJZz7sT7ZOGIA2dz3olMnbkGa+QtTs7jT3gjZZbq14s8INWARj0A&#xA;6mjbe+eTe0+hyYdbOZB4MlEH4b/I/Y9f2dmjPTwj1jYP6GQXwteZui7uoO8TA+nyUUA3p37ZpdLo&#xA;p6jKIQ3kfl8XLyakYoXLYfakepyx39wksiArEWMSncBm6tv32A9hnp3Y/ZcdFAgG5y+o/oHk8prN&#xA;Wc8t9gOSkrMrBlJDDcEbEHNqQ4oTOPXrv0fTl/eFfsP0bw3I3+4g5jHSxuxs3jUyqi1b24vi95dS&#xA;hQG/ek0Vem24NQT8sZz4KjELGPH6pFTupNPNEtFbb7Urnr9GSgJjeTGfCdop35b0xvV9eQbLv9PY&#xA;fxzX6zPewdhpcHCLPNk+a5zWNfmIxTyndsPtK8JHzEyZn9mC88fj9xcTXf3R+H3vmfy8f96P9h/x&#xA;tndOoyJsTha0bbSaXLCtvdo1vIteF7FVq1JNJYydx7pQgdmyqQmDcd/L9R/X9jMUdi0dFuDvHcWk&#xA;ke3GT6zClQe/CRkcfSox8cdRL/Sn9Gy+GfL5tkaRYj4uOpXfUAcltkPv9l5T/wACv+sMfXP+jH7f&#xA;2fafcnYeZ+xQZ9U1e5VAGnkVTwjQBUjQbmiiiRoOp6AZYBDEO79P6yu8iqlNK0/+9K6jeD/dSEi2&#xA;Q+DOtGlP+pRf8phkbnPl6Y/7L9nx38gnYeZ+xA32o3d66tcScgg4xRqAsaL/ACoigKo9gMux4ow5&#xA;MZSJ5oUnLELSckq0nClaThVbhVmmaFxnYq7FXYq1irRwpT+81ZtMuJNMWIvBbloRcMxW4K9C0Uor&#xA;6aN1VQCtDvyzEhh8Qcd7neunxHX8cnJlk4Dw9B80pk09ZVMthIbhFBZ4SOMyAdapU8gP5lr70zIG&#xA;Stpbfc1cF8t0j1Vrr0AtupJY0cr1AzIiuOr3QGnWmrW9wlxbyvZyp9mZGKuPlxNcjmxY8seGYEo9&#xA;xFt4zcJsHd6ToEmrz2Zn1K5nuZHP7szE0CgdVXoKnwzUjR6fAaxQjHvpM888n1Epnk2trFXYqkms&#xA;ebNPsFZYiLicfsqfgB/ym/pmTi00pc9gglht3r2r3lwtxJcNGUNYkiJRV+VP45sY6eAFU4hyyuwz&#xA;nyl+bUtpws9WUNEtB68Y6A93QfrX7s0ut7FEvVj+X7f1uz03aZG0/m9X0vWtO1O3Se0mWRHFVKkE&#xA;H5EZzeXDLGakKdzDJGQsGwkv5lkjyZfkdR6RH/I1cy+yv8Yj8fucfXf3R+H3vmzQABFM3csAT8h/&#xA;bnc9XUZEzJyTWtJwq0AzMFUEsTQAbkk4pTH9GW1keWryMkg/6V8VPXPtITVYf9kC3+TlHimf0fM8&#xA;vh3/AHebZwAfV8kPd6vPNAbWFVtbKoP1aGoViOjSMSWkb3Y7dqZZDCAeI7y7z+ju+DEzJ26IAnL2&#xA;K0nClaThVaTklWk4UrThVaThVmuaBxnYq7FXYqtJwpXQwT3EoigjaWRuiKCTtuemJkALKREnYI7U&#xA;pUTT7ayklW4uoXcl0PNYo2ApEHGzfFU7VUdupyrELkZAUD9vm2zPpA5lK1dkYOhKspBVgaEEdCDm&#xA;RVtSaWqDU1Z71BEibSamKLxPWkg2EhPt8Z98x5Hw/p/0v6u77m6I4ufz/H9rU6wabEJbBBdgkAam&#xA;4DIGp0SI14N/xk+LuAuGNzNS2/o/t6/Db3pNR5b+f4/SgYNZ1GG4acTtI7msnqEvzPi1f15ecMSK&#xA;pq4jdsk03zFZ3dI5f3M524sdif8AJb+BzDyaeUeW4ZiSa0yhkwTzj5rb6xJptox4RfDOy7cm7rXw&#xA;GbDTYQBxFPDbDnaWX45G4p2r0+gZlEtgjS+O74UUAlB3PXJRJ6tOTAJbjmrKY5CXShJ3YdGqO4OW&#xA;AuJKJjsUy0XX9U0m6L2Nw0bbF0P2WAPR16H5/dlOfTQyipC2WPLLGbiaZtq/5mLrHlK80+7Uw3zK&#xA;vCg5I5V1OzdR0rRvvzUYeyTizicd4/sdhk7QGTEYnaX7Xl2gn91L/rD9Wb4NWRMyck1o610eWSJL&#xA;i6cWlo/927gtJJ7QxD4pPCuy16sMonnAsDcj5D3np9/k2Rhe5TRdO8wRxEaNo93BGVo140Tm4kB6&#xA;8WoAgP8ALH8iWzWy7T0d/vc2Mnu4hQ+37/kG8YMlemMvkx67sr60fhd28tvIf2ZUZD9zAZtcGpxZ&#xA;ReOUZj+iQfuceUJR5ikMTmQxWk4UrScKrScKrScKVpOFWjhVaThSzbNA4rsVdirRwpWk4VV31G4+&#xA;qi1j4wwUAkWMcTIQa1kb7TfImg7DIDELs7n8cmfGapCE5axWk4VTFHt76wt7UzC3ubXmIlk2ikDt&#xA;yqX/AGH7VbYgDcU3powkZVYPzH7G0VIAciEI31/TblkYNBNSjowqGQ77g1V1b6QctHDMd4Y7xLZ+&#xA;o3fSlncHsamBvp3aM/eP9UYPVH+kPt/b+Oadj5JZqEwsXMc4pLSoQUNQehBGxB7HLokEWFGMr9J8&#xA;7apayhXUT2Y2MbGhUezn+OU5dPGXkW4QSCSaKSV5H3lclmkp8PImvT/P5ZcAWeyjIJK8mNa9G6g5&#xA;IUpWZJDgSDUGh8RipFoqK9ptJ/wQyQk4uTTfzUUWVoyVIIIO+ScWiDuv8neX9T1N/StojxkkRDM3&#xA;wopbarMdvo6ntmHrtdj0uKWSZ2iLrqfx8naxwyySEQ9n0TyN5e02FXkjjuJEJV7q5CvyYbVRWJRK&#xA;N02JzyPtL2q1mpkal4WPuia+3mfu8no8HZuLGOXFLz/UmzXFrFdyMkLGWJSJZ1WMOe1aUFRnOZNX&#xA;OXpMpEDzdjHTigaAtEqBLCrIkZM1GR2WtWAJ+MD9dcgDakUfchJLcXlndR6hbpJGhLPC6kxuADuO&#xA;fIjxBWmX6bU5cU+PGTCQ6gscuKEgIn1AvGvO2h2+i+YJ7O2JNsQssIbcqrivEk+Bz3L2c7TlrdJH&#xA;JP69wfeOvxeQ1uAYshiOSQE5vXFWk5JVpOFK0nCq3CrROFVuFLN859xXYq1irROFK0nJKtJwpWk4&#xA;VWk4VWk4Uq6639VtxBdhbiyBNIJa/CT1MTD4kP8Aq7HuDkJYQTY2l+Ofe2QkeXMJDqOqRSyMLEtF&#xA;AfsiUgyU/wBZQF+nLI3W/NsGMJeGVQeZ9Sv7O9PvP8Mk2LXJfZTsOkfSny8cRsqnkkL4vUrRdx+0&#xA;D9mnvgNJCx+PNuP2anj8u2EK1hQ2qO7cUBJ9sQpLNfInki31hZbq6k5xQOEeEcuANAf3hWjNWtAi&#xA;EE7/ABLtXQdvduw0EQDvOXIfjl79/cemVpNIcx2TqJ2sdWt3lHpjT5SIogOKRUPE8Y1onz2qe9Tn&#xA;lmv9p9XqIygTGMJcwBzrzNy+16vT9k4YVIWT7/wGfC/s720Kc6K5DpuKgk1NGJCkb7dM0fGJCm7w&#xA;5QlaoiWq3AnluPW4fAqngOQII3Yt8W2EAXdoJkRQFfNS1XXrKygMzOqxwV4Bd1BpRT0G++yrluKE&#xA;ssxDGLkeQYcHCDKWw6oO7812lppsU186wARrzSWijmKHsSzf6oy7T6bLnn4eKJyS/o8vn3fYiYjD&#xA;1TPCHj/mPWzrOrz39GCSECPl9oqopU+FetM9y9nOzJaLSRxTNz3J95/U8h2hqBlymUfp5BKic3rh&#xA;LScklE2Wm3l6XMKgRRUM07kJFGD0Lu1FHt3PbK8mWMOfM9OpZRiShriNI5njjlWZFNBKgYK3uOQV&#xA;qfMZZAkiyKQVInJoawpaxVm+c+4rWKtE4UrScKrSckq0nFK0nJKtZlUEsaAbknClKrvWFFVtxyP8&#xA;56fQMkA2xx96VSyySMWkYsx7nJNoFLcKWsVcASaAVJ6DFVX4R/e/EfAdR8zkfcla5Zht9gdhsB8x&#xA;hCqYBJoOuSQi4NPdqNJ8C+HfJCLAz7lW6pb29Ihx5GlR1wnYMY7nd6L+T+o2y6Td2bsBKl0LhQfd&#xA;FUVPvxPyzyv27jKOphI/SYUD5iRv7CHpuyADjlXO/splOv8AliLU7mS7ilS3kdVLlyeJ2AHQcT8w&#xA;2cHOFm3d4c/CKSZfLXmOxqtvKkwXcrFICAD0qr0ys4i3/mInySLzRrPmXTLaJVkjhnlcgN+7c0AJ&#xA;NKchQbb51Psj2Lj1uolHLHixxjfMjexW4+Lru1tacOMGBqRP2fFhV5e6zfSrLeX0kjqaqKkKp8VU&#xA;UA+gZ65o+w9Lp48OPHGIPPa795O5+LyebXZMhuRJUGjLP6krtLJ/M5JP45ssWnhjFRAA8nGlklLm&#xA;2cvYLre3uLmZYLeNppnNEjQFmJ9gMEpCIsmgkAnkjza6Zp+964vbsf8AHlA/7pT/AMXTr1/1Y/8A&#xA;g1OU8c5/T6Y955/AfpPyLOgOe6Dv9Uu7wKkhCW8dfRtowEiSv8qDap7sdz3Jy7HhjDlz7+qDIlBn&#xA;LWK04UtYVdirN859xWjhStJwqtJwqtJwpWk4VWk4Uoe8hM9u8QPEtSh+RrkgmJosfnt5oG4yKVPY&#xA;9j8jk3JBBUsKXYq3wpu54jw7n6MFrTjJtRRxHfxPzONJtZkkIi3tJpSGHwL/ADH+GNWxMwE/0nRo&#xA;rpWWOP05IxWS8YgQqD09UtQJ8wfahOV5J8Hn5dfh+PixFyRcwsdL4mKNb+4b7F1ItbUEdfSQ/wB7&#xA;TxfbsUwR4snP0ju/i+Pd8PmpqPn934/FJJMiyqVbofDMumANIa1l1PTbkXNlKySLsHTuPBlPUe2Y&#xA;Ot7PxanGceWInA/jbuPucrBqZY5cUTRZbpv5k69FEXlsRIqECSeNnhHtyNHFc4jU+wWEy/d5Zw8i&#xA;OL/iXdY+25V6oxl9n63X35m6vcbW9oqntJO7SUr3H2MOm/4H2MH97lnIdwHD+mSMnbp/gjEfb+pj&#xA;V3eXt7cNc3sxnnYU5HYKOvFQNgM7rs/s3DpMfh4YiMfxzPV0mo1M80uKRtRJzPcdaTkkrScKp1eP&#xA;PHoVudNIWxkjCak8VPUM5ZjwuCPi4kKOA+yQP5uWYkADlPH9X8PdXl+nr8Kbj9O3LqkJOZrUtwq0&#xA;ThVbhS7FXYqzbOfcVonClaTklWk4UrCcKrScKtE4UrCcKqciJIpV1DKexySQUDPoExia4g2hH85o&#xA;CfBSftH2GAzF11boz70qasZK8SGHUsN/uyVNlrCSTU9cKr4YJZmoi18T2GFBICaWOkM8qRxxtcXD&#xA;7JGiliT7KNziSIizya+InYJybXTrEVvXF1cjpZwMOC/8ZZlqP9ilf9ZTlXHKf07DvP6B+v5FeEDn&#xA;uUJe6ndXarG5EdvGSYraMcIkr3Cjv4sdz3OW48Qjv17+qJTJQyTyxq6K3wOKOpoQfoPcdjlhiCxB&#xA;db21zdTCG3jaWVqkIgJNBuTt2HfDKYiLJoJAJ5Iww6Xp5/0llv7tf+PaJv3Cn/iyVd3+UZp/lZVx&#xA;Tny9Me/r8B0+PyZ0I89yg77Uru8KCZ/3cYpDCgCRxg9QiLRRXv498tx4ox5ftRKRKEOWsVpOFVpO&#xA;FK0nJKr2dheXshS2j58BykckKiL/ADO7EKi+7GmQyZIwFk/jy72UYk8kZJPY6dY3dnbTG7ub1Fiu&#xA;J0qsCIsqy8U5ANIS0a/EQAN6A1rlQjLJISI4RHcd/KvhzP7OTOwAQOqT5lta0nCrWFLWKuxV2Ks1&#xA;JzQOMtJwhVpOSVaThStJwqtJwpWk4VaALMFFKk0FSAN/c7YVVeVrB0AuJfE1Ean5bF/poPmMjRPk&#xA;GWwUJ55Zn5ysWalB4AdgANgPYZOMQOSk2hp7eGYUkWvge/35NQSEONMtQa0Y+xP9MaZeIVcKqKFU&#xA;AAdAMkxTnUXuLWwgWxHp6fcQx+tcR7mWVkBljlcb/C9QIzQUAND9o4uICUjxfUCdu4dCPh1/sbpW&#xA;BtySMnMxqa3JoOp6DCqYfoqG0HqatIYD1WxShuW7/EDtED4vv3CnKfGMtoC/Pp+34fMNnBX1ftUb&#xA;rV5XgNrbItpZGnKGKtXp0Mrn4pD33+EdgMlDCAeI+qX45d34tBn0GwS4nMhi1hVaThVaThStJwqt&#xA;JwqvN1c/Vvqvqt9W5+p6NTw5kceXHpWgpg4BfFW7KzVKByaGjklWnFLWFXYq7FXYqzQnNC4y0nCq&#xA;0nClaThVaTkkrScKrScKrCcKrScklaTirWFVpOFK0nJKrWmoXdm7NbycQ44yxkBkdevF0aqsPYjI&#xA;TxxlzZRkRyVZZ9HnPNreS2kP2lhcPGT/AJKv8S/SzYBHIOoPv5/j4BkTE9G/0tFarTS4DbSH7V07&#xA;CSf/AGDhUEf+xHL/ACsfBMvrN+XT9vx28k8dfSlbMSSSak7knMgNa0nClbklaJwqtJwqtJwpWk4V&#xA;Wk4UrScKrcKrScKWsKuxV2KuxV2KsyJzROMtJwpWk4VWk4VWk5JK0nCq0nCq0nClaThVbhVonCq0&#xA;nClaThVaThStJySrScKrCcKVpwq0cKrScKrScKVpOSVaThStJwqtwq0ThVbhS7FXYq7FXYq7FXoh&#xA;8seZf+rTe/8ASPL/AM05zf5rF/Pj8ww8DJ/NPyWnyx5m/wCrRe/9I8v/ADTh/NYv58fmF8DJ/NPy&#xA;Wnyv5m/6tF7/ANI8v/NOH83i/nx+YT4GT+afk0fK/mf/AKtF7/0jy/8ANOH83h/nx+YXwMn80/Ja&#xA;fK3mf/qz3v8A0jS/804fzeH+fH5hfAyfzT8lp8q+aP8Aqz33/SNL/wA04fzeH+fH5hfAyfzT8lp8&#xA;q+aP+rPff9I03/NOH83h/nx+YT4GT+afktPlTzT/ANWe+/6Rpv8AmnD+cw/z4/6YL4GT+afk0fKn&#xA;mn/qzX3/AEjTf804fzmH+fH/AEwXwJ/zT8mj5T81f9Wa+/6Rpv8AmnD+cw/z4/6YL4E/5p+S0+U/&#xA;NX/Vmvv+kab/AJpw/nMP8+P+mCfAn/NPyWnyl5q/6s19/wBI03/NOH85h/nx/wBMF8Cf80/JafKX&#xA;mv8A6st//wBI03/NOH87h/nx/wBMF8Cf80/JafKPmz/qy3//AEizf804fzuD+fD/AEwT4E/5p+TR&#xA;8o+bP+rLf/8ASLN/zTh/O4P58P8ATBfAn/NPyWnyh5t/6sl//wBIs3/NOH87g/nw/wBMF8Cf80/J&#xA;afKHm3/qyX//AEizf804fzuD+fD/AEwXwZ/zT8mv8H+bf+rJf/8ASLN/zTh/PYP58P8ATBPgz/mn&#xA;5LT5P83f9WTUP+kWb/mnD+ewfz4f6YL4M/5p+S0+TvN3/Vj1D/pFm/5pw/nsH8+H+mC+DP8Amn5N&#xA;Hyd5v/6seof9Is3/ADTh/PYP9Uh/pgvgz/mn5LT5N83/APVj1D/pFn/5pw/nsH+qQ/0wT4M/5p+S&#xA;0+TfOH/Vi1D/AKRZ/wDmjD+ewf6pD/TBfBn3H5LT5M84f9WLUP8ApEn/AOaMP5/T/wCqQ/0w/Wnw&#xA;Z9x+TR8mecf+rFqP/SJP/wA0Yfz+n/1SH+mH618Gfcfk0fJfnH/qxaj/ANIk/wDzRh/P6f8A1SH+&#xA;mH618Gfcfk1/gvzj/wBWLUf+kSf/AJox/P6f/VIf6YfrXwZ9x+Tv8F+cf+rFqP8A0iT/APNGP5/T&#xA;/wCqQ/0w/Wvgz7j8nf4L84/9WLUf+kSf/mjH8/p/9Uh/ph+tfBn3H5O/wX5x/wCrFqP/AEiT/wDN&#xA;GP5/T/6pD/TD9a+DPuPyd/gvzj/1YtR/6RJ/+aMfz+n/ANUh/ph+tfBn3H5O/wAF+cf+rFqP/SJP&#xA;/wA0Y/n9P/qkP9MP1r4M+4/J/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:0a157e38-e645-b243-92e9-1378028fc77c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0a157e38-e645-b243-92e9-1378028fc77c</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:78e43ac2-82ba-4e78-a5ff-e157bcced072</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5f7e3301-b373-1345-96c1-7aaeed88212d</stRef:instanceID>
            <stRef:documentID>xmp.did:5f7e3301-b373-1345-96c1-7aaeed88212d</stRef:documentID>
            <stRef:originalDocumentID>uuid:78e43ac2-82ba-4e78-a5ff-e157bcced072</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0a40e74a-ba32-ac40-9928-e01056f6c658</stEvt:instanceID>
                  <stEvt:when>2017-11-22T15:13:46+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:980b413e-365e-d24d-9266-6ad4f92efd7e</stEvt:instanceID>
                  <stEvt:when>2017-11-22T15:17:42+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6ffefef8-e85a-f042-9346-0883495c84f5</stEvt:instanceID>
                  <stEvt:when>2018-03-11T21:23:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:caa34e88-06fa-654c-95ff-e7ada989e693</stEvt:instanceID>
                  <stEvt:when>2018-04-05T12:53:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cb26eb1d-58c2-d243-8a83-64573b87606b</stEvt:instanceID>
                  <stEvt:when>2018-04-06T13:06:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5f7e3301-b373-1345-96c1-7aaeed88212d</stEvt:instanceID>
                  <stEvt:when>2018-04-26T13:20:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0a157e38-e645-b243-92e9-1378028fc77c</stEvt:instanceID>
                  <stEvt:when>2018-05-01T14:24:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <dc:format>application/postscript</dc:format>
         <pdf:Producer>Adobe PDF Library 15.0</pdf:Producer>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>700.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE Cool Gray 2 CP</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>214</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE Cool Gray 3 CP</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>199</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=240 B=241</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>240</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=220 G=77 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>220</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE P 179-16 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>27</xmpG:green>
                           <xmpG:blue>31</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=126 B=234 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>126</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=40 G=80 B=203 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>40</xmpG:red>
                           <xmpG:green>80</xmpG:green>
                           <xmpG:blue>203</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=138 G=200 B=253 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>138</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>253</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE P 1-1 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>254</xmpG:green>
                           <xmpG:blue>251</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE P 4-6 C</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
700 500 li
700 0 li
cp
clp
700 500 mo
0 500 li
0 0 li
700 0 li
700 500 li
349.681 387.474 mo
292.577 420.442 li
285.369 424.604 285.331 431.369 292.487 435.528 cv
310.548 446.023 li
314.125 448.102 318.834 449.142 323.548 449.142 cv
328.264 449.142 332.986 448.102 336.591 446.021 cv
430.354 391.887 li
441.534 391.838 452.673 389.343 461.18 384.4 cv
470.447 379.013 474.688 371.819 473.909 364.77 cv
473.91 364.77 473.91 364.77 473.91 364.77 cv
473.91 364.77 li
478.191 364.011 482.303 362.875 486.096 361.35 cv
486.903 361.375 487.709 361.388 488.517 361.388 cv
499.81 361.388 511.088 358.892 519.68 353.9 cv
530.348 347.698 534.355 339.101 531.712 331.088 cv
531.732 323.93 li
531.728 325.544 531.395 327.158 530.735 328.735 cv
530.735 328.735 li
533.552 322.007 530.4 314.604 521.294 309.347 cv
514.367 305.347 505.306 303.347 496.255 303.347 cv
487.207 303.347 478.17 305.347 471.289 309.346 cv
468.856 310.76 466.854 312.33 465.286 314 cv
464.553 314.259 463.831 314.532 463.12 314.819 cv
462.322 314.793 461.522 314.78 460.723 314.78 cv
458.509 314.78 456.296 314.879 454.1 315.07 cv
452.46 315.21 450.85 315.41 449.25 315.66 cv
449.24 315.66 li
449.198 315.667 449.156 315.673 449.114 315.68 cv
605.062 225.644 li
605.379 225.461 605.38 225.171 605.065 224.988 cv
604.91 224.898 604.705 224.852 604.5 224.852 cv
604.296 224.852 604.092 224.897 603.935 224.988 cv
445.81 316.281 li
443.036 316.858 440.345 317.6 437.78 318.51 cv
437.57 318.729 437.36 318.96 437.17 319.19 cv
437.04 319.34 436.91 319.5 436.78 319.66 cv
436.62 319.86 436.47 320.05 436.33 320.25 cv
436.05 320.64 435.78 321.03 435.53 321.43 cv
435.41 321.64 435.29 321.84 435.18 322.04 cv
435.081 322.22 434.988 322.401 434.898 322.582 cv
408.062 338.075 li
404.222 340.292 402.418 343.25 402.657 346.159 cv
401.239 346.802 399.873 347.502 398.57 348.26 cv
381.398 358.23 381.485 374.417 398.769 384.4 cv
406.937 389.114 417.472 391.602 428.13 391.865 cv
335.463 445.365 li
332.173 447.265 327.86 448.215 323.553 448.215 cv
319.247 448.215 314.948 447.266 311.683 445.368 cv
293.622 434.873 li
287.09 431.077 287.126 424.897 293.705 421.098 cv
350.808 388.13 li
369.008 398.706 li
350.891 388.082 li
372.376 375.678 li
372.687 375.497 372.689 375.202 372.379 375.022 cv
372.222 374.931 372.018 374.886 371.815 374.886 cv
371.61 374.886 371.404 374.932 371.248 375.022 cv
349.768 387.424 li
334.077 378.223 li
417.578 330.014 li
425.792 325.271 425.835 317.586 417.675 312.844 cv
415.497 311.578 li
415.536 297.856 li
419.283 295.679 li
415.548 293.522 li
415.68 247.179 li
479.583 210.285 li
476.828 218.384 480.895 227.119 491.77 233.4 cv
500.418 238.392 511.725 240.888 523.017 240.888 cv
526.372 240.888 529.725 240.668 533.008 240.227 cv
506.554 255.501 li
503.267 257.398 498.957 258.348 494.652 258.348 cv
490.344 258.348 486.042 257.398 482.772 255.498 cv
466.408 245.988 li
466.253 245.898 466.049 245.853 465.843 245.853 cv
465.638 245.853 465.433 245.898 465.277 245.988 cv
464.96 246.171 464.964 246.463 465.273 246.643 cv
481.638 256.153 li
485.217 258.233 489.93 259.273 494.647 259.273 cv
499.362 259.273 504.08 258.235 507.681 256.156 cv
536.114 239.741 li
542.729 238.551 548.951 236.438 554.18 233.4 cv
571.352 223.416 571.265 207.231 553.968 197.26 cv
545.326 192.268 534.019 189.772 522.727 189.772 cv
511.435 189.772 500.156 192.268 491.57 197.26 cv
491.533 197.282 491.496 197.303 491.459 197.325 cv
490.91 195.141 489.193 193.04 486.308 191.363 cv
454.143 172.671 li
447.606 168.873 447.641 162.692 454.22 158.894 cv
531.47 114.294 li
453.093 158.238 li
445.89 162.397 445.852 169.167 453.008 173.326 cv
485.173 192.019 li
488.138 193.742 489.75 195.953 490.014 198.211 cv
485.263 201.265 482.016 204.826 480.271 208.576 cv
415.684 245.865 li
416.016 128.975 li
416.038 120.772 410.269 110.779 403.131 106.658 cv
375.152 90.5041 li
470.128 35.6695 li
374.846 90.3274 li
337.333 68.6695 li
335.25 67.4669 333.279 66.8969 331.533 66.8969 cv
327.297 66.8969 324.38 70.2514 324.364 76.06 cv
324.241 119.356 li
117.965 237.684 li
110.762 241.843 110.724 248.608 117.88 252.767 cv
196.572 298.497 li
186.738 304.175 li
179.535 308.334 179.492 315.102 186.648 319.261 cv
223.632 340.753 li
175.407 368.596 li
167.193 373.338 167.15 381.029 175.31 385.772 cv
215.532 409.146 li
172.417 434.039 li
215.854 409.333 li
233.145 419.382 li
237.224 421.752 242.58 422.937 247.943 422.937 cv
253.311 422.937 258.684 421.751 262.792 419.379 cv
333.918 378.314 li
349.681 387.474 li
404.239 345.475 mo
404.313 343.028 405.965 340.592 409.189 338.73 cv
434.175 324.305 li
434.163 324.34 434.151 324.375 434.14 324.41 cv
434.08 324.6 434.03 324.78 433.98 324.96 cv
433.95 325.05 433.92 325.14 433.9 325.24 cv
433.84 325.51 li
433.79 325.69 433.76 325.87 433.72 326.059 cv
433.69 326.24 433.66 326.42 433.63 326.61 cv
433.61 326.79 433.59 326.97 433.57 327.16 cv
433.55 327.34 433.54 327.53 433.53 327.71 cv
433.519 328 433.51 328.28 433.519 328.57 cv
433.51 328.47 433.51 328.36 433.51 328.26 cv
433.49 334 li
433.49 334 li
427.63 334.41 421.92 335.67 416.95 337.78 cv
415.5 338.4 414.1 339.09 412.79 339.85 cv
410.355 341.266 408.359 342.832 406.791 344.498 cv
405.926 344.804 405.074 345.13 404.239 345.475 cv
224.772 340.095 mo
187.788 318.603 li
181.256 314.807 181.286 308.629 187.865 304.83 cv
197.7 299.152 li
246.533 327.531 li
224.772 340.095 li
247.086 327.212 mo
198.474 298.706 li
220.241 286.139 li
221.936 285.16 223.902 284.433 226 283.959 cv
225.999 284 225.998 284.041 225.996 284.082 cv
273.419 312.008 li
247.086 327.212 li
524.478 321.199 mo
523.831 320.666 523.143 320.144 522.417 319.634 cv
522.114 319.006 521.743 318.389 521.307 317.79 cv
521.062 317.45 521.335 317.061 521.921 316.92 cv
522.066 316.885 522.217 316.868 522.365 316.868 cv
522.667 316.868 522.959 316.938 523.174 317.062 cv
523.277 317.122 523.362 317.194 523.423 317.277 cv
524.168 318.302 524.737 319.373 525.124 320.463 cv
525.233 320.771 524.952 321.073 524.478 321.199 cv
519.739 315.38 mo
519.439 315.38 519.142 315.312 518.922 315.185 cv
518.781 315.087 li
517.804 314.252 516.68 313.465 515.439 312.749 cv
515.387 312.719 li
514.938 312.46 514.933 312.038 515.378 311.779 cv
515.602 311.649 515.896 311.585 516.189 311.585 cv
516.484 311.585 516.778 311.65 517.003 311.779 cv
517.041 311.802 li
518.404 312.589 519.622 313.439 520.68 314.344 cv
521.034 314.646 520.899 315.062 520.375 315.269 cv
520.18 315.344 519.959 315.38 519.739 315.38 cv
476.759 311.147 mo
477.763 310.625 478.828 310.143 479.939 309.709 cv
480.135 309.633 480.358 309.596 480.579 309.596 cv
480.877 309.596 481.171 309.663 481.389 309.789 cv
481.532 309.891 li
481.774 310.096 481.79 310.352 481.613 310.56 cv
479.981 310.702 478.359 310.898 476.759 311.147 cv
511.908 310.887 mo
511.69 310.887 511.469 310.851 511.272 310.775 cv
509.8 310.208 508.225 309.725 506.589 309.333 cv
506.442 309.3 506.316 309.25 506.211 309.189 cv
505.895 309.007 505.775 308.723 505.958 308.467 cv
506.138 308.21 506.567 308.055 507.019 308.055 cv
507.164 308.055 507.311 308.071 507.453 308.104 cv
509.228 308.526 510.941 309.053 512.541 309.669 cv
512.717 309.752 li
513.097 309.971 513.173 310.322 512.864 310.591 cv
512.645 310.783 512.28 310.887 511.908 310.887 cv
413.938 310.672 mo
413.315 310.31 li
413.185 300.535 li
413.175 299.228 li
414.156 298.658 li
414.124 301.078 li
413.938 310.672 li
485.447 309.411 mo
485.143 309.411 484.848 309.341 484.632 309.217 cv
484.529 309.157 484.444 309.085 484.383 309.002 cv
484.141 308.663 484.414 308.273 484.997 308.132 cv
486.766 307.705 488.614 307.378 490.494 307.161 cv
490.57 307.152 490.646 307.148 490.72 307.148 cv
491.03 307.148 491.321 307.221 491.533 307.344 cv
491.689 307.434 491.802 307.55 491.848 307.683 cv
491.976 308.044 491.571 308.394 490.952 308.465 cv
489.22 308.666 487.516 308.968 485.887 309.36 cv
485.743 309.395 485.594 309.411 485.447 309.411 cv
501.723 308.465 mo
501.651 308.465 501.578 308.461 501.505 308.453 cv
499.79 308.259 498.03 308.16 496.279 308.16 cv
496.262 308.16 496.245 308.16 496.228 308.16 cv
495.906 308.16 495.62 308.086 495.412 307.966 cv
495.203 307.846 495.074 307.68 495.073 307.497 cv
495.068 307.13 495.58 306.831 496.215 306.83 cv
496.25 306.83 496.285 306.83 496.32 306.83 cv
498.202 306.83 500.093 306.937 501.939 307.148 cv
502.172 307.174 502.375 307.239 502.531 307.33 cv
502.793 307.481 502.926 307.703 502.852 307.929 cv
502.746 308.245 502.263 308.465 501.723 308.465 cv
410.001 301.952 mo
409.702 301.952 409.366 301.855 409.01 301.649 cv
365.172 276.34 li
365.173 276.339 li
409.01 301.648 li
409.366 301.854 409.703 301.952 410.001 301.952 cv
410.723 301.952 411.22 301.381 411.223 300.393 cv
411.223 300.362 li
411.223 300.393 li
411.22 301.381 410.723 301.952 410.001 301.952 cv
401.862 299.076 mo
401.583 299.076 401.301 298.951 401.02 298.793 cv
400.698 298.603 400.378 298.368 400.058 297.959 cv
400.091 297.955 400.124 297.954 400.158 297.954 cv
400.446 297.954 400.734 298.08 401.021 298.242 cv
401.342 298.433 401.663 298.666 401.979 299.068 cv
401.941 299.073 401.901 299.076 401.862 299.076 cv
197.351 298.047 mo
119.015 252.111 li
112.484 248.316 112.519 242.136 119.093 238.34 cv
324.239 119.898 li
324.165 146.101 li
323.746 146.342 323.327 146.582 322.908 146.823 cv
314.893 151.432 309.952 159.972 309.952 169.218 cv
309.952 181.454 li
309.952 192.429 307.155 203.223 301.825 212.817 cv
300.898 214.485 299.841 216.069 298.667 217.554 cv
300.279 209.983 296.042 202.068 285.968 196.26 cv
277.326 191.268 266.019 188.772 254.727 188.772 cv
243.435 188.772 232.156 191.268 223.57 196.26 cv
210.278 203.978 207.328 215.419 214.688 224.826 cv
210.503 232.404 207.951 240.816 207.973 248.433 cv
207.981 251.228 208.335 253.73 208.988 255.913 cv
202.318 259.374 196.111 263.625 191.876 267.895 cv
184.36 275.47 185.508 280.63 193.887 280.63 cv
195.196 280.63 196.681 280.505 198.337 280.242 cv
208.576 278.619 222.099 272.305 231.347 265.165 cv
228.258 270.526 226.403 276.604 226.044 282.962 cv
223.514 283.474 221.137 284.315 219.113 285.483 cv
197.351 298.047 li
398.544 297.246 mo
393.836 294.409 389.126 291.637 384.413 288.873 cv
389.127 291.637 393.836 294.409 398.544 297.246 cv
300.438 296.409 mo
302.805 294.138 305.467 292.141 308.389 290.479 cv
327.396 279.667 li
327.563 279.964 327.734 280.257 327.91 280.548 cv
300.438 296.409 li
414.234 292.764 mo
413.122 292.121 li
413.081 286.697 li
414.324 285.975 li
414.234 292.764 li
411.249 291.04 mo
411.249 291.04 li
411.259 287.756 li
411.249 291.04 li
408.462 289.431 mo
408.462 289.431 li
408.462 289.43 408.462 289.428 408.462 289.427 cv
408.462 289.428 408.462 289.43 408.462 289.431 cv
384.413 288.873 mo
370.285 280.652 li
363.97 277.034 li
363.97 277.034 li
370.286 280.652 li
384.413 288.873 li
414.33 285.524 mo
413.067 284.795 li
412.988 274.195 li
412.927 265.709 412.9 257.243 412.892 248.789 cv
414.722 247.732 li
414.665 256.852 414.587 265.963 414.469 275.05 cv
414.33 285.524 li
411.27 283.758 mo
411.27 283.758 li
411.366 249.67 li
411.27 283.758 li
370.284 281.208 mo
370.284 281.208 li
363.539 277.283 li
363.539 277.283 li
370.284 281.208 li
362.407 276.625 mo
356.152 272.985 li
349.084 268.823 li
347.804 268.06 li
349.084 268.823 li
356.152 272.984 li
362.407 276.624 li
362.407 276.625 li
362.829 276.381 mo
356.153 272.557 li
362.829 276.381 li
362.829 276.381 li
364.036 275.684 mo
357.382 271.842 li
357.383 271.842 li
364.037 275.683 li
364.036 275.684 li
213.61 253.676 mo
213.201 252.682 212.881 251.597 212.654 250.441 cv
212.565 249.987 212.851 249.329 213.29 248.974 cv
213.45 248.863 li
213.579 248.789 213.704 248.752 213.816 248.752 cv
214.032 248.752 214.199 248.89 214.251 249.155 cv
214.498 250.426 214.872 251.605 215.356 252.654 cv
215.388 252.724 215.407 252.802 215.415 252.887 cv
214.813 253.142 214.211 253.405 213.61 253.676 cv
241.172 251.364 mo
241.045 250.878 240.816 250.44 240.49 250.056 cv
240.586 249.958 240.685 249.88 240.783 249.824 cv
240.911 249.75 241.036 249.712 241.149 249.712 cv
241.318 249.712 241.458 249.796 241.535 249.968 cv
241.699 250.324 241.536 250.929 241.172 251.364 cv
247.075 249.856 mo
249.377 246.747 251.406 243.367 253.078 239.864 cv
253.724 239.88 254.371 239.888 255.017 239.888 cv
258.714 239.888 262.41 239.621 266.01 239.086 cv
247.075 249.856 li
226.023 249.287 mo
224.796 248.871 223.969 247.774 223.557 246.013 cv
223.527 245.888 li
223.483 245.687 223.517 245.432 223.626 245.177 cv
223.736 244.917 223.906 244.688 224.105 244.529 cv
227.434 241.861 li
227.574 241.763 li
227.691 241.696 227.803 241.663 227.903 241.663 cv
228.087 241.663 228.23 241.774 228.286 241.98 cv
228.315 242.091 li
228.556 242.978 229.041 243.457 229.764 243.505 cv
229.81 243.508 229.858 243.51 229.907 243.51 cv
230.442 243.51 231.124 243.324 231.935 242.957 cv
232.334 242.777 232.76 242.559 233.241 242.281 cv
233.88 241.912 234.457 241.535 234.958 241.158 cv
235.694 240.608 236.271 240.056 236.672 239.521 cv
237.087 238.964 237.342 238.4 237.453 237.786 cv
238.807 238.125 240.184 238.424 241.579 238.681 cv
241.18 239.584 240.67 240.475 240.048 241.351 cv
238.872 243.001 237.353 244.513 235.533 245.837 cv
235.539 247.946 li
235.539 248.017 235.533 248.09 235.523 248.163 cv
235.127 248.136 234.712 248.122 234.277 248.122 cv
233.4 248.122 232.444 248.179 231.411 248.295 cv
231.411 248.291 li
231.407 248.293 231.404 248.295 231.401 248.296 cv
230.89 248.354 230.36 248.426 229.812 248.513 cv
228.591 248.706 227.324 248.966 226.023 249.287 cv
411.37 248.356 mo
411.526 193.387 li
411.37 248.356 li
243.87 247.687 mo
243.749 247.687 243.641 247.643 243.561 247.55 cv
243.307 247.264 243.405 246.627 243.779 246.121 cv
244.818 244.718 245.792 243.231 246.677 241.698 cv
246.835 241.424 247.043 241.213 247.251 241.093 cv
247.377 241.02 247.502 240.981 247.617 240.981 cv
247.693 240.981 247.764 240.998 247.827 241.034 cv
248.147 241.217 248.149 241.806 247.834 242.357 cv
246.874 244.017 245.816 245.633 244.69 247.154 cv
244.549 247.343 244.394 247.483 244.236 247.575 cv
244.11 247.648 243.984 247.687 243.87 247.687 cv
412.891 247.478 mo
412.884 238.878 412.896 230.288 412.909 221.7 cv
412.95 211.96 412.99 202.22 413.058 192.497 cv
414.859 191.45 li
414.876 201.918 414.86 212.367 414.845 222.818 cv
414.812 230.687 414.778 238.555 414.73 246.416 cv
412.891 247.478 li
212.691 246.589 mo
212.424 246.589 212.24 246.376 212.239 246.011 cv
212.239 245.97 li
212.234 244.417 212.359 242.786 212.613 241.125 cv
212.689 240.631 213.03 240.124 213.412 239.904 cv
213.566 239.832 li
213.641 239.806 213.711 239.793 213.776 239.793 cv
214.096 239.793 214.284 240.096 214.212 240.559 cv
213.978 242.094 213.862 243.599 213.866 245.031 cv
213.866 245.071 li
213.868 245.586 213.505 246.218 213.054 246.478 cv
212.924 246.554 212.801 246.589 212.691 246.589 cv
227.892 237.356 mo
227.749 237.356 227.616 237.35 227.494 237.338 cv
226.534 237.245 225.766 236.881 225.215 236.258 cv
224.638 235.606 224.341 234.576 224.337 233.188 cv
224.336 233.034 224.339 232.88 224.345 232.726 cv
226.935 234.169 229.749 235.393 232.725 236.4 cv
231.736 236.671 li
230.067 237.126 228.776 237.356 227.892 237.356 cv
214.168 236.925 mo
213.788 236.925 213.614 236.506 213.776 235.955 cv
214.29 234.21 214.932 232.446 215.685 230.709 cv
215.84 230.348 216.098 230.052 216.36 229.9 cv
216.483 229.829 216.607 229.79 216.723 229.79 cv
216.753 229.79 216.783 229.792 216.812 229.798 cv
217.189 229.868 217.29 230.39 217.042 230.965 cv
216.351 232.565 215.759 234.192 215.285 235.799 cv
215.157 236.234 214.853 236.629 214.533 236.813 cv
214.43 236.873 214.325 236.91 214.222 236.922 cv
214.204 236.924 214.185 236.925 214.168 236.925 cv
414.859 191.306 mo
413.074 190.275 li
413.125 183.327 413.191 176.387 413.281 169.46 cv
413.625 143.437 li
413.881 130.469 li
413.889 129.381 413.966 128.328 413.862 127.218 cv
413.763 126.1 413.491 124.904 413.084 123.705 cv
412.285 121.3 410.842 118.898 409.133 116.968 cv
410.88 118.812 412.425 121.204 413.341 123.698 cv
413.804 124.94 414.121 126.2 414.263 127.385 cv
414.408 128.588 414.363 129.66 414.393 130.765 cv
414.574 143.986 li
414.77 170.32 li
414.821 177.329 414.847 184.321 414.859 191.306 cv
411.537 189.388 mo
411.537 189.388 li
411.694 133.946 li
411.694 133.946 411.694 133.947 411.694 133.947 cv
411.537 189.388 li
328.445 121.314 mo
328.419 117.485 li
328.557 117.405 li
328.547 121.255 li
328.445 121.314 li
328.415 116.962 mo
328.265 95.5904 li
328.085 81.8243 li
328.266 95.5904 li
328.62 95.3844 li
328.559 116.879 li
328.415 116.962 li
384.917 110.811 mo
384.709 110.811 384.473 110.743 384.224 110.599 cv
362.285 97.9327 li
366.576 95.4555 li
384.238 105.653 li
385.094 106.147 385.78 107.342 385.778 108.326 cv
385.774 109.711 li
385.772 110.408 385.424 110.811 384.917 110.811 cv
361.937 97.732 mo
357.202 94.9981 li
356.351 94.5064 355.659 93.3092 355.662 92.3252 cv
355.666 90.9405 li
355.668 90.2433 356.018 89.8409 356.525 89.8409 cv
356.733 89.8409 356.968 89.9087 357.216 90.0518 cv
366.242 95.2629 li
361.937 97.732 li
328.085 81.8243 mo
328.079 80.6905 328.036 79.5034 328.062 78.4097 cv
328.103 77.3194 328.324 76.3491 328.695 75.5245 cv
329.061 74.6963 329.608 74.0591 330.276 73.6142 cv
330.947 73.1842 331.746 72.9621 332.624 72.9392 cv
332.627 72.9393 332.629 72.9394 332.632 72.9395 cv
331.751 72.9609 330.948 73.1831 330.276 73.6142 cv
329.608 74.0591 329.061 74.6963 328.695 75.5239 cv
328.325 76.3497 328.103 77.3194 328.062 78.4097 cv
328.036 79.5034 328.08 80.6905 328.085 81.8243 cv
327.757 77.3401 mo
327.884 76.5529 328.109 75.8434 328.426 75.2348 cv
328.109 75.8434 327.884 76.5532 327.757 77.3401 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.294118 .603922 .917647 ]
/C1 [.294118 .603922 .917647 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.294118 .603922 .917647 ]
/C1 [.188235 .372549 .94902 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~91hfK8kM]J8kMZH8P)KF8P)KE84Z9B84Z9B84Q0?7n6'>7n6$<7Rfj:7Rfj:77BX677BX6779O36psF2
6psF16UO4.6UO4.6:+"*6:+"*6:*t(5s[e&5s[e%5X7S"5X7S"5X.It5<h@s5<h=q5!D.o5!D.o4Ztqk
4Ztqk4Zkhh4?P_g4?P_f4$,Mc4$,Mc3]];_3]];_3]]8]3B9)[3B9)Z3&ilW3&ilW3&`cT2`EZS2`EWQ
2E!HO2E!HO2)R6K2)R6K2)I-H1c.$G1c.$F1G^gC1G^gC1,:U?1,:U?1,:R=0ekC;0ekC:0JG170JG17
~>
<~R[KS3R@'A/R$X/+Q^=#(QBmf$Q'ISuPa%DrPEV2nP*1ujOcbcgOH>QcO,o?_NfK-[NfB$XNJrgTN/NUP
Mi3IMMMd7IM2@%ELkpkBLPLY>L5(G:KnY57KS5#3K7ef/JqAT+Jq8K(JUi9$J:E&uIt)orIXZ]nI=6Kj
I!g<gH[C*cH?sm_H$O[\G^+IXGB\7TG'8%PG'.qMF`__IFE;MEF)uABEcQ/>EH,r:E,]c7Df9Q3DJj?/
D/F-,Ci!p(CMR^$C2.KuC2%BrBkV0nBP1sjB4kggAnGUcAS#C_A7T4\@q0"X@U`eT@:<SQ?smAM?XI/I
~>
<~lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[["lKdd%lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg4!)m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-X3-mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
mI'E1mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdKW5n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*oi9nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF?&=naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
255.017 239.888 mo
254.371 239.888 253.724 239.88 253.078 239.864 cv
256.272 233.169 258.159 226.024 258.141 219.469 cv
258.109 208.198 252.451 201.688 244.232 201.688 cv
240.843 201.688 237.02 202.794 232.974 205.13 cv
225.749 209.301 219.249 216.568 214.688 224.826 cv
207.328 215.419 210.278 203.978 223.57 196.26 cv
232.156 191.268 243.435 188.772 254.727 188.772 cv
266.019 188.772 277.326 191.268 285.968 196.26 cv
296.042 202.068 300.279 209.983 298.667 217.554 cv
295.872 221.089 292.412 224.068 288.464 226.314 cv
266.01 239.086 li
262.41 239.621 258.714 239.888 255.017 239.888 cv
241.579 238.681 mo
240.184 238.424 238.807 238.125 237.453 237.786 cv
237.496 237.544 237.517 237.293 237.516 237.032 cv
237.514 236.362 237.325 235.948 236.934 235.769 cv
236.742 235.678 236.489 235.632 236.178 235.632 cv
235.82 235.632 235.385 235.692 234.875 235.813 cv
234.764 235.84 234.649 235.869 234.529 235.905 cv
232.725 236.4 li
229.749 235.393 226.935 234.169 224.345 232.726 cv
224.431 230.362 225.231 228.088 226.725 225.958 cv
227.877 224.321 229.426 222.815 231.334 221.478 cv
231.329 219.524 li
231.327 218.87 231.786 218.072 232.351 217.746 cv
234.418 216.552 li
234.583 216.457 234.739 216.412 234.877 216.412 cv
235.216 216.412 235.45 216.68 235.451 217.144 cv
235.457 219.152 li
236.711 218.62 237.808 218.356 238.734 218.356 cv
238.895 218.356 239.051 218.364 239.202 218.38 cv
240.785 218.549 241.799 219.705 242.219 221.814 cv
242.243 221.96 li
242.287 222.163 242.238 222.437 242.11 222.704 cv
242.005 222.94 241.817 223.18 241.612 223.322 cv
238.128 225.827 li
238.013 225.893 237.902 225.925 237.804 225.925 cv
237.607 225.925 237.457 225.799 237.407 225.567 cv
237.384 225.45 li
237.238 224.741 236.855 224.365 236.214 224.299 cv
236.155 224.294 236.093 224.291 236.029 224.291 cv
235.7 224.291 235.317 224.366 234.885 224.514 cv
234.395 224.682 233.84 224.944 233.23 225.296 cv
232.747 225.576 232.298 225.865 231.897 226.154 cv
231.152 226.685 230.578 227.216 230.186 227.729 cv
229.677 228.401 229.458 229.03 229.461 229.825 cv
229.462 230.28 229.557 230.589 229.743 230.749 cv
229.936 230.917 230.23 230.999 230.618 230.999 cv
230.679 230.999 230.743 230.997 230.809 230.993 cv
231.044 230.979 231.432 230.911 231.992 230.779 cv
232.629 230.631 233.457 230.406 234.521 230.092 cv
234.683 230.046 li
234.835 230.002 234.982 229.961 235.126 229.922 cv
236.723 229.482 237.929 229.252 238.707 229.238 cv
238.759 229.237 238.811 229.236 238.862 229.236 cv
239.696 229.236 240.377 229.386 240.887 229.686 cv
241.44 230.012 241.874 230.514 242.175 231.177 cv
242.479 231.842 242.634 232.71 242.637 233.762 cv
242.642 235.43 242.287 237.075 241.579 238.681 cv
249.37 238.157 mo
249.34 238.157 249.31 238.155 249.281 238.149 cv
248.908 238.078 248.803 237.555 249.054 236.981 cv
249.749 235.379 250.34 233.751 250.817 232.146 cv
250.944 231.712 251.247 231.32 251.566 231.136 cv
251.671 231.075 251.777 231.037 251.88 231.027 cv
251.899 231.025 251.918 231.024 251.936 231.024 cv
252.312 231.024 252.487 231.444 252.324 231.996 cv
251.809 233.734 251.164 235.499 250.409 237.238 cv
250.254 237.601 249.997 237.895 249.733 238.047 cv
249.61 238.118 249.486 238.157 249.37 238.157 cv
252.329 228.151 mo
252.009 228.151 251.822 227.847 251.893 227.385 cv
252.133 225.837 252.252 224.32 252.248 222.871 cv
252.248 222.794 li
252.246 222.275 252.608 221.647 253.057 221.388 cv
253.189 221.312 253.314 221.276 253.424 221.276 cv
253.691 221.276 253.873 221.487 253.875 221.854 cv
253.875 221.918 li
253.879 223.501 253.752 225.148 253.492 226.826 cv
253.418 227.315 253.078 227.818 252.697 228.038 cv
252.539 228.112 li
252.464 228.138 252.394 228.151 252.329 228.151 cv
218.474 226.965 mo
218.398 226.965 218.327 226.947 218.264 226.912 cv
217.943 226.729 217.939 226.141 218.257 225.589 cv
219.213 223.927 220.269 222.312 221.395 220.788 cv
221.534 220.601 221.691 220.458 221.848 220.368 cv
221.975 220.294 222.1 220.256 222.214 220.256 cv
222.335 220.256 222.443 220.3 222.524 220.393 cv
222.777 220.675 222.68 221.315 222.308 221.816 cv
221.269 223.223 220.296 224.713 219.413 226.245 cv
219.255 226.518 219.047 226.732 218.839 226.853 cv
218.714 226.925 218.588 226.965 218.474 226.965 cv
252.29 219.115 mo
252.074 219.115 251.908 218.978 251.857 218.713 cv
251.607 217.444 251.231 216.27 250.743 215.223 cv
250.569 214.844 250.761 214.183 251.176 213.744 cv
251.279 213.635 251.386 213.55 251.491 213.489 cv
251.619 213.415 251.745 213.378 251.858 213.378 cv
252.025 213.378 252.165 213.461 252.245 213.63 cv
252.774 214.769 253.18 216.046 253.451 217.425 cv
253.544 217.878 253.257 218.539 252.818 218.894 cv
252.657 219.004 li
252.527 219.079 252.402 219.115 252.29 219.115 cv
224.932 218.224 mo
224.764 218.224 224.624 218.141 224.546 217.97 cv
224.372 217.591 224.567 216.932 224.98 216.494 cv
226.233 215.167 227.545 213.947 228.878 212.87 cv
229.038 212.76 li
229.167 212.685 229.292 212.649 229.404 212.649 cv
229.62 212.649 229.788 212.786 229.839 213.051 cv
229.929 213.506 229.645 214.162 229.203 214.521 cv
227.976 215.514 226.766 216.638 225.612 217.857 cv
225.51 217.967 225.404 218.051 225.299 218.112 cv
225.17 218.186 225.045 218.224 224.932 218.224 cv
249.256 212.583 mo
249.135 212.583 249.028 212.54 248.947 212.45 cv
248.243 211.659 247.433 211.005 246.542 210.501 cv
246.221 210.322 246.217 209.73 246.535 209.179 cv
246.694 208.904 246.902 208.692 247.111 208.571 cv
247.236 208.499 247.361 208.46 247.476 208.46 cv
247.551 208.46 247.622 208.476 247.685 208.512 cv
248.652 209.057 249.532 209.767 250.295 210.622 cv
250.546 210.906 250.451 211.544 250.079 212.049 cv
249.939 212.238 249.78 212.38 249.625 212.47 cv
249.497 212.544 249.37 212.583 249.256 212.583 cv
232.576 212.043 mo
232.309 212.043 232.127 211.832 232.125 211.465 cv
232.124 210.949 232.486 210.318 232.938 210.058 cv
232.976 210.036 li
234.336 209.25 235.686 208.623 236.997 208.159 cv
237.071 208.133 237.142 208.12 237.207 208.12 cv
237.525 208.12 237.714 208.423 237.642 208.887 cv
237.57 209.374 237.228 209.882 236.847 210.102 cv
236.691 210.175 li
235.479 210.604 234.236 211.184 232.993 211.902 cv
232.943 211.931 li
232.811 212.007 232.686 212.043 232.576 212.043 cv
243.703 209.458 mo
243.674 209.458 243.647 209.456 243.62 209.451 cv
242.969 209.329 242.29 209.268 241.59 209.268 cv
241.165 209.268 240.733 209.291 240.295 209.336 cv
240.275 209.338 240.255 209.339 240.236 209.339 cv
239.86 209.339 239.685 208.923 239.846 208.374 cv
239.976 207.937 240.278 207.543 240.598 207.358 cv
240.701 207.298 240.807 207.261 240.909 207.25 cv
241.391 207.199 241.867 207.174 242.333 207.174 cv
243.086 207.174 243.817 207.24 244.519 207.37 cv
244.892 207.441 244.996 207.965 244.748 208.537 cv
244.593 208.899 244.332 209.195 244.072 209.346 cv
243.947 209.418 243.82 209.458 243.703 209.458 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.223529 .403922 .819608 ]
/C1 [.223529 .403922 .819608 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.223529 .403922 .819608 ]
/C1 [.203922 .356863 .827451 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW2`EZS2`EZS2`EZS
2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZR2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!EM2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K
2)R6K2)R6K2)R6K2)I-H1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
~>
<~AnGXeAnGXeAnGXeAnGXeAnGXeAnGUcAS#FaAS#FaAS#FaAS#FaAS#F`A7T4]A7T4]A7T4]A7T4]A7T4]
@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q/tW@U`eU@U`eU@U`eU@U`eU@U`eT@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
?smAM?smAM?smAM?smAM?smAM?sm>K?XI/I?XI/I?XI/I?XI/I?XI/H?=$rE?=$rE?=$rE?=$rE?=$rE
?!U`A?!U`A?!U`A?!U`A?!U`A?!U]?>[1N=>[1N=>[1N=>[1N=>[1N<>?b<9>?b<9>?b<9>?b<9>?b<9
~>
<~d*^7gdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@h
dF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@h
dF-IkdaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRl
daHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRldaHRl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
283.76 214.31 mo
283.7 214.34 li
282.33 215.14 280.84 215.85 279.26 216.46 cv
278.8 216.64 278.19 216.6 277.81 216.38 cv
277.67 216.28 li
277.32 215.98 277.45 215.56 277.98 215.36 cv
279.21 214.88 280.38 214.34 281.47 213.74 cv
281.67 213.63 281.87 213.52 282.06 213.41 cv
282.13 213.37 li
282.58 213.11 283.3 213.11 283.75 213.37 cv
283.98 213.5 284.09 213.67 284.09 213.85 cv
284.09 214.01 283.98 214.18 283.76 214.31 cv
cp
274.2 218.04 mo
272.43 218.46 270.58 218.79 268.7 219 cv
268.31 219.05 267.93 218.97 267.66 218.82 cv
267.51 218.73 267.4 218.61 267.35 218.48 cv
267.22 218.12 267.63 217.77 268.25 217.7 cv
269.98 217.5 271.69 217.2 273.32 216.81 cv
273.76 216.7 274.25 216.77 274.57 216.95 cv
274.67 217.01 274.76 217.08 274.82 217.17 cv
275.06 217.51 274.79 217.89 274.2 218.04 cv
cp
259.96 212.08 mo
257.94 211.89 255.87 211.33 253.81 210.42 cv
251.99 211.47 li
251.43 211.8 250.51 211.8 249.94 211.47 cv
247.88 210.28 li
247.31 209.95 247.31 209.42 247.87 209.09 cv
249.63 208.07 li
247.89 206.87 246.77 205.71 246.29 204.6 cv
245.72 203.26 246.03 201.92 247.23 200.6 cv
247.36 200.45 247.51 200.29 247.68 200.13 cv
247.77 200.04 li
247.92 199.9 248.16 199.81 248.44 199.77 cv
248.72 199.74 249 199.77 249.24 199.86 cv
253.21 201.41 li
253.37 201.49 li
253.7 201.68 253.77 201.98 253.53 202.21 cv
253.45 202.29 li
252.8 202.94 252.63 203.6 252.95 204.25 cv
253.2 204.75 253.72 205.29 254.52 205.86 cv
254.87 206.12 255.27 206.37 255.75 206.65 cv
256.39 207.02 257.01 207.33 257.58 207.58 cv
258.43 207.94 259.19 208.17 259.86 208.24 cv
260.82 208.36 261.64 208.19 262.43 207.73 cv
263.01 207.39 263.28 207.02 263.24 206.6 cv
263.2 206.14 262.84 205.55 262.17 204.84 cv
261.92 204.58 li
259.86 202.54 li
258.43 201.13 257.52 200 257.16 199.21 cv
256.76 198.33 256.69 197.48 256.95 196.69 cv
257.23 195.87 257.97 195.09 259.17 194.39 cv
260.18 193.81 261.26 193.38 262.4 193.12 cv
263.73 192.8 265.14 192.72 266.63 192.85 cv
268.62 193.03 270.7 193.62 272.81 194.6 cv
274.5 193.62 li
274.72 193.51 li
275.28 193.29 276.06 193.33 276.56 193.62 cv
278.51 194.75 li
278.62 194.81 li
279.19 195.13 279.19 195.67 278.63 196 cv
276.89 197.01 li
278.16 197.97 279.02 198.93 279.43 199.86 cv
279.81 200.73 279.79 201.61 279.36 202.47 cv
279.08 203.05 278.61 203.63 277.96 204.2 cv
277.85 204.29 li
277.7 204.43 277.43 204.52 277.14 204.55 cv
276.88 204.57 276.58 204.53 276.35 204.42 cv
272.45 202.66 li
272.1 202.46 272.04 202.14 272.31 201.91 cv
272.4 201.82 li
272.94 201.34 273.07 200.82 272.81 200.24 cv
272.66 199.9 272.37 199.55 271.96 199.19 cv
271.57 198.85 271.07 198.5 270.46 198.15 cv
269.97 197.87 269.5 197.63 269.05 197.42 cv
268.21 197.05 267.47 196.81 266.83 196.73 cv
266.69 196.72 266.56 196.71 266.43 196.71 cv
265.77 196.68 265.23 196.82 264.65 197.15 cv
264.26 197.38 264.03 197.62 263.99 197.86 cv
263.94 198.15 264.04 198.5 264.31 198.9 cv
264.44 199.1 264.7 199.4 265.09 199.82 cv
265.53 200.3 266.14 200.9 266.95 201.67 cv
267.07 201.78 li
267.18 201.89 267.29 202 267.39 202.11 cv
268.57 203.27 269.38 204.2 269.78 204.86 cv
270.25 205.64 270.48 206.35 270.48 206.98 cv
270.47 207.62 270.26 208.25 269.83 208.84 cv
269.72 208.99 269.6 209.13 269.47 209.28 cv
269.33 209.42 269.18 209.57 269.01 209.71 cv
268.68 210 268.28 210.27 267.83 210.53 cv
267.37 210.79 266.9 211.03 266.42 211.23 cv
264.5 212.02 262.33 212.3 259.96 212.08 cv
cp
262.98 219.33 mo
261.06 219.33 259.14 219.22 257.26 219 cv
257.02 218.98 256.82 218.91 256.67 218.82 cv
256.4 218.67 256.27 218.45 256.35 218.22 cv
256.47 217.86 257.07 217.63 257.69 217.7 cv
259.43 217.9 261.2 218 262.97 218 cv
263.29 218 263.58 218.07 263.79 218.19 cv
263.99 218.31 264.12 218.48 264.13 218.66 cv
264.13 219.03 263.61 219.33 262.98 219.33 cv
cp
253.24 217.68 mo
253 218.02 252.33 218.18 251.75 218.04 cv
249.97 217.62 248.26 217.09 246.66 216.47 cv
246.49 216.39 li
246.11 216.17 246.03 215.82 246.34 215.55 cv
246.69 215.24 247.4 215.16 247.93 215.37 cv
249.4 215.93 250.98 216.42 252.62 216.81 cv
252.76 216.85 252.88 216.9 252.99 216.95 cv
253.31 217.14 253.42 217.42 253.24 217.68 cv
cp
243.82 214.35 mo
243.37 214.61 242.66 214.62 242.21 214.36 cv
242.19 214.35 li
240.83 213.56 239.6 212.7 238.54 211.79 cv
238.18 211.48 238.32 211.07 238.85 210.87 cv
239.31 210.69 239.92 210.73 240.3 210.95 cv
240.44 211.05 li
241.42 211.89 242.55 212.68 243.81 213.41 cv
244.26 213.67 244.27 214.09 243.82 214.35 cv
cp
237.3 209.21 mo
236.86 209.32 236.37 209.25 236.05 209.07 cv
235.95 209.01 235.86 208.94 235.8 208.85 cv
235.06 207.83 234.49 206.76 234.11 205.66 cv
233.98 205.3 234.39 204.95 235.01 204.88 cv
235.4 204.84 235.78 204.91 236.05 205.06 cv
236.2 205.15 236.31 205.27 236.36 205.4 cv
236.71 206.41 237.24 207.4 237.92 208.34 cv
238.17 208.68 237.89 209.07 237.3 209.21 cv
cp
233.53 202.35 mo
233.52 201.24 233.7 200.12 234.06 199.03 cv
234.18 198.68 234.78 198.44 235.4 198.51 cv
235.64 198.54 235.84 198.6 236 198.69 cv
236.26 198.85 236.39 199.07 236.32 199.29 cv
235.98 200.3 235.81 201.32 235.82 202.35 cv
235.82 202.72 235.31 203.01 234.68 203.01 cv
234.36 203.02 234.07 202.94 233.86 202.82 cv
233.66 202.7 233.53 202.53 233.53 202.35 cv
cp
240.3 193.64 mo
239.33 194.49 238.49 195.41 237.83 196.35 cv
237.59 196.69 236.92 196.85 236.33 196.71 cv
236.18 196.68 236.06 196.63 235.95 196.57 cv
235.63 196.38 235.52 196.1 235.7 195.85 cv
236.42 194.82 237.33 193.83 238.39 192.9 cv
238.74 192.6 239.45 192.52 239.98 192.72 cv
240.16 192.8 li
240.54 193.02 240.61 193.38 240.3 193.64 cv
cp
246.44 188.21 mo
246.9 188.03 247.51 188.07 247.89 188.29 cv
248.03 188.39 li
248.28 188.6 248.29 188.86 248.1 189.07 cv
248.02 189.17 247.89 189.25 247.73 189.31 cv
246.28 189.88 244.92 190.53 243.68 191.25 cv
243.65 191.27 li
243.21 191.52 242.51 191.53 242.07 191.29 cv
242.03 191.27 li
241.61 191.03 241.57 190.67 241.91 190.41 cv
242.02 190.33 li
242.06 190.31 li
242.44 190.09 242.83 189.87 243.24 189.66 cv
244.25 189.13 245.32 188.65 246.44 188.21 cv
cp
251.5 186.63 mo
253.27 186.21 255.11 185.88 256.99 185.66 cv
257.39 185.62 257.77 185.69 258.03 185.84 cv
258.19 185.93 258.3 186.05 258.35 186.18 cv
258.48 186.54 258.07 186.89 257.45 186.97 cv
255.72 187.17 254.02 187.47 252.39 187.86 cv
251.95 187.97 251.45 187.9 251.13 187.72 cv
251.03 187.66 250.94 187.58 250.88 187.5 cv
250.64 187.16 250.91 186.77 251.5 186.63 cv
cp
262.71 185.33 mo
264.63 185.33 266.56 185.43 268.44 185.65 cv
268.67 185.67 268.87 185.74 269.03 185.83 cv
269.29 185.98 269.43 186.2 269.35 186.43 cv
269.23 186.79 268.63 187.02 268 186.95 cv
266.49 186.78 264.95 186.69 263.41 186.67 cv
263.39 186.67 li
263.17 186.66 262.95 186.66 262.73 186.66 cv
262.41 186.66 262.12 186.59 261.91 186.47 cv
261.7 186.35 261.57 186.18 261.57 186 cv
261.57 185.74 261.83 185.51 262.21 185.4 cv
262.36 185.35 262.53 185.33 262.71 185.33 cv
cp
273.95 186.6 mo
275.73 187.03 277.44 187.55 279.04 188.17 cv
279.22 188.25 li
279.6 188.47 279.67 188.82 279.36 189.09 cv
279.23 189.21 279.04 189.3 278.83 189.34 cv
278.52 189.41 278.17 189.41 277.87 189.3 cv
277.77 189.28 li
276.85 188.92 275.88 188.6 274.88 188.31 cv
274.3 188.13 273.7 187.98 273.09 187.83 cv
272.94 187.8 272.82 187.75 272.71 187.69 cv
272.39 187.51 272.28 187.22 272.46 186.97 cv
272.63 186.73 273.03 186.57 273.45 186.55 cv
273.62 186.55 273.79 186.56 273.95 186.6 cv
cp
283.5 190.28 mo
283.54 190.3 li
284.9 191.09 286.12 191.94 287.18 192.84 cv
287.53 193.15 287.4 193.56 286.87 193.77 cv
286.41 193.95 285.8 193.91 285.42 193.69 cv
285.28 193.59 li
284.66 193.06 283.99 192.56 283.27 192.08 cv
282.85 191.79 282.4 191.52 281.94 191.25 cv
281.89 191.22 li
281.46 190.97 281.43 190.59 281.81 190.33 cv
281.88 190.28 li
282.33 190.02 283.05 190.02 283.5 190.28 cv
cp
289.76 205.94 mo
289.5 205.79 289.36 205.56 289.44 205.34 cv
289.57 204.95 289.67 204.55 289.74 204.15 cv
289.87 203.53 289.93 202.91 289.92 202.28 cv
289.92 201.91 290.43 201.62 291.07 201.61 cv
291.38 201.61 291.67 201.69 291.88 201.81 cv
292.09 201.93 292.22 202.09 292.22 202.28 cv
292.23 202.94 292.17 203.61 292.03 204.27 cv
291.95 204.71 291.84 205.15 291.69 205.59 cv
291.58 205.95 290.97 206.19 290.35 206.12 cv
290.12 206.09 289.91 206.03 289.76 205.94 cv
cp
287.81 196.29 mo
287.56 195.95 287.83 195.56 288.42 195.42 cv
288.86 195.31 289.35 195.38 289.67 195.56 cv
289.78 195.62 289.86 195.69 289.92 195.78 cv
290.15 196.09 290.36 196.4 290.55 196.72 cv
291 197.45 291.36 198.2 291.62 198.96 cv
291.73 199.27 291.45 199.58 290.96 199.7 cv
290.73 199.75 li
290.34 199.79 289.95 199.72 289.69 199.56 cv
289.53 199.47 289.42 199.36 289.37 199.23 cv
289.24 198.86 289.09 198.49 288.9 198.13 cv
288.65 197.58 288.33 197.04 287.96 196.51 cv
287.81 196.29 li
cp
285.61 211.83 mo
285.23 211.61 285.16 211.26 285.47 210.99 cv
286.44 210.14 287.27 209.23 287.94 208.28 cv
288.18 207.94 288.84 207.78 289.43 207.92 cv
289.58 207.95 289.7 208 289.81 208.06 cv
290.13 208.24 290.24 208.53 290.07 208.78 cv
289.34 209.81 288.44 210.8 287.39 211.73 cv
287.04 212.03 286.32 212.12 285.79 211.91 cv
285.61 211.83 li
cp
296.86 196.74 mo
296.27 195.54 295.49 194.37 294.52 193.25 cv
294.16 192.82 293.77 192.4 293.35 191.99 cv
291.84 190.51 289.99 189.12 287.79 187.85 cv
286.26 186.97 284.63 186.18 282.92 185.5 cv
281.52 184.94 280.07 184.44 278.57 184.01 cv
275.45 183.1 272.16 182.48 268.79 182.15 cv
267.93 182.06 267.07 182 266.2 181.94 cv
264.1 181.83 261.99 181.82 259.89 181.92 cv
259.88 181.92 li
259.42 181.94 258.95 181.97 258.49 182 cv
252.63 182.41 246.92 183.67 241.95 185.78 cv
240.5 186.4 239.1 187.09 237.79 187.85 cv
235.35 189.27 233.35 190.84 231.78 192.51 cv
227.82 196.72 226.62 201.58 228.17 206.19 cv
228.28 206.51 228.4 206.83 228.53 207.15 cv
228.54 207.16 li
229.01 208.28 229.66 209.39 230.46 210.46 cv
230.46 210.47 li
230.93 211.08 231.45 211.68 232.01 212.27 cv
232.01 212.28 li
232.3 212.56 232.59 212.85 232.9 213.15 cv
234.31 214.45 235.99 215.68 237.95 216.81 cv
251.81 224.81 274.19 224.81 287.96 216.81 cv
289.24 216.07 290.4 215.28 291.45 214.45 cv
291.8 214.17 292.13 213.89 292.45 213.61 cv
292.46 213.61 li
294.05 212.21 295.32 210.71 296.25 209.16 cv
296.6 208.57 296.91 207.98 297.17 207.39 cv
297.24 207.24 li
297.25 207.19 li
297.37 206.91 297.47 206.63 297.57 206.35 cv
297.59 206.29 li
297.69 205.98 297.78 205.67 297.86 205.35 cv
297.87 205.32 li
297.95 205.01 298.01 204.7 298.06 204.38 cv
298.1 204.16 li
298.13 203.95 298.15 203.74 298.17 203.54 cv
298.19 203.29 li
298.22 203.02 298.23 202.74 298.23 202.47 cv
298.23 202.43 li
298.24 200.52 297.78 198.6 296.86 196.74 cv
cp
.992157 .945098 .501961 rgb
f
278.622 194.808 mo
279.188 195.134 279.191 195.669 278.626 195.998 cv
276.89 197.006 li
278.164 197.971 279.016 198.929 279.431 199.864 cv
280.073 201.321 279.579 202.777 277.962 204.195 cv
277.854 204.289 li
277.697 204.427 277.435 204.522 277.143 204.546 cv
276.88 204.573 276.582 204.529 276.353 204.424 cv
272.447 202.659 li
272.102 202.458 272.044 202.142 272.306 201.905 cv
272.399 201.824 li
272.939 201.343 273.074 200.824 272.808 200.238 cv
272.657 199.901 272.372 199.551 271.958 199.193 cv
271.57 198.855 271.065 198.503 270.455 198.151 cv
269.972 197.872 269.5 197.629 269.045 197.424 cv
268.21 197.047 267.467 196.813 266.827 196.73 cv
265.99 196.625 265.336 196.751 264.649 197.15 cv
264.255 197.379 264.032 197.618 263.986 197.858 cv
263.936 198.149 264.042 198.501 264.308 198.904 cv
264.443 199.1 264.696 199.402 265.087 199.82 cv
265.531 200.299 266.143 200.905 266.951 201.668 cv
267.068 201.783 li
267.183 201.894 267.292 202 267.395 202.106 cv
268.573 203.27 269.376 204.199 269.78 204.864 cv
270.249 205.638 270.484 206.351 270.481 206.977 cv
270.474 207.62 270.261 208.246 269.834 208.837 cv
269.411 209.433 268.736 210.005 267.831 210.531 cv
265.576 211.842 262.928 212.361 259.96 212.082 cv
257.94 211.891 255.874 211.329 253.814 210.417 cv
251.994 211.475 li
251.429 211.803 250.508 211.801 249.942 211.475 cv
247.878 210.283 li
247.309 209.955 247.306 209.423 247.872 209.094 cv
249.628 208.074 li
247.885 206.872 246.765 205.706 246.294 204.604 cv
245.652 203.099 246.117 201.596 247.678 200.131 cv
247.771 200.043 li
247.922 199.904 248.161 199.806 248.436 199.772 cv
248.716 199.739 249 199.771 249.237 199.864 cv
253.211 201.413 li
253.366 201.485 li
253.698 201.677 253.767 201.977 253.531 202.212 cv
253.45 202.293 li
252.802 202.945 252.633 203.603 252.953 204.253 cv
253.198 204.752 253.724 205.292 254.516 205.861 cv
254.865 206.117 255.27 206.374 255.751 206.652 cv
256.39 207.021 257.005 207.332 257.58 207.58 cv
258.426 207.94 259.19 208.165 259.857 208.243 cv
260.819 208.356 261.637 208.194 262.435 207.73 cv
263.014 207.393 263.278 207.022 263.241 206.596 cv
263.2 206.137 262.837 205.546 262.167 204.835 cv
262.088 204.752 262.008 204.666 261.917 204.58 cv
259.857 202.543 li
258.429 201.128 257.522 200.004 257.156 199.206 cv
256.759 198.325 256.69 197.479 256.955 196.69 cv
257.228 195.866 257.974 195.092 259.174 194.395 cv
261.362 193.123 263.869 192.604 266.632 192.849 cv
268.623 193.027 270.702 193.616 272.814 194.599 cv
274.503 193.618 li
275.068 193.289 275.989 193.288 276.558 193.616 cv
278.622 194.808 li
cp
.980392 .760784 .25098 rgb
f
250.883 187.501 mo
250.641 187.163 250.914 186.774 251.497 186.632 cv
253.266 186.205 255.114 185.878 256.995 185.662 cv
257.385 185.616 257.77 185.692 258.033 185.844 cv
258.188 185.933 258.301 186.05 258.348 186.183 cv
258.476 186.543 258.071 186.894 257.452 186.965 cv
255.72 187.167 254.015 187.468 252.387 187.86 cv
251.946 187.967 251.452 187.901 251.132 187.717 cv
251.03 187.657 250.944 187.584 250.883 187.501 cv
cp
f
272.711 187.689 mo
272.394 187.507 272.276 187.222 272.458 186.967 cv
272.696 186.628 273.367 186.466 273.953 186.604 cv
275.729 187.026 277.441 187.552 279.041 188.168 cv
279.217 188.252 li
279.597 188.471 279.673 188.822 279.364 189.091 cv
279.015 189.396 278.303 189.48 277.772 189.275 cv
276.299 188.708 274.725 188.225 273.089 187.833 cv
272.942 187.799 272.816 187.75 272.711 187.689 cv
cp
f
243.647 191.268 mo
243.202 191.527 242.474 191.529 242.026 191.27 cv
241.574 191.009 241.575 190.587 242.021 190.329 cv
242.055 190.308 li
243.398 189.528 244.873 188.82 246.438 188.209 cv
246.902 188.029 247.509 188.07 247.889 188.29 cv
248.032 188.391 li
248.391 188.695 248.253 189.108 247.728 189.314 cv
246.285 189.878 244.92 190.528 243.683 191.248 cv
243.647 191.268 li
cp
f
281.887 191.219 mo
281.438 190.96 281.433 190.538 281.878 190.279 cv
282.327 190.019 283.055 190.021 283.503 190.279 cv
283.539 190.3 li
284.905 191.088 286.122 191.94 287.179 192.844 cv
287.535 193.147 287.4 193.562 286.875 193.768 cv
286.414 193.948 285.803 193.905 285.422 193.685 cv
285.281 193.587 li
284.303 192.752 283.18 191.965 281.939 191.25 cv
281.887 191.219 li
cp
f
240.303 193.643 mo
239.326 194.493 238.492 195.405 237.826 196.353 cv
237.588 196.692 236.917 196.854 236.329 196.714 cv
236.185 196.678 236.059 196.629 235.954 196.568 cv
235.634 196.384 235.519 196.101 235.701 195.845 cv
236.423 194.818 237.329 193.829 238.388 192.905 cv
238.74 192.599 239.452 192.518 239.979 192.721 cv
240.155 192.804 li
240.537 193.024 240.61 193.375 240.303 193.643 cv
cp
f
287.807 196.291 mo
287.562 195.95 287.834 195.561 288.421 195.42 cv
288.862 195.313 289.354 195.377 289.673 195.562 cv
289.777 195.622 289.863 195.694 289.922 195.777 cv
290.667 196.801 291.238 197.873 291.624 198.963 cv
291.751 199.324 291.347 199.674 290.725 199.747 cv
290.337 199.792 289.954 199.716 289.689 199.564 cv
289.534 199.474 289.419 199.357 289.372 199.226 cv
289.019 198.222 288.493 197.233 287.807 196.291 cv
cp
f
289.438 205.338 mo
289.769 204.334 289.933 203.305 289.924 202.281 cv
289.919 201.914 290.432 201.616 291.066 201.614 cv
291.383 201.614 291.672 201.689 291.881 201.81 cv
292.089 201.93 292.218 202.095 292.221 202.277 cv
292.233 203.388 292.055 204.503 291.693 205.594 cv
291.575 205.954 290.975 206.188 290.352 206.118 cv
290.118 206.091 289.913 206.027 289.757 205.937 cv
289.497 205.787 289.364 205.565 289.438 205.338 cv
cp
f
237.919 208.343 mo
238.167 208.682 237.888 209.071 237.302 209.211 cv
236.861 209.318 236.373 209.252 236.053 209.067 cv
235.948 209.006 235.859 208.936 235.804 208.853 cv
235.064 207.828 234.494 206.757 234.111 205.665 cv
233.983 205.304 234.388 204.954 235.007 204.883 cv
235.397 204.837 235.782 204.913 236.045 205.065 cv
236.201 205.155 236.313 205.271 236.36 205.404 cv
236.713 206.412 237.239 207.4 237.919 208.343 cv
cp
f
285.467 210.992 mo
286.441 210.14 287.271 209.226 287.936 208.28 cv
288.176 207.94 288.844 207.779 289.433 207.916 cv
289.578 207.951 289.704 208 289.809 208.061 cv
290.127 208.245 290.243 208.528 290.066 208.785 cv
289.341 209.813 288.44 210.802 287.385 211.728 cv
287.036 212.033 286.32 212.116 285.793 211.913 cv
285.615 211.83 li
285.233 211.61 285.161 211.257 285.467 210.992 cv
cp
f
283.753 213.367 mo
284.205 213.627 284.207 214.047 283.758 214.308 cv
283.7 214.342 li
282.334 215.136 280.845 215.848 279.261 216.463 cv
278.8 216.642 278.192 216.602 277.811 216.381 cv
277.67 216.28 li
277.315 215.977 277.453 215.564 277.978 215.357 cv
279.439 214.791 280.812 214.135 282.064 213.407 cv
282.131 213.369 li
282.58 213.108 283.304 213.108 283.753 213.367 cv
cp
f
252.987 216.955 mo
253.306 217.139 253.424 217.424 253.244 217.68 cv
253.003 218.02 252.33 218.181 251.747 218.041 cv
249.974 217.618 248.261 217.087 246.662 216.471 cv
246.489 216.389 li
246.108 216.168 246.033 215.818 246.341 215.547 cv
246.693 215.244 247.403 215.161 247.933 215.366 cv
249.403 215.935 250.981 216.42 252.617 216.812 cv
252.759 216.846 252.883 216.895 252.987 216.955 cv
cp
f
274.817 217.167 mo
275.062 217.507 274.786 217.895 274.2 218.036 cv
272.434 218.46 270.583 218.785 268.702 219.002 cv
268.311 219.046 267.928 218.97 267.664 218.817 cv
267.508 218.728 267.397 218.613 267.349 218.477 cv
267.225 218.118 267.629 217.768 268.248 217.697 cv
269.982 217.497 271.69 217.197 273.316 216.807 cv
273.758 216.701 274.248 216.766 274.566 216.95 cv
274.671 217.01 274.757 217.083 274.817 217.167 cv
cp
f
263.787 218.192 mo
263.995 218.313 264.125 218.479 264.127 218.662 cv
264.126 219.029 263.613 219.327 262.982 219.327 cv
261.062 219.329 259.136 219.219 257.255 219.004 cv
257.024 218.979 256.822 218.913 256.667 218.823 cv
256.403 218.67 256.271 218.449 256.348 218.224 cv
256.469 217.861 257.069 217.627 257.692 217.7 cv
259.429 217.896 261.204 217.997 262.972 217.998 cv
263.29 217.998 263.578 218.072 263.787 218.192 cv
cp
f
261.912 186.466 mo
261.704 186.346 261.574 186.18 261.573 185.997 cv
261.568 185.629 262.081 185.332 262.715 185.33 cv
264.632 185.327 266.558 185.433 268.438 185.648 cv
268.671 185.674 268.875 185.739 269.031 185.83 cv
269.293 185.981 269.425 186.203 269.352 186.428 cv
269.231 186.787 268.627 187.022 268.005 186.953 cv
266.273 186.757 264.496 186.659 262.728 186.66 cv
262.407 186.66 262.12 186.586 261.912 186.466 cv
cp
f
236.316 199.292 mo
235.98 200.295 235.814 201.323 235.819 202.349 cv
235.824 202.716 235.312 203.014 234.681 203.014 cv
234.362 203.016 234.072 202.939 233.864 202.819 cv
233.656 202.699 233.526 202.533 233.525 202.351 cv
233.516 201.238 233.697 200.125 234.059 199.035 cv
234.18 198.676 234.783 198.44 235.403 198.511 cv
235.637 198.538 235.841 198.604 235.997 198.694 cv
236.259 198.845 236.39 199.066 236.316 199.292 cv
cp
f
243.807 213.409 mo
244.256 213.668 244.267 214.093 243.821 214.352 cv
243.373 214.613 242.657 214.618 242.205 214.357 cv
242.19 214.349 li
240.83 213.563 239.601 212.702 238.538 211.788 cv
238.183 211.485 238.32 211.072 238.845 210.865 cv
239.308 210.686 239.917 210.728 240.299 210.948 cv
240.439 211.046 li
241.42 211.889 242.552 212.685 243.807 213.409 cv
cp
f
298.232 202.429 mo
298.211 209.916 li
298.196 215.124 294.773 220.323 287.936 224.296 cv
274.173 232.295 251.784 232.296 237.931 224.298 cv
230.96 220.273 227.479 214.99 227.493 209.714 cv
227.515 202.228 li
227.5 207.503 230.981 212.787 237.952 216.812 cv
251.806 224.81 274.194 224.808 287.957 216.81 cv
294.794 212.836 298.217 207.637 298.232 202.429 cv
cp
f
gsave
193.887 280.63 mo
185.508 280.63 184.36 275.47 191.876 267.895 cv
196.111 263.625 202.318 259.374 208.988 255.913 cv
210.968 262.533 215.702 266.217 221.883 266.217 cv
225.137 266.217 228.79 265.198 232.656 263.049 cv
232.198 263.741 231.762 264.447 231.347 265.165 cv
222.099 272.305 208.576 278.619 198.337 280.242 cv
196.681 280.505 195.196 280.63 193.887 280.63 cv
223.79 260.729 mo
223.024 260.729 222.28 260.661 221.566 260.525 cv
221.19 260.455 221.088 259.934 221.336 259.358 cv
221.493 258.998 221.752 258.702 222.015 258.55 cv
222.138 258.479 222.263 258.439 222.378 258.439 cv
222.408 258.439 222.437 258.442 222.465 258.447 cv
223.122 258.571 223.807 258.634 224.511 258.634 cv
224.931 258.634 225.357 258.612 225.79 258.566 cv
225.807 258.565 225.825 258.564 225.842 258.564 cv
226.22 258.564 226.397 258.985 226.232 259.535 cv
226.104 259.97 225.803 260.363 225.481 260.55 cv
225.378 260.608 225.272 260.646 225.17 260.658 cv
224.704 260.705 224.243 260.729 223.79 260.729 cv
228.871 259.795 mo
228.745 259.795 228.639 259.747 228.562 259.661 cv
228.521 259.607 li
228.459 259.477 li
228.42 259.355 228.41 259.203 228.437 259.028 cv
228.477 258.845 li
228.527 258.697 li
228.566 258.596 228.613 258.496 228.669 258.401 cv
228.751 258.262 228.85 258.134 228.959 258.026 cv
229.092 257.907 li
229.232 257.812 li
229.311 257.771 li
229.39 257.739 li
230.611 257.311 231.866 256.725 233.118 256.002 cv
233.251 255.925 233.377 255.889 233.488 255.889 cv
233.614 255.889 233.722 255.935 233.801 256.022 cv
233.843 256.075 li
233.907 256.171 233.944 256.302 233.944 256.463 cv
233.945 256.56 233.933 256.661 233.91 256.763 cv
233.85 256.965 li
233.764 257.164 li
233.712 257.261 li
233.568 257.514 233.367 257.734 233.141 257.865 cv
233.124 257.875 li
232.444 258.267 231.765 258.621 231.09 258.936 cv
230.752 259.093 230.415 259.24 230.081 259.377 cv
229.746 259.514 229.413 259.641 229.082 259.756 cv
229.007 259.782 228.937 259.795 228.871 259.795 cv
218.612 259.431 mo
218.536 259.431 218.466 259.414 218.403 259.379 cv
217.435 258.83 216.558 258.115 215.798 257.258 cv
215.547 256.971 215.646 256.334 216.017 255.829 cv
216.155 255.643 216.313 255.501 216.468 255.411 cv
216.596 255.337 216.723 255.298 216.837 255.298 cv
216.958 255.298 217.066 255.342 217.146 255.434 cv
217.851 256.225 218.657 256.883 219.548 257.388 cv
219.869 257.57 219.871 258.16 219.555 258.71 cv
219.395 258.984 219.187 259.199 218.979 259.319 cv
218.853 259.392 218.727 259.431 218.612 259.431 cv
236.677 255.282 mo
236.46 255.282 236.293 255.143 236.239 254.878 cv
236.15 254.424 236.436 253.766 236.878 253.409 cv
238.106 252.417 239.316 251.297 240.469 250.077 cv
240.476 250.07 240.483 250.063 240.49 250.056 cv
240.816 250.44 241.045 250.878 241.172 251.364 cv
241.149 251.391 241.126 251.418 241.102 251.443 cv
239.846 252.769 238.533 253.985 237.2 255.062 cv
237.039 255.172 li
236.911 255.246 236.788 255.282 236.677 255.282 cv
214.243 254.496 mo
214.075 254.496 213.935 254.413 213.857 254.241 cv
213.771 254.056 213.689 253.868 213.61 253.676 cv
214.211 253.405 214.813 253.142 215.415 252.887 cv
215.452 253.267 215.26 253.775 214.923 254.129 cv
214.82 254.239 214.715 254.323 214.609 254.385 cv
214.481 254.459 214.356 254.496 214.243 254.496 cv
231.988 251.056 mo
231.651 251.056 231.417 250.788 231.416 250.327 cv
231.411 248.295 li
232.444 248.179 233.4 248.122 234.277 248.122 cv
234.712 248.122 235.127 248.136 235.523 248.163 cv
235.439 248.765 235.017 249.432 234.513 249.723 cv
232.446 250.917 li
232.282 251.011 232.126 251.056 231.988 251.056 cv
227.238 249.476 mo
227.065 249.476 226.898 249.466 226.738 249.447 cv
226.486 249.416 226.248 249.363 226.023 249.287 cv
227.324 248.966 228.591 248.706 229.812 248.513 cv
230.36 248.426 230.89 248.354 231.401 248.296 cv
229.75 249.079 228.354 249.476 227.238 249.476 cv
clp
184.36 248.122 mo
241.172 248.122 li
241.172 280.63 li
184.36 280.63 li
cp
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
244.352 199.619 mo
239.791 196.969 233.474 197.343 226.501 201.368 cv
212.647 209.367 201.455 228.753 201.5 244.671 cv
201.522 252.58 204.315 258.146 208.818 260.763 cv
215.291 264.524 li
210.788 261.907 207.996 256.342 207.973 248.433 cv
207.928 232.515 219.121 213.128 232.974 205.13 cv
239.947 201.104 246.264 200.73 250.825 203.381 cv
244.352 199.619 li
cp
f
252.697 228.038 mo
252.539 228.112 li
252.096 228.267 251.807 227.941 251.893 227.385 cv
252.133 225.837 252.252 224.32 252.248 222.871 cv
252.248 222.794 li
252.246 222.275 252.608 221.647 253.057 221.388 cv
253.508 221.128 253.873 221.336 253.875 221.854 cv
253.875 221.918 li
253.879 223.501 253.752 225.148 253.492 226.826 cv
253.418 227.315 253.078 227.818 252.697 228.038 cv
252.324 231.996 mo
251.809 233.734 251.164 235.499 250.409 237.238 cv
250.254 237.601 249.997 237.895 249.733 238.047 cv
249.578 238.137 249.422 238.176 249.281 238.149 cv
248.908 238.078 248.803 237.555 249.054 236.981 cv
249.749 235.379 250.34 233.751 250.817 232.146 cv
250.944 231.712 251.247 231.32 251.566 231.136 cv
251.671 231.075 251.777 231.037 251.88 231.027 cv
252.294 230.983 252.495 231.417 252.324 231.996 cv
246.542 210.501 mo
246.221 210.322 246.217 209.73 246.535 209.179 cv
246.694 208.904 246.902 208.692 247.111 208.571 cv
247.318 208.452 247.525 208.422 247.685 208.512 cv
248.652 209.057 249.532 209.767 250.295 210.622 cv
250.546 210.906 250.451 211.544 250.079 212.049 cv
249.939 212.238 249.78 212.38 249.625 212.47 cv
249.361 212.622 249.106 212.624 248.947 212.45 cv
248.243 211.659 247.433 211.005 246.542 210.501 cv
247.834 242.357 mo
246.874 244.017 245.816 245.633 244.69 247.154 cv
244.549 247.343 244.394 247.483 244.236 247.575 cv
243.975 247.726 243.716 247.73 243.561 247.55 cv
243.307 247.264 243.405 246.627 243.779 246.121 cv
244.818 244.718 245.792 243.231 246.677 241.698 cv
246.835 241.424 247.043 241.213 247.251 241.093 cv
247.459 240.973 247.668 240.944 247.827 241.034 cv
248.147 241.217 248.149 241.806 247.834 242.357 cv
240.048 241.351 mo
238.872 243.001 237.353 244.513 235.533 245.837 cv
235.539 247.946 li
235.54 248.597 235.079 249.397 234.513 249.723 cv
232.446 250.917 li
231.88 251.243 231.418 250.977 231.416 250.327 cv
231.411 248.291 li
229.498 249.2 227.928 249.59 226.738 249.447 cv
225.114 249.251 224.044 248.097 223.557 246.013 cv
223.527 245.888 li
223.483 245.687 223.517 245.432 223.626 245.177 cv
223.736 244.917 223.906 244.688 224.105 244.529 cv
227.434 241.861 li
227.574 241.763 li
227.906 241.572 228.2 241.662 228.286 241.98 cv
228.315 242.091 li
228.556 242.978 229.041 243.457 229.764 243.505 cv
230.319 243.543 231.05 243.357 231.935 242.957 cv
232.334 242.777 232.76 242.559 233.241 242.281 cv
233.88 241.912 234.457 241.535 234.958 241.158 cv
235.694 240.608 236.271 240.056 236.672 239.521 cv
237.251 238.744 237.519 237.955 237.516 237.032 cv
237.514 236.362 237.325 235.948 236.934 235.769 cv
236.52 235.573 235.827 235.588 234.875 235.813 cv
234.764 235.84 234.649 235.869 234.529 235.905 cv
231.736 236.671 li
229.796 237.2 228.367 237.425 227.494 237.338 cv
226.534 237.245 225.766 236.881 225.215 236.258 cv
224.638 235.606 224.341 234.576 224.337 233.188 cv
224.33 230.658 225.134 228.227 226.725 225.958 cv
227.877 224.321 229.426 222.815 231.334 221.478 cv
231.329 219.524 li
231.327 218.87 231.786 218.072 232.351 217.746 cv
234.418 216.552 li
234.984 216.226 235.449 216.49 235.451 217.144 cv
235.457 219.152 li
236.929 218.528 238.186 218.271 239.202 218.38 cv
240.785 218.549 241.799 219.705 242.219 221.814 cv
242.243 221.96 li
242.287 222.163 242.238 222.437 242.11 222.704 cv
242.005 222.94 241.817 223.18 241.612 223.322 cv
238.128 225.827 li
237.785 226.025 237.482 225.916 237.407 225.567 cv
237.384 225.45 li
237.238 224.741 236.855 224.365 236.214 224.299 cv
235.847 224.265 235.401 224.337 234.885 224.514 cv
234.395 224.682 233.84 224.944 233.23 225.296 cv
232.747 225.576 232.298 225.865 231.897 226.154 cv
231.152 226.685 230.578 227.216 230.186 227.729 cv
229.677 228.401 229.458 229.03 229.461 229.825 cv
229.462 230.28 229.557 230.589 229.743 230.749 cv
229.966 230.943 230.325 231.023 230.809 230.993 cv
231.044 230.979 231.432 230.911 231.992 230.779 cv
232.629 230.631 233.457 230.406 234.521 230.092 cv
234.683 230.046 li
234.835 230.002 234.982 229.961 235.126 229.922 cv
236.723 229.482 237.929 229.252 238.707 229.238 cv
239.611 229.218 240.346 229.368 240.887 229.686 cv
241.44 230.012 241.874 230.514 242.175 231.177 cv
242.479 231.842 242.634 232.71 242.637 233.762 cv
242.645 236.369 241.774 238.92 240.048 241.351 cv
241.102 251.443 mo
239.846 252.769 238.533 253.985 237.2 255.062 cv
237.039 255.172 li
236.661 255.391 236.32 255.277 236.239 254.878 cv
236.15 254.424 236.436 253.766 236.878 253.409 cv
238.106 252.417 239.316 251.297 240.469 250.077 cv
240.572 249.969 240.678 249.884 240.783 249.824 cv
241.102 249.639 241.406 249.681 241.535 249.968 cv
241.71 250.346 241.515 251.006 241.102 251.443 cv
233.91 256.763 mo
233.85 256.965 li
233.764 257.164 li
233.712 257.261 li
233.568 257.514 233.367 257.734 233.141 257.865 cv
233.124 257.875 li
232.444 258.267 231.765 258.621 231.09 258.936 cv
230.752 259.093 230.415 259.24 230.081 259.377 cv
229.746 259.514 229.413 259.641 229.082 259.756 cv
228.862 259.834 228.679 259.792 228.562 259.661 cv
228.521 259.607 li
228.459 259.477 li
228.42 259.355 228.41 259.203 228.437 259.028 cv
228.477 258.845 li
228.527 258.697 li
228.566 258.596 228.613 258.496 228.669 258.401 cv
228.751 258.262 228.85 258.134 228.959 258.026 cv
229.092 257.907 li
229.232 257.812 li
229.311 257.771 li
229.39 257.739 li
230.611 257.311 231.866 256.725 233.118 256.002 cv
233.4 255.839 233.652 255.858 233.801 256.022 cv
233.843 256.075 li
233.907 256.171 233.944 256.302 233.944 256.463 cv
233.945 256.56 233.933 256.661 233.91 256.763 cv
226.232 259.535 mo
226.104 259.97 225.803 260.363 225.481 260.55 cv
225.378 260.608 225.272 260.646 225.17 260.658 cv
223.916 260.785 222.703 260.742 221.566 260.525 cv
221.19 260.455 221.088 259.934 221.336 259.358 cv
221.493 258.998 221.752 258.702 222.015 258.55 cv
222.17 258.461 222.327 258.421 222.465 258.447 cv
223.514 258.645 224.63 258.688 225.79 258.566 cv
226.203 258.526 226.404 258.96 226.232 259.535 cv
219.555 258.71 mo
219.395 258.984 219.187 259.199 218.979 259.319 cv
218.77 259.439 218.562 259.469 218.403 259.379 cv
217.435 258.83 216.558 258.115 215.798 257.258 cv
215.547 256.971 215.646 256.334 216.017 255.829 cv
216.155 255.643 216.313 255.501 216.468 255.411 cv
216.731 255.259 216.989 255.255 217.146 255.434 cv
217.851 256.225 218.657 256.883 219.548 257.388 cv
219.869 257.57 219.871 258.16 219.555 258.71 cv
214.923 254.129 mo
214.82 254.239 214.715 254.323 214.609 254.385 cv
214.29 254.569 213.987 254.527 213.857 254.241 cv
213.328 253.1 212.925 251.82 212.654 250.441 cv
212.565 249.987 212.851 249.329 213.29 248.974 cv
213.45 248.863 li
213.83 248.644 214.172 248.753 214.251 249.155 cv
214.498 250.426 214.872 251.605 215.356 252.654 cv
215.53 253.032 215.335 253.695 214.923 254.129 cv
212.239 246.011 mo
212.239 245.97 li
212.234 244.417 212.359 242.786 212.613 241.125 cv
212.689 240.631 213.03 240.124 213.412 239.904 cv
213.566 239.832 li
214.01 239.677 214.298 240.003 214.212 240.559 cv
213.978 242.094 213.862 243.599 213.866 245.031 cv
213.866 245.071 li
213.868 245.586 213.505 246.218 213.054 246.478 cv
212.606 246.737 212.24 246.526 212.239 246.011 cv
213.776 235.955 mo
214.29 234.21 214.932 232.446 215.685 230.709 cv
215.84 230.348 216.098 230.052 216.36 229.9 cv
216.516 229.81 216.673 229.771 216.812 229.798 cv
217.189 229.868 217.29 230.39 217.042 230.965 cv
216.351 232.565 215.759 234.192 215.285 235.799 cv
215.157 236.234 214.853 236.629 214.533 236.813 cv
214.43 236.873 214.325 236.91 214.222 236.922 cv
213.805 236.964 213.607 236.531 213.776 235.955 cv
218.257 225.589 mo
219.213 223.927 220.269 222.312 221.395 220.788 cv
221.534 220.601 221.691 220.458 221.848 220.368 cv
222.11 220.216 222.367 220.212 222.524 220.393 cv
222.777 220.675 222.68 221.315 222.308 221.816 cv
221.269 223.223 220.296 224.713 219.413 226.245 cv
219.255 226.518 219.047 226.732 218.839 226.853 cv
218.631 226.973 218.423 227.002 218.264 226.912 cv
217.943 226.729 217.939 226.141 218.257 225.589 cv
224.98 216.494 mo
226.233 215.167 227.545 213.947 228.878 212.87 cv
229.038 212.76 li
229.416 212.541 229.761 212.649 229.839 213.051 cv
229.929 213.506 229.645 214.162 229.203 214.521 cv
227.976 215.514 226.766 216.638 225.612 217.857 cv
225.51 217.967 225.404 218.051 225.299 218.112 cv
224.979 218.297 224.677 218.255 224.546 217.97 cv
224.372 217.591 224.567 216.932 224.98 216.494 cv
232.938 210.058 mo
232.976 210.036 li
234.336 209.25 235.686 208.623 236.997 208.159 cv
237.437 208.003 237.728 208.328 237.642 208.887 cv
237.57 209.374 237.228 209.882 236.847 210.102 cv
236.691 210.175 li
235.479 210.604 234.236 211.184 232.993 211.902 cv
232.943 211.931 li
232.492 212.191 232.127 211.983 232.125 211.465 cv
232.124 210.949 232.486 210.318 232.938 210.058 cv
239.846 208.374 mo
239.976 207.937 240.278 207.543 240.598 207.358 cv
240.701 207.298 240.807 207.261 240.909 207.25 cv
242.168 207.117 243.381 207.159 244.519 207.37 cv
244.892 207.441 244.996 207.965 244.748 208.537 cv
244.593 208.899 244.332 209.195 244.072 209.346 cv
243.916 209.435 243.758 209.476 243.62 209.451 cv
242.574 209.255 241.455 209.216 240.295 209.336 cv
239.878 209.381 239.677 208.95 239.846 208.374 cv
251.176 213.744 mo
251.279 213.635 251.386 213.55 251.491 213.489 cv
251.81 213.306 252.112 213.347 252.245 213.63 cv
252.774 214.769 253.18 216.046 253.451 217.425 cv
253.544 217.878 253.257 218.539 252.818 218.894 cv
252.657 219.004 li
252.275 219.224 251.934 219.114 251.857 218.713 cv
251.607 217.444 251.231 216.27 250.743 215.223 cv
250.569 214.844 250.761 214.183 251.176 213.744 cv
232.974 205.13 mo
219.121 213.128 207.928 232.515 207.973 248.433 cv
208.018 264.351 219.284 270.775 233.137 262.776 cv
246.993 254.777 258.186 235.387 258.141 219.469 cv
258.096 203.55 246.83 197.13 232.974 205.13 cv
.992157 .945098 .501961 rgb
f
234.419 216.552 mo
234.984 216.226 235.449 216.49 235.451 217.144 cv
235.457 219.152 li
236.929 218.528 238.186 218.271 239.202 218.38 cv
240.785 218.549 241.799 219.705 242.219 221.814 cv
242.243 221.959 li
242.288 222.163 242.238 222.438 242.11 222.704 cv
242.005 222.94 241.817 223.18 241.612 223.322 cv
238.127 225.827 li
237.785 226.025 237.482 225.916 237.407 225.567 cv
237.384 225.45 li
237.238 224.741 236.855 224.365 236.214 224.299 cv
235.847 224.265 235.401 224.337 234.885 224.513 cv
234.395 224.682 233.84 224.944 233.23 225.296 cv
232.747 225.576 232.298 225.865 231.897 226.154 cv
231.152 226.685 230.578 227.216 230.187 227.729 cv
229.677 228.401 229.459 229.03 229.461 229.825 cv
229.462 230.28 229.557 230.589 229.743 230.749 cv
229.966 230.943 230.325 231.023 230.81 230.993 cv
231.044 230.979 231.432 230.911 231.992 230.779 cv
232.629 230.631 233.457 230.406 234.521 230.092 cv
234.683 230.046 li
234.836 230.001 234.982 229.961 235.126 229.922 cv
236.723 229.482 237.929 229.252 238.707 229.238 cv
239.611 229.218 240.346 229.368 240.887 229.687 cv
241.44 230.012 241.874 230.514 242.175 231.177 cv
242.479 231.842 242.634 232.71 242.637 233.762 cv
242.645 236.369 241.774 238.92 240.048 241.351 cv
238.873 243.001 237.353 244.513 235.533 245.837 cv
235.539 247.946 li
235.541 248.597 235.079 249.396 234.513 249.723 cv
232.446 250.917 li
231.88 251.243 231.418 250.977 231.416 250.326 cv
231.411 248.292 li
229.499 249.2 227.928 249.59 226.739 249.447 cv
225.114 249.251 224.045 248.097 223.557 246.013 cv
223.527 245.888 li
223.483 245.688 223.518 245.432 223.625 245.177 cv
223.736 244.917 223.906 244.688 224.105 244.529 cv
227.434 241.861 li
227.574 241.763 li
227.906 241.572 228.2 241.662 228.286 241.98 cv
228.315 242.091 li
228.556 242.978 229.042 243.457 229.764 243.505 cv
230.319 243.542 231.05 243.357 231.936 242.957 cv
232.334 242.777 232.76 242.559 233.241 242.281 cv
233.88 241.912 234.457 241.535 234.958 241.158 cv
235.694 240.608 236.271 240.056 236.672 239.521 cv
237.251 238.744 237.519 237.955 237.516 237.032 cv
237.514 236.362 237.325 235.948 236.934 235.769 cv
236.52 235.573 235.827 235.588 234.875 235.813 cv
234.764 235.84 234.65 235.869 234.529 235.905 cv
231.736 236.671 li
229.796 237.2 228.367 237.425 227.494 237.338 cv
226.534 237.245 225.766 236.881 225.215 236.258 cv
224.638 235.606 224.341 234.576 224.337 233.188 cv
224.33 230.658 225.134 228.227 226.725 225.958 cv
227.877 224.321 229.426 222.815 231.334 221.478 cv
231.329 219.524 li
231.327 218.87 231.786 218.072 232.352 217.746 cv
234.419 216.552 li
cp
.980392 .760784 .25098 rgb
f
240.783 249.824 mo
241.103 249.639 241.406 249.681 241.535 249.968 cv
241.709 250.346 241.515 251.006 241.102 251.443 cv
239.846 252.769 238.533 253.985 237.2 255.063 cv
237.039 255.172 li
236.661 255.391 236.32 255.277 236.239 254.878 cv
236.15 254.423 236.436 253.766 236.878 253.409 cv
238.106 252.417 239.316 251.297 240.469 250.077 cv
240.572 249.969 240.678 249.884 240.783 249.824 cv
cp
f
225.79 258.566 mo
226.203 258.526 226.404 258.96 226.232 259.535 cv
226.104 259.97 225.803 260.363 225.481 260.55 cv
225.378 260.608 225.272 260.646 225.17 260.658 cv
223.916 260.785 222.703 260.742 221.566 260.525 cv
221.19 260.455 221.089 259.934 221.336 259.358 cv
221.493 258.998 221.752 258.702 222.015 258.55 cv
222.17 258.461 222.327 258.421 222.465 258.447 cv
223.514 258.645 224.63 258.688 225.79 258.566 cv
cp
f
248.947 212.45 mo
248.243 211.659 247.433 211.005 246.542 210.501 cv
246.221 210.322 246.217 209.73 246.535 209.179 cv
246.694 208.904 246.902 208.692 247.111 208.571 cv
247.318 208.452 247.525 208.422 247.685 208.512 cv
248.652 209.057 249.532 209.767 250.295 210.622 cv
250.546 210.906 250.451 211.544 250.079 212.049 cv
249.938 212.238 249.781 212.38 249.625 212.47 cv
249.361 212.622 249.106 212.625 248.947 212.45 cv
cp
f
217.146 255.434 mo
217.851 256.225 218.657 256.883 219.548 257.388 cv
219.869 257.57 219.871 258.16 219.555 258.71 cv
219.395 258.984 219.187 259.199 218.979 259.319 cv
218.77 259.439 218.562 259.469 218.403 259.379 cv
217.435 258.83 216.558 258.115 215.798 257.258 cv
215.547 256.971 215.646 256.334 216.017 255.829 cv
216.155 255.643 216.313 255.501 216.468 255.411 cv
216.731 255.259 216.989 255.255 217.146 255.434 cv
cp
f
240.295 209.336 mo
239.878 209.381 239.677 208.95 239.846 208.374 cv
239.976 207.937 240.278 207.543 240.598 207.358 cv
240.701 207.298 240.807 207.261 240.909 207.25 cv
242.168 207.117 243.381 207.159 244.519 207.37 cv
244.892 207.441 244.996 207.965 244.748 208.537 cv
244.593 208.899 244.333 209.195 244.072 209.346 cv
243.917 209.436 243.758 209.476 243.62 209.451 cv
242.574 209.255 241.455 209.216 240.295 209.336 cv
cp
f
232.943 211.931 mo
232.492 212.191 232.127 211.983 232.125 211.464 cv
232.124 210.949 232.486 210.318 232.938 210.058 cv
232.973 210.037 li
234.336 209.25 235.686 208.623 236.997 208.159 cv
237.437 208.003 237.729 208.328 237.642 208.887 cv
237.57 209.374 237.228 209.882 236.847 210.102 cv
236.691 210.175 li
235.479 210.604 234.236 211.184 232.993 211.902 cv
232.943 211.931 li
cp
f
213.866 245.071 mo
213.868 245.586 213.505 246.218 213.054 246.479 cv
212.605 246.737 212.241 246.526 212.239 246.011 cv
212.239 245.97 li
212.234 244.417 212.359 242.786 212.613 241.125 cv
212.689 240.631 213.03 240.124 213.412 239.904 cv
213.566 239.832 li
214.01 239.677 214.298 240.003 214.212 240.559 cv
213.978 242.094 213.862 243.599 213.866 245.031 cv
213.866 245.071 li
cp
f
214.222 236.922 mo
213.805 236.964 213.607 236.531 213.776 235.955 cv
214.291 234.21 214.932 232.446 215.685 230.709 cv
215.84 230.348 216.098 230.052 216.36 229.9 cv
216.516 229.81 216.673 229.771 216.813 229.798 cv
217.188 229.868 217.29 230.39 217.042 230.965 cv
216.351 232.565 215.759 234.192 215.285 235.799 cv
215.157 236.234 214.853 236.629 214.533 236.813 cv
214.43 236.873 214.325 236.91 214.222 236.922 cv
cp
f
218.839 226.853 mo
218.631 226.973 218.423 227.002 218.264 226.912 cv
217.943 226.729 217.938 226.141 218.257 225.589 cv
219.213 223.927 220.269 222.313 221.395 220.788 cv
221.534 220.601 221.691 220.458 221.848 220.368 cv
222.11 220.216 222.367 220.212 222.524 220.393 cv
222.777 220.675 222.68 221.315 222.308 221.816 cv
221.27 223.223 220.296 224.713 219.413 226.245 cv
219.255 226.518 219.047 226.732 218.839 226.853 cv
cp
f
233.118 256.002 mo
233.569 255.741 233.943 255.947 233.944 256.463 cv
233.946 256.981 233.592 257.604 233.141 257.865 cv
233.124 257.875 li
231.766 258.659 230.405 259.293 229.082 259.756 cv
228.642 259.912 228.35 259.588 228.437 259.028 cv
228.513 258.539 228.852 258.031 229.232 257.813 cv
229.391 257.739 li
230.611 257.311 231.866 256.725 233.118 256.002 cv
cp
f
247.251 241.093 mo
247.459 240.973 247.668 240.943 247.827 241.034 cv
248.147 241.217 248.149 241.806 247.833 242.356 cv
246.875 244.017 245.816 245.633 244.69 247.154 cv
244.549 247.343 244.395 247.483 244.236 247.575 cv
243.975 247.726 243.717 247.729 243.561 247.55 cv
243.307 247.264 243.405 246.627 243.78 246.121 cv
244.818 244.718 245.792 243.231 246.677 241.698 cv
246.835 241.424 247.043 241.213 247.251 241.093 cv
cp
f
251.88 231.027 mo
252.294 230.983 252.495 231.417 252.324 231.996 cv
251.809 233.734 251.165 235.5 250.409 237.238 cv
250.254 237.601 249.997 237.895 249.733 238.047 cv
249.578 238.137 249.422 238.176 249.281 238.149 cv
248.908 238.078 248.804 237.555 249.054 236.981 cv
249.749 235.379 250.34 233.751 250.817 232.146 cv
250.944 231.712 251.247 231.32 251.566 231.136 cv
251.671 231.075 251.777 231.037 251.88 231.027 cv
cp
f
253.057 221.388 mo
253.509 221.127 253.873 221.335 253.875 221.854 cv
253.875 221.918 li
253.879 223.501 253.752 225.148 253.492 226.826 cv
253.417 227.315 253.078 227.818 252.697 228.038 cv
252.539 228.112 li
252.096 228.267 251.807 227.941 251.894 227.385 cv
252.133 225.836 252.252 224.32 252.248 222.871 cv
252.248 222.793 li
252.246 222.275 252.608 221.647 253.057 221.388 cv
cp
f
251.857 218.713 mo
251.607 217.444 251.23 216.271 250.743 215.223 cv
250.569 214.844 250.761 214.183 251.176 213.744 cv
251.279 213.635 251.386 213.55 251.491 213.489 cv
251.81 213.306 252.112 213.347 252.245 213.63 cv
252.774 214.769 253.18 216.046 253.451 217.425 cv
253.543 217.878 253.257 218.539 252.818 218.894 cv
252.657 219.004 li
252.275 219.224 251.935 219.114 251.857 218.713 cv
cp
f
214.251 249.155 mo
214.498 250.426 214.872 251.604 215.356 252.654 cv
215.53 253.032 215.335 253.695 214.923 254.129 cv
214.82 254.239 214.715 254.323 214.609 254.385 cv
214.29 254.569 213.987 254.527 213.857 254.241 cv
213.328 253.1 212.925 251.82 212.654 250.441 cv
212.564 249.987 212.851 249.329 213.29 248.974 cv
213.45 248.863 li
213.83 248.644 214.172 248.753 214.251 249.155 cv
cp
f
225.299 218.112 mo
224.979 218.297 224.677 218.255 224.546 217.969 cv
224.372 217.591 224.567 216.932 224.98 216.494 cv
226.233 215.167 227.545 213.947 228.878 212.87 cv
229.038 212.76 li
229.417 212.541 229.761 212.649 229.839 213.051 cv
229.929 213.506 229.646 214.162 229.203 214.521 cv
227.976 215.514 226.766 216.638 225.612 217.857 cv
225.51 217.967 225.404 218.051 225.299 218.112 cv
cp
f
117.965 237.684 mo
110.762 241.843 110.724 248.608 117.88 252.767 cv
369.008 398.706 li
119.015 252.111 li
112.484 248.316 112.519 242.136 119.093 238.34 cv
470.128 35.6695 li
117.965 237.684 li
1 1 1 rgb
f
244.021 286.136 mo
237.49 282.34 226.82 282.34 220.241 286.139 cv
187.865 304.83 li
181.286 308.629 181.256 314.807 187.788 318.603 cv
226.728 341.231 li
233.264 345.03 243.924 345.03 250.504 341.231 cv
294.811 315.651 li
244.021 286.136 li
324.074 346.479 mo
330.653 342.682 330.693 336.504 324.157 332.705 cv
295.943 316.31 li
251.636 341.89 li
244.433 346.049 232.744 346.049 225.588 341.89 cv
186.648 319.261 li
179.492 315.102 179.535 308.334 186.738 304.175 cv
219.113 285.483 li
226.321 281.321 238 281.321 245.156 285.48 cv
295.946 314.996 li
485.095 205.791 li
491.674 201.992 491.709 195.817 485.173 192.019 cv
453.008 173.326 li
445.852 169.167 445.89 162.397 453.093 158.238 cv
531.47 114.294 li
454.22 158.894 li
447.641 162.692 447.606 168.873 454.143 172.671 cv
486.308 191.363 li
493.464 195.522 493.431 202.29 486.228 206.449 cv
297.078 315.654 li
325.291 332.05 li
332.448 336.209 332.414 342.977 325.207 347.138 cv
172.417 434.039 li
324.074 346.479 li
f
465.277 245.988 mo
464.96 246.171 464.964 246.463 465.273 246.643 cv
481.638 256.153 li
488.794 260.312 500.478 260.315 507.681 256.156 cv
559.937 225.986 li
560.255 225.803 560.256 225.508 559.946 225.328 cv
559.632 225.144 559.127 225.147 558.809 225.331 cv
506.554 255.501 li
499.98 259.297 489.31 259.297 482.772 255.498 cv
466.408 245.988 li
466.099 245.808 465.589 245.808 465.277 245.988 cv
f
408.062 338.075 mo
400.859 342.233 400.821 348.999 407.982 353.16 cv
439.584 371.524 li
446.115 375.32 446.08 381.501 439.506 385.297 cv
335.463 445.365 li
328.884 449.164 318.214 449.164 311.683 445.368 cv
293.622 434.873 li
287.09 431.077 287.126 424.897 293.705 421.098 cv
372.376 375.678 li
372.687 375.497 372.689 375.202 372.379 375.022 cv
372.064 374.839 371.56 374.842 371.248 375.022 cv
292.577 420.442 li
285.369 424.604 285.331 431.369 292.487 435.528 cv
310.548 446.023 li
317.704 450.183 329.383 450.183 336.591 446.021 cv
440.634 385.952 li
447.837 381.793 447.875 375.028 440.719 370.87 cv
409.117 352.505 li
402.581 348.706 402.615 342.526 409.189 338.73 cv
605.062 225.644 li
605.379 225.461 605.38 225.171 605.065 224.988 cv
604.756 224.809 604.251 224.806 603.935 224.988 cv
408.062 338.075 li
f
556.672 375.548 mo
549.47 379.707 549.431 386.472 556.593 390.634 cv
563.124 394.429 563.089 400.609 556.51 404.408 cv
533.224 417.853 li
532.912 418.032 532.91 418.327 533.221 418.508 cv
533.53 418.688 534.04 418.688 534.352 418.508 cv
557.638 405.063 li
564.846 400.901 564.884 394.137 557.728 389.979 cv
551.19 386.18 551.226 379.999 557.8 376.203 cv
616.309 342.424 li
616.62 342.243 616.627 341.951 616.312 341.769 cv
616.002 341.588 615.492 341.588 615.181 341.769 cv
556.672 375.548 li
cp
f
136.672 270.548 mo
129.469 274.707 129.431 281.472 136.592 285.634 cv
143.124 289.429 143.089 295.609 136.51 299.408 cv
113.224 312.853 li
112.912 313.032 112.911 313.327 113.22 313.508 cv
113.53 313.688 114.04 313.688 114.352 313.508 cv
137.637 300.063 li
144.846 295.901 144.883 289.137 137.727 284.979 cv
131.191 281.18 131.226 274.999 137.8 271.203 cv
196.308 237.423 li
196.62 237.244 196.627 236.951 196.312 236.768 cv
196.002 236.588 195.493 236.588 195.181 236.768 cv
136.672 270.548 li
cp
f
285.165 97.5605 mo
284.848 97.7432 284.851 98.0356 285.166 98.2188 cv
357.962 140.523 li
358.271 140.703 358.776 140.706 359.093 140.523 cv
359.405 140.343 359.406 140.048 359.097 139.868 cv
286.301 97.5635 li
285.986 97.3804 285.476 97.3804 285.165 97.5605 cv
cp
f
247.943 422.937 mo
242.58 422.937 237.224 421.752 233.145 419.382 cv
215.854 409.333 li
302.497 360.054 li
333.918 378.314 li
262.792 419.379 li
258.684 421.751 253.311 422.937 247.943 422.937 cv
215.532 409.146 mo
175.31 385.772 li
167.15 381.029 167.193 373.338 175.407 368.596 cv
223.632 340.753 li
225.588 341.89 li
229.166 343.969 233.877 345.009 238.594 345.009 cv
243.312 345.009 248.035 343.969 251.636 341.89 cv
261.47 336.212 li
301.533 359.494 li
215.532 409.146 li
334.077 378.223 mo
302.8 359.882 li
325.207 347.138 li
332.414 342.977 332.448 336.209 325.291 332.05 cv
297.078 315.654 li
339.444 291.194 li
402.504 327.602 li
404.588 328.805 406.559 329.375 408.306 329.375 cv
412.541 329.375 415.457 326.023 415.473 320.216 cv
415.497 311.578 li
417.675 312.844 li
425.835 317.586 425.792 325.271 417.578 330.014 cv
334.077 378.223 li
301.838 359.318 mo
261.956 335.931 li
295.943 316.31 li
324.157 332.705 li
330.693 336.504 330.653 342.682 324.074 346.479 cv
301.838 359.318 li
238.6 344.08 mo
234.295 344.08 229.996 343.131 226.728 341.231 cv
224.772 340.095 li
246.533 327.531 li
260.338 335.554 li
250.504 341.231 li
247.214 343.131 242.904 344.08 238.6 344.08 cv
260.829 335.27 mo
247.086 327.212 li
273.419 312.008 li
284.12 318.31 li
284.187 315.945 284.462 313.615 284.93 311.343 cv
287.362 312.709 289.061 313.667 289.713 314.039 cv
289.826 313.656 289.945 313.275 290.069 312.896 cv
294.811 315.651 li
260.829 335.27 li
410.722 324.371 mo
412.135 323.72 413.067 322.228 413.329 320.248 cv
413.477 319.273 413.414 318.154 413.408 317.053 cv
413.361 313.748 li
413.315 310.31 li
413.938 310.672 li
413.873 314.044 li
413.808 317.284 li
413.777 318.348 413.811 319.486 413.617 320.473 cv
413.248 322.444 412.195 323.84 410.722 324.371 cv
295.946 314.996 mo
290.446 311.8 li
292.541 305.981 295.958 300.707 300.438 296.409 cv
327.91 280.548 li
330.211 284.35 333.304 287.649 336.706 289.613 cv
338.308 290.538 li
295.946 314.996 li
381.659 305.984 mo
380.969 305.984 380.191 305.759 379.37 305.285 cv
360.942 294.646 li
358.118 293.016 355.832 289.049 355.841 285.809 cv
355.848 283.51 357.004 282.182 358.682 282.182 cv
359.373 282.182 360.152 282.407 360.976 282.883 cv
379.403 293.522 li
382.224 295.149 384.515 299.112 384.505 302.358 cv
384.499 304.655 383.338 305.984 381.659 305.984 cv
337.56 284.659 mo
337.558 284.658 337.556 284.657 337.554 284.656 cv
336.631 284.088 335.695 283.569 334.791 282.851 cv
335.697 283.57 336.634 284.09 337.56 284.659 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
333.918 378.314 mo
302.497 360.054 li
302.8 359.882 li
334.077 378.223 li
333.918 378.314 li
301.533 359.494 mo
261.47 336.212 li
261.956 335.931 li
301.838 359.318 li
301.533 359.494 li
260.338 335.554 mo
246.533 327.531 li
247.086 327.212 li
260.829 335.27 li
260.338 335.554 li
.364706 .482353 .835294 rgb
f
215.854 409.333 mo
215.532 409.146 li
301.533 359.494 li
301.838 359.318 li
324.074 346.479 li
330.653 342.682 330.693 336.504 324.157 332.705 cv
295.943 316.31 li
261.956 335.931 li
261.47 336.212 li
251.636 341.89 li
248.035 343.969 243.312 345.009 238.594 345.009 cv
233.877 345.009 229.166 343.969 225.588 341.89 cv
223.632 340.753 li
224.772 340.095 li
226.728 341.231 li
229.996 343.131 234.295 344.08 238.6 344.08 cv
242.904 344.08 247.214 343.131 250.504 341.231 cv
260.338 335.554 li
260.829 335.27 li
294.811 315.651 li
290.069 312.896 li
290.19 312.529 290.315 312.163 290.446 311.8 cv
295.946 314.996 li
338.308 290.538 li
339.444 291.194 li
297.078 315.654 li
325.291 332.05 li
332.448 336.209 332.414 342.977 325.207 347.138 cv
302.8 359.882 li
302.497 360.054 li
215.854 409.333 li
f
340.274 271.933 mo
340.087 271.643 339.907 271.346 339.734 271.045 cv
336.309 273.035 332.885 275.024 329.461 277.015 cv
329.633 277.315 329.813 277.612 330 277.903 cv
333.425 275.913 336.849 273.923 340.274 271.933 cv
.0745098 .494118 .917647 rgb
f
339.189 270.033 mo
335.765 272.023 332.34 274.014 328.915 276.003 cv
329.087 276.345 329.27 276.683 329.461 277.015 cv
332.885 275.024 336.309 273.035 339.734 271.045 cv
339.543 270.712 339.361 270.375 339.189 270.033 cv
f
340.274 271.933 mo
336.849 273.923 333.425 275.913 330 277.903 cv
330.147 278.131 330.298 278.355 330.452 278.576 cv
333.877 276.586 337.301 274.597 340.726 272.606 cv
340.571 272.386 340.42 272.161 340.274 271.933 cv
f
342.005 274.236 mo
341.556 273.727 341.128 273.18 340.726 272.606 cv
337.301 274.597 333.877 276.586 330.452 278.576 cv
330.855 279.15 331.283 279.697 331.732 280.207 cv
331.945 280.449 332.163 280.684 332.383 280.912 cv
335.808 278.922 339.232 276.932 342.657 274.942 cv
342.436 274.715 342.219 274.479 342.005 274.236 cv
f
342.859 275.147 mo
342.657 274.942 li
339.232 276.932 335.808 278.922 332.383 280.912 cv
332.585 281.117 li
336.01 279.128 339.434 277.138 342.859 275.147 cv
cp
f
344.859 276.886 mo
344.178 276.378 343.506 275.796 342.859 275.147 cv
339.434 277.138 336.01 279.128 332.585 281.117 cv
333.233 281.767 333.905 282.349 334.586 282.856 cv
337.668 281.065 341.777 278.677 344.859 276.886 cv
cp
f
337.278 263.104 mo
337.235 261.917 337.238 260.794 337.218 259.642 cv
326.944 265.612 li
326.964 266.765 326.961 267.887 327.004 269.074 cv
327.039 270.267 327.258 271.566 327.66 272.875 cv
327.975 273.926 328.401 274.981 328.915 276.003 cv
332.34 274.014 335.765 272.023 339.189 270.033 cv
338.675 269.012 338.249 267.955 337.934 266.905 cv
337.532 265.597 337.312 264.297 337.278 263.104 cv
f
334.61 282.704 mo
344.883 276.733 li
343.92 275.959 342.991 275.047 342.141 274.015 cv
340.427 271.965 339.082 269.411 338.409 266.96 cv
328.135 272.931 li
328.809 275.381 330.153 277.936 331.867 279.985 cv
332.717 281.018 333.647 281.929 334.61 282.704 cv
.815686 .898039 .984314 rgb
f
346.348 277.864 mo
345.852 277.578 345.354 277.266 344.859 276.886 cv
334.586 282.856 li
335.081 283.236 335.578 283.548 336.074 283.835 cv
336.57 284.121 337.066 284.382 337.559 284.659 cv
340.984 282.669 344.408 280.678 347.833 278.688 cv
347.339 278.412 346.844 278.15 346.348 277.864 cv
cp
.0745098 .494118 .917647 rgb
f
337.559 284.659 mo
347.833 278.688 li
346.846 278.081 345.846 277.53 344.883 276.733 cv
334.61 282.704 li
335.572 283.501 336.573 284.052 337.559 284.659 cv
cp
.815686 .898039 .984314 rgb
f
347.833 278.688 mo
346.899 279.23 345.965 279.773 345.031 280.316 cv
344.195 280.802 343.36 281.287 342.524 281.772 cv
340.869 282.734 339.214 283.697 337.559 284.659 cv
340.641 282.867 344.75 280.479 347.833 278.688 cv
cp
.0745098 .494118 .917647 rgb
f
328.135 272.931 mo
338.409 266.96 li
337.661 264.466 337.951 262.353 337.948 260.063 cv
327.675 266.034 li
327.678 268.322 327.387 270.437 328.135 272.931 cv
.815686 .898039 .984314 rgb
f
326.944 265.612 mo
337.218 259.642 li
337.13 252.757 li
326.857 258.728 li
326.944 265.612 li
.0745098 .494118 .917647 rgb
f
327.675 266.034 mo
337.948 260.063 li
338.075 253.303 li
327.801 259.272 li
327.675 266.034 li
.815686 .898039 .984314 rgb
f
326.66 231.288 mo
336.933 225.318 li
336.812 207.034 336.836 188.832 336.869 170.631 cv
336.944 152.459 337.018 134.288 337.247 116.199 cv
326.974 122.169 li
326.745 140.258 326.67 158.43 326.596 176.602 cv
326.562 194.803 326.539 213.004 326.66 231.288 cv
.0745098 .494118 .917647 rgb
f
328.148 232.148 mo
338.422 226.178 li
338.464 222.83 338.502 219.477 338.534 216.123 cv
328.261 222.093 li
328.228 225.447 328.191 228.8 328.148 232.148 cv
.815686 .898039 .984314 rgb
f
326.857 258.728 mo
337.13 252.757 li
336.933 225.318 li
326.66 231.288 li
326.857 258.728 li
.0745098 .494118 .917647 rgb
f
328.175 252.445 mo
338.448 246.476 li
338.535 216.123 li
328.261 222.093 li
328.175 252.445 li
f
327.801 259.272 mo
338.075 253.303 li
338.422 226.178 li
328.148 232.148 li
327.801 259.272 li
.815686 .898039 .984314 rgb
f
330.369 256.245 mo
340.642 250.275 li
339.428 249.574 338.444 247.871 338.448 246.476 cv
328.175 252.445 li
328.171 253.841 329.154 255.544 330.369 256.245 cv
.0745098 .494118 .917647 rgb
f
348.847 256.49 mo
345.422 258.48 341.998 260.471 338.573 262.461 cv
338.889 262.868 339.21 263.102 339.531 263.292 cv
349.804 257.322 li
349.483 257.131 349.162 256.897 348.847 256.49 cv
f
350.768 257.6 mo
350.447 257.639 350.125 257.502 349.804 257.322 cv
339.531 263.292 li
339.852 263.473 340.173 263.609 340.495 263.57 cv
343.577 261.779 347.686 259.391 350.768 257.6 cv
f
379.37 305.285 mo
389.644 299.314 li
371.216 288.676 li
360.942 294.646 li
379.37 305.285 li
cp
f
379.376 302.932 mo
389.65 296.962 li
371.223 286.323 li
360.949 292.293 li
379.376 302.932 li
cp
.156863 .313726 .796078 rgb
f
366.114 279.839 mo
366.119 278.227 366.688 277.093 367.606 276.558 cv
357.333 282.528 li
356.415 283.063 355.846 284.197 355.841 285.809 cv
355.832 289.049 358.118 293.015 360.942 294.646 cv
371.216 288.676 li
368.392 287.045 366.105 283.079 366.114 279.839 cv
cp
.0745098 .494118 .917647 rgb
f
369.057 279.049 mo
358.783 285.02 li
358.232 285.34 357.891 286.021 357.888 286.991 cv
357.883 288.938 359.251 291.313 360.949 292.293 cv
371.223 286.323 li
369.524 285.342 368.156 282.967 368.162 281.021 cv
368.164 280.051 368.506 279.369 369.057 279.049 cv
cp
.156863 .313726 .796078 rgb
f
379.396 295.874 mo
389.67 289.903 li
371.243 279.265 li
360.97 285.235 li
379.396 295.874 li
cp
.0745098 .494118 .917647 rgb
f
379.403 293.521 mo
389.677 287.551 li
371.249 276.912 li
360.976 282.882 li
379.403 293.521 li
cp
.156863 .313726 .796078 rgb
f
371.243 279.265 mo
370.388 278.771 369.615 278.725 369.057 279.049 cv
358.783 285.02 li
359.342 284.695 360.114 284.742 360.97 285.235 cv
364.052 283.444 368.161 281.056 371.243 279.265 cv
cp
.0745098 .494118 .917647 rgb
f
367.608 276.557 mo
357.335 282.527 li
358.266 281.986 359.555 282.062 360.976 282.882 cv
371.249 276.912 li
369.828 276.092 368.539 276.016 367.608 276.557 cv
cp
.156863 .313726 .796078 rgb
f
384.411 289.301 mo
394.685 283.33 li
380.558 275.238 li
370.284 281.208 li
384.411 289.301 li
cp
.0745098 .494118 .917647 rgb
f
384.413 288.873 mo
394.687 282.902 li
380.559 274.682 li
370.285 280.652 li
384.413 288.873 li
cp
.537255 .74902 .960784 rgb
f
370.284 281.208 mo
380.558 275.238 li
366.426 267.015 li
356.152 272.985 li
370.284 281.208 li
cp
.0745098 .494118 .917647 rgb
f
370.285 280.652 mo
380.559 274.682 li
366.427 266.587 li
356.153 272.557 li
370.285 280.652 li
cp
.537255 .74902 .960784 rgb
f
356.152 272.985 mo
366.426 267.015 li
359.357 262.854 li
349.084 268.823 li
356.152 272.985 li
cp
.0745098 .494118 .917647 rgb
f
356.153 272.557 mo
366.427 266.587 li
359.358 262.581 li
349.085 268.551 li
356.153 272.557 li
.537255 .74902 .960784 rgb
f
349.084 268.823 mo
359.357 262.854 li
352.294 258.642 li
342.02 264.611 li
349.084 268.823 li
.0745098 .494118 .917647 rgb
f
349.085 268.551 mo
359.358 262.581 li
352.294 258.642 li
342.02 264.611 li
349.085 268.551 li
.537255 .74902 .960784 rgb
f
381.561 303.145 mo
391.834 297.174 li
391.275 297.499 390.502 297.454 389.65 296.962 cv
379.376 302.932 li
380.229 303.424 381.002 303.469 381.561 303.145 cv
cp
.156863 .313726 .796078 rgb
f
381.561 303.145 mo
391.834 297.174 li
392.386 296.854 392.729 296.173 392.731 295.206 cv
392.736 293.254 391.363 290.882 389.67 289.903 cv
379.396 295.874 li
381.09 296.852 382.463 299.225 382.458 301.176 cv
382.455 302.143 382.112 302.824 381.561 303.145 cv
cp
.0745098 .494118 .917647 rgb
f
393.284 299.666 mo
392.353 300.208 391.063 300.134 389.644 299.314 cv
379.37 305.285 li
380.779 306.099 382.062 306.177 382.991 305.647 cv
386.416 303.657 389.84 301.667 393.264 299.678 cv
389.84 301.667 386.417 303.656 382.993 305.646 cv
383.011 305.636 li
386.093 303.845 390.202 301.457 393.284 299.666 cv
cp
f
383.01 305.637 mo
393.283 299.666 li
394.202 299.132 394.774 297.998 394.778 296.388 cv
394.788 293.143 392.496 289.179 389.677 287.551 cv
379.403 293.521 li
382.223 295.149 384.515 299.112 384.505 302.358 cv
384.5 303.968 383.929 305.103 383.01 305.637 cv
cp
.156863 .313726 .796078 rgb
f
408.817 291.275 mo
404.108 288.669 399.399 286.003 394.685 283.33 cv
384.412 289.301 li
389.126 291.974 393.835 294.64 398.544 297.245 cv
401.626 295.454 405.735 293.066 408.817 291.275 cv
cp
.0745098 .494118 .917647 rgb
f
410.33 291.988 mo
406.906 293.979 403.481 295.969 400.057 297.958 cv
400.378 298.368 400.698 298.602 401.02 298.793 cv
411.293 292.822 li
410.972 292.632 410.651 292.398 410.33 291.988 cv
cp
f
411.743 293.033 mo
411.593 292.981 411.443 292.906 411.293 292.822 cv
401.02 298.793 li
401.17 298.877 401.319 298.951 401.47 299.003 cv
404.895 297.013 408.318 295.022 411.743 293.033 cv
cp
f
411.743 293.033 mo
408.318 295.022 404.895 297.013 401.47 299.003 cv
401.64 299.062 401.81 299.09 401.979 299.068 cv
412.253 293.098 li
412.084 293.12 411.913 293.092 411.743 293.033 cv
cp
f
409.01 301.648 mo
419.283 295.679 li
340.642 250.275 li
330.369 256.245 li
409.01 301.648 li
f
339.532 262.741 mo
349.806 256.772 li
349.485 256.591 349.164 256.454 348.846 256.49 cv
338.573 262.461 li
338.89 262.424 339.211 262.562 339.532 262.741 cv
.537255 .74902 .960784 rgb
f
340.495 263.57 mo
350.768 257.6 li
350.448 257.195 350.127 256.962 349.806 256.772 cv
339.532 262.741 li
339.853 262.932 340.174 263.166 340.495 263.57 cv
f
339.532 262.741 mo
339.211 262.562 338.89 262.424 338.573 262.461 cv
338.889 262.868 339.21 263.102 339.531 263.292 cv
339.852 263.472 340.173 263.609 340.495 263.57 cv
340.174 263.166 339.853 262.932 339.532 262.741 cv
f
334.978 251.612 mo
345.251 245.642 li
343.041 244.366 341.25 241.265 341.257 238.725 cv
330.984 244.695 li
330.977 247.235 332.767 250.336 334.978 251.612 cv
.835294 .85098 .92549 rgb
f
382.993 305.646 mo
383.818 305.171 384.641 304.688 385.464 304.21 cv
384.64 304.689 383.815 305.168 382.991 305.647 cv
382.993 305.646 li
cp
.0745098 .494118 .917647 rgb
f
360.949 292.293 mo
379.376 302.932 li
381.07 303.91 382.452 303.122 382.458 301.176 cv
382.463 299.225 381.09 296.852 379.396 295.874 cv
360.97 285.235 li
359.271 284.255 357.894 285.039 357.888 286.991 cv
357.883 288.938 359.251 291.313 360.949 292.293 cv
cp
379.403 293.521 mo
382.223 295.149 384.515 299.112 384.505 302.358 cv
384.496 305.599 382.189 306.913 379.37 305.285 cv
360.942 294.646 li
358.118 293.015 355.831 289.049 355.841 285.809 cv
355.85 282.563 358.151 281.252 360.976 282.882 cv
379.403 293.521 li
cp
.156863 .313726 .796078 rgb
f
360.97 285.235 mo
359.271 284.255 357.894 285.039 357.888 286.991 cv
357.883 288.938 359.251 291.313 360.949 292.293 cv
379.376 302.932 li
381.07 303.91 382.452 303.122 382.458 301.176 cv
382.463 299.225 381.09 296.852 379.396 295.874 cv
360.97 285.235 li
cp
.0745098 .494118 .917647 rgb
f
411.038 324.206 mo
421.312 318.235 li
421.209 318.296 421.103 318.351 420.994 318.4 cv
410.721 324.371 li
410.829 324.32 410.936 324.266 411.038 324.206 cv
cp
.815686 .898039 .984314 rgb
f
420.994 318.4 mo
420.617 318.576 420.155 318.889 419.795 319.098 cv
419.606 319.207 419.355 319.354 419.167 319.463 cv
418.777 319.689 418.258 319.991 417.868 320.218 cv
417.198 320.606 416.528 320.996 415.858 321.385 cv
415.189 321.774 414.52 322.164 413.85 322.553 cv
413.207 322.927 412.564 323.3 411.922 323.673 cv
411.562 323.883 411.081 324.161 410.721 324.371 cv
410.939 324.292 411.149 324.194 411.349 324.078 cv
421.622 318.108 li
421.423 318.224 421.213 318.321 420.994 318.4 cv
cp
.0745098 .494118 .917647 rgb
f
370.285 280.652 mo
356.153 272.557 li
349.085 268.551 li
342.02 264.611 li
349.084 268.823 li
356.152 272.984 li
370.284 281.208 li
384.411 289.301 li
389.125 291.974 393.835 294.64 398.544 297.246 cv
393.836 294.409 389.126 291.637 384.413 288.873 cv
370.285 280.652 li
.537255 .74902 .960784 rgb
f
398.544 297.246 mo
408.817 291.275 li
404.108 288.439 399.399 285.667 394.687 282.902 cv
384.413 288.873 li
389.126 291.637 393.836 294.409 398.544 297.246 cv
cp
f
423.603 314.277 mo
420.179 316.269 416.754 318.259 413.329 320.247 cv
413.087 322.076 412.273 323.488 411.037 324.206 cv
421.311 318.236 li
422.547 317.518 423.36 316.105 423.603 314.277 cv
cp
.0745098 .494118 .917647 rgb
f
401.021 298.242 mo
411.295 292.271 li
410.974 292.092 410.652 291.954 410.33 291.988 cv
400.057 297.959 li
400.379 297.925 400.7 298.062 401.021 298.242 cv
cp
.537255 .74902 .960784 rgb
f
401.021 298.242 mo
400.7 298.062 400.379 297.925 400.057 297.959 cv
400.378 298.368 400.698 298.602 401.02 298.793 cv
401.341 298.973 401.662 299.11 401.979 299.068 cv
401.663 298.666 401.342 298.433 401.021 298.242 cv
cp
f
401.979 299.068 mo
412.252 293.098 li
411.937 292.695 411.615 292.462 411.295 292.271 cv
401.021 298.242 li
401.342 298.433 401.663 298.666 401.979 299.068 cv
cp
f
397.651 227.459 mo
407.925 221.489 li
352.383 189.421 li
342.109 195.392 li
397.651 227.459 li
.972549 .972549 .972549 rgb
f
397.657 225.261 mo
407.932 219.291 li
352.39 187.224 li
342.116 193.194 li
397.657 225.261 li
.807843 .839216 .937255 rgb
f
342.109 195.392 mo
352.383 189.421 li
351.987 189.193 351.668 188.639 351.669 188.185 cv
341.395 194.155 li
341.394 194.609 341.714 195.164 342.109 195.392 cv
.972549 .972549 .972549 rgb
f
341.395 194.155 mo
351.669 188.185 li
351.671 187.634 li
341.397 193.604 li
341.395 194.155 li
f
413.408 317.053 mo
423.682 311.082 li
423.635 307.778 li
413.361 313.748 li
413.408 317.053 li
cp
.0745098 .494118 .917647 rgb
f
413.808 317.284 mo
424.081 311.313 li
424.146 308.073 li
413.873 314.044 li
413.808 317.284 li
cp
.815686 .898039 .984314 rgb
f
413.329 320.247 mo
423.603 314.277 li
423.749 313.302 423.688 312.185 423.682 311.082 cv
413.408 317.053 li
413.414 318.154 413.476 319.271 413.329 320.247 cv
cp
.0745098 .494118 .917647 rgb
f
351.671 187.634 mo
351.671 187.408 351.751 187.249 351.879 187.174 cv
341.606 193.145 li
341.478 193.219 341.398 193.378 341.397 193.604 cv
344.479 191.813 348.588 189.425 351.671 187.634 cv
.972549 .972549 .972549 rgb
f
411.349 324.078 mo
421.622 318.108 li
422.766 317.443 423.576 316.182 423.891 314.503 cv
424.084 313.517 424.051 312.378 424.081 311.313 cv
413.808 317.284 li
413.776 318.348 413.811 319.487 413.617 320.473 cv
413.303 322.152 412.492 323.414 411.349 324.078 cv
cp
.815686 .898039 .984314 rgb
f
411.704 328.503 mo
421.978 322.532 li
424.297 321.185 425.734 318.319 425.746 314.246 cv
415.473 320.216 li
415.461 324.289 414.023 327.155 411.704 328.503 cv
cp
.156863 .313726 .796078 rgb
f
397.667 221.967 mo
407.94 215.997 li
352.398 183.93 li
342.125 189.9 li
397.667 221.967 li
.972549 .972549 .972549 rgb
f
351.88 187.174 mo
341.606 193.145 li
341.736 193.069 341.917 193.079 342.116 193.194 cv
352.39 187.224 li
352.19 187.109 352.01 187.099 351.88 187.174 cv
.807843 .839216 .937255 rgb
f
397.673 219.765 mo
407.946 213.794 li
352.405 181.727 li
342.131 187.697 li
397.673 219.765 li
f
342.125 189.9 mo
352.398 183.93 li
352.003 183.702 351.684 183.147 351.684 182.688 cv
341.411 188.658 li
341.41 189.118 341.729 189.672 342.125 189.9 cv
.972549 .972549 .972549 rgb
f
341.411 188.658 mo
351.684 182.688 li
351.686 182.142 li
341.413 188.112 li
341.411 188.658 li
f
351.686 182.142 mo
351.687 181.915 351.768 181.754 351.897 181.679 cv
341.624 187.649 li
341.494 187.725 341.413 187.885 341.413 188.112 cv
344.495 186.321 348.604 183.933 351.686 182.142 cv
f
397.683 216.471 mo
407.956 210.5 li
352.414 178.434 li
342.141 184.404 li
397.683 216.471 li
f
351.897 181.679 mo
341.624 187.649 li
341.754 187.573 341.934 187.583 342.131 187.697 cv
352.405 181.727 li
352.207 181.613 352.027 181.603 351.897 181.679 cv
.807843 .839216 .937255 rgb
f
404.442 291.718 mo
414.716 285.747 li
345.251 245.642 li
334.978 251.612 li
404.442 291.718 li
.835294 .85098 .92549 rgb
f
397.688 214.273 mo
407.962 208.303 li
352.421 176.236 li
342.147 182.206 li
397.688 214.273 li
.807843 .839216 .937255 rgb
f
342.141 184.404 mo
352.414 178.434 li
352.018 178.205 351.699 177.651 351.7 177.196 cv
341.427 183.166 li
341.425 183.621 341.745 184.175 342.141 184.404 cv
.972549 .972549 .972549 rgb
f
410.58 301.803 mo
420.854 295.833 li
420.453 296.066 419.897 296.033 419.283 295.679 cv
409.01 301.648 li
409.624 302.003 410.18 302.036 410.58 301.803 cv
cp
.0745098 .494118 .917647 rgb
f
341.427 183.166 mo
351.7 177.196 li
351.701 176.646 li
341.428 182.616 li
341.427 183.166 li
.972549 .972549 .972549 rgb
f
351.911 176.186 mo
341.637 182.156 li
341.509 182.231 341.429 182.39 341.428 182.616 cv
351.701 176.646 li
351.702 176.42 351.782 176.261 351.911 176.186 cv
f
416.275 286.285 mo
415.795 286.241 415.269 286.066 414.716 285.747 cv
404.442 291.718 li
404.995 292.036 405.521 292.212 406.002 292.255 cv
409.426 290.265 412.851 288.274 416.275 286.285 cv
cp
.835294 .85098 .92549 rgb
f
351.911 176.186 mo
341.637 182.156 li
341.768 182.081 341.948 182.091 342.147 182.206 cv
352.421 176.236 li
352.222 176.121 352.041 176.11 351.911 176.186 cv
.807843 .839216 .937255 rgb
f
410.581 301.804 mo
420.854 295.833 li
421.249 295.604 421.494 295.115 421.496 294.423 cv
411.223 300.394 li
411.221 301.086 410.976 301.573 410.581 301.804 cv
cp
.835294 .85098 .92549 rgb
f
417.566 286.024 mo
417.2 286.237 416.762 286.329 416.275 286.285 cv
412.851 288.274 409.426 290.265 406.002 292.255 cv
406.488 292.299 406.926 292.208 407.293 291.994 cv
410.375 290.203 414.484 287.815 417.566 286.024 cv
cp
f
328.261 222.093 mo
338.534 216.123 li
338.679 201.365 338.743 186.56 338.8 171.746 cv
338.823 156.936 338.846 142.123 338.786 127.262 cv
328.513 133.232 li
328.572 148.093 328.549 162.906 328.526 177.716 cv
328.469 192.53 328.406 207.335 328.261 222.093 cv
.968627 .968627 .984314 rgb
f
341.549 152.877 mo
338.124 154.867 334.7 156.857 331.275 158.847 cv
331.243 159.061 331.226 159.291 331.225 159.533 cv
341.499 153.563 li
341.5 153.32 341.517 153.091 341.549 152.877 cv
.835294 .85098 .92549 rgb
f
328.513 133.232 mo
328.261 222.093 li
328.406 207.335 328.469 192.53 328.526 177.716 cv
328.549 162.906 328.572 148.093 328.513 133.232 cv
.968627 .968627 .984314 rgb
f
413.361 313.748 mo
423.635 307.778 li
423.458 294.564 li
413.185 300.535 li
413.361 313.748 li
cp
.0745098 .494118 .917647 rgb
f
413.873 314.044 mo
424.146 308.073 li
424.397 295.107 li
414.124 301.078 li
413.873 314.044 li
cp
.815686 .898039 .984314 rgb
f
407.292 291.995 mo
417.565 286.024 li
418.285 285.606 418.731 284.718 418.735 283.456 cv
408.462 289.427 li
408.458 290.688 408.012 291.577 407.292 291.995 cv
cp
.972549 .972549 .972549 rgb
f
341.549 152.877 mo
341.685 151.978 342.087 151.333 342.667 150.996 cv
332.394 156.966 li
331.813 157.304 331.411 157.948 331.275 158.847 cv
334.7 156.857 338.124 154.867 341.549 152.877 cv
.835294 .85098 .92549 rgb
f
342.669 150.995 mo
332.395 156.965 li
333.124 156.542 334.133 156.601 335.245 157.243 cv
345.519 151.273 li
344.406 150.63 343.397 150.571 342.669 150.995 cv
.972549 .972549 .972549 rgb
f
408.462 289.427 mo
418.735 283.456 li
418.977 198.295 li
408.703 204.265 li
408.462 289.427 li
cp
f
404.71 197.348 mo
414.983 191.378 li
345.519 151.273 li
335.245 157.243 li
404.71 197.348 li
f
408.703 204.265 mo
418.977 198.295 li
418.983 195.755 417.193 192.654 414.983 191.378 cv
404.71 197.348 li
406.92 198.625 408.71 201.725 408.703 204.265 cv
cp
f
412.988 274.195 mo
423.262 268.225 li
423.135 250.665 423.156 233.196 423.183 215.73 cv
423.255 198.285 423.328 180.846 423.555 163.49 cv
413.281 169.46 li
413.055 186.816 412.981 204.255 412.909 221.7 cv
412.883 239.166 412.861 256.635 412.988 274.195 cv
cp
.0745098 .494118 .917647 rgb
f
411.223 300.394 mo
421.496 294.423 li
421.968 127.976 li
411.694 133.946 li
411.223 300.394 li
cp
.835294 .85098 .92549 rgb
f
414.468 275.05 mo
424.742 269.079 li
424.968 251.724 425.046 234.287 425.118 216.848 cv
425.145 199.376 425.171 181.91 425.043 164.35 cv
414.77 170.32 li
414.897 187.88 414.871 205.346 414.845 222.818 cv
414.771 240.257 414.694 257.693 414.468 275.05 cv
cp
.815686 .898039 .984314 rgb
f
413.185 300.535 mo
423.458 294.564 li
423.262 268.225 li
412.988 274.195 li
413.185 300.535 li
cp
.0745098 .494118 .917647 rgb
f
414.124 301.078 mo
424.397 295.107 li
424.742 269.079 li
414.468 275.05 li
414.124 301.078 li
cp
.815686 .898039 .984314 rgb
f
326.974 122.169 mo
337.247 116.199 li
337.594 89.0747 li
327.321 95.0449 li
326.974 122.169 li
cp
.0745098 .494118 .917647 rgb
f
328.458 123.027 mo
338.731 117.057 li
338.539 89.6201 li
328.265 95.5903 li
328.458 123.027 li
cp
.815686 .898039 .984314 rgb
f
327.578 81.5313 mo
337.852 75.561 li
337.878 74.4302 337.872 73.3125 337.936 72.1816 cv
327.662 78.1519 li
327.599 79.2827 327.604 80.4004 327.578 81.5313 cv
cp
.0745098 .494118 .917647 rgb
f
338.699 69.2642 mo
339.114 68.4814 339.702 67.895 340.388 67.4961 cv
330.114 73.4663 li
329.428 73.8652 328.841 74.4517 328.426 75.2344 cv
328.004 76.0459 327.745 77.0371 327.662 78.1519 cv
337.936 72.1816 li
338.018 71.0669 338.277 70.0757 338.699 69.2642 cv
cp
f
340.695 67.5547 mo
330.422 73.5249 li
330.276 73.6143 li
329.608 74.0591 329.061 74.6963 328.695 75.5244 cv
328.324 76.3491 328.103 77.3193 328.063 78.4097 cv
328.036 79.5034 328.079 80.6904 328.085 81.8242 cv
338.359 75.8535 li
338.353 74.7202 338.31 73.5327 338.336 72.4395 cv
338.376 71.3486 338.598 70.3789 338.968 69.5537 cv
339.334 68.7261 339.881 68.0889 340.549 67.644 cv
340.695 67.5547 li
cp
.815686 .898039 .984314 rgb
f
327.321 95.0449 mo
337.594 89.0747 li
337.852 75.561 li
327.578 81.5313 li
327.321 95.0449 li
cp
.0745098 .494118 .917647 rgb
f
328.265 95.5903 mo
338.539 89.6201 li
338.359 75.8535 li
328.085 81.8242 li
328.265 95.5903 li
cp
.815686 .898039 .984314 rgb
f
339.564 78.6123 mo
329.291 84.5825 li
328.895 84.8125 328.649 85.3022 328.647 85.999 cv
338.92 80.0288 li
338.922 79.332 339.168 78.8423 339.564 78.6123 cv
cp
.0745098 .494118 .917647 rgb
f
339.564 78.6123 mo
329.291 84.5825 li
329.69 84.3496 330.244 84.3823 330.855 84.7349 cv
341.128 78.7646 li
340.518 78.4121 339.964 78.3794 339.564 78.6123 cv
cp
.835294 .85098 .92549 rgb
f
328.513 133.232 mo
338.786 127.262 li
338.92 80.0288 li
328.647 85.999 li
328.513 133.232 li
cp
.0745098 .494118 .917647 rgb
f
328.513 133.232 mo
338.786 127.262 li
338.772 123.862 338.754 120.462 338.731 117.057 cv
328.458 123.027 li
328.481 126.432 328.499 129.833 328.513 133.232 cv
cp
.815686 .898039 .984314 rgb
f
398.375 227.052 mo
408.648 221.082 li
408.65 220.531 li
398.377 226.501 li
398.375 227.052 li
cp
.807843 .839216 .937255 rgb
f
398.166 227.51 mo
408.44 221.54 li
408.309 221.616 408.127 221.605 407.925 221.489 cv
397.651 227.459 li
397.854 227.576 398.035 227.586 398.166 227.51 cv
cp
.972549 .972549 .972549 rgb
f
398.166 227.51 mo
408.44 221.54 li
408.568 221.465 408.647 221.307 408.648 221.082 cv
398.375 227.052 li
398.374 227.277 398.295 227.436 398.166 227.51 cv
cp
.807843 .839216 .937255 rgb
f
398.377 226.501 mo
408.65 220.531 li
408.651 220.076 408.331 219.522 407.932 219.291 cv
397.657 225.261 li
398.058 225.492 398.378 226.047 398.377 226.501 cv
cp
f
398.391 221.555 mo
408.664 215.585 li
408.666 215.04 li
398.393 221.01 li
398.391 221.555 li
cp
f
398.181 222.019 mo
408.454 216.049 li
408.323 216.125 408.142 216.113 407.94 215.997 cv
397.667 221.967 li
397.868 222.084 398.05 222.095 398.181 222.019 cv
cp
.972549 .972549 .972549 rgb
f
398.181 222.019 mo
408.454 216.049 li
408.584 215.974 408.663 215.813 408.664 215.585 cv
398.391 221.555 li
398.39 221.784 398.311 221.944 398.181 222.019 cv
cp
.807843 .839216 .937255 rgb
f
398.393 221.01 mo
408.666 215.04 li
408.667 214.585 408.347 214.025 407.946 213.794 cv
397.673 219.765 li
398.073 219.996 398.394 220.555 398.393 221.01 cv
cp
f
398.406 216.064 mo
408.68 210.093 li
408.682 209.543 li
398.408 215.513 li
398.406 216.064 li
cp
f
408.471 210.552 mo
408.34 210.628 408.158 210.617 407.956 210.5 cv
397.683 216.471 li
397.885 216.587 398.066 216.599 398.197 216.522 cv
401.279 214.731 405.389 212.343 408.471 210.552 cv
cp
.972549 .972549 .972549 rgb
f
398.197 216.522 mo
408.471 210.552 li
408.6 210.478 408.679 210.319 408.68 210.093 cv
398.406 216.064 li
398.405 216.289 398.326 216.448 398.197 216.522 cv
cp
.807843 .839216 .937255 rgb
f
398.408 215.513 mo
408.682 209.543 li
408.683 209.088 408.362 208.534 407.962 208.303 cv
397.688 214.273 li
398.089 214.504 398.409 215.059 398.408 215.513 cv
cp
f
342.147 182.206 mo
341.751 181.978 341.429 182.161 341.428 182.616 cv
341.426 183.166 li
341.425 183.621 341.745 184.175 342.141 184.404 cv
397.683 216.471 li
398.083 216.702 398.405 216.518 398.406 216.064 cv
398.408 215.513 li
398.409 215.059 398.089 214.504 397.688 214.273 cv
342.147 182.206 li
f
342.905 66.9688 mo
342.087 66.9888 341.337 67.1821 340.695 67.5547 cv
330.422 73.5249 li
331.063 73.1523 331.813 72.959 332.631 72.939 cv
335.714 71.1479 339.823 68.7598 342.905 66.9688 cv
cp
.0745098 .494118 .917647 rgb
f
332.631 72.939 mo
331.732 72.8964 330.893 73.0547 330.169 73.4351 cv
329.459 73.8339 328.852 74.4312 328.426 75.2348 cv
328.004 76.0463 327.745 77.0376 327.662 78.1518 cv
327.598 79.2828 327.605 80.4004 327.578 81.5313 cv
327.321 95.0449 li
326.974 122.17 li
326.745 140.258 326.67 158.43 326.595 176.602 cv
326.562 194.803 326.539 213.004 326.659 231.288 cv
326.856 258.728 li
326.944 265.612 li
326.964 266.765 326.961 267.888 327.004 269.074 cv
327.038 270.267 327.258 271.567 327.66 272.875 cv
328.445 275.492 329.919 278.148 331.731 280.207 cv
332.633 281.231 333.6 282.121 334.586 282.856 cv
335.081 283.236 335.578 283.548 336.074 283.835 cv
336.57 284.121 337.066 284.382 337.559 284.659 cv
336.573 284.052 335.572 283.501 334.61 282.704 cv
333.647 281.929 332.717 281.018 331.867 279.985 cv
330.153 277.936 328.809 275.381 328.135 272.931 cv
327.387 270.437 327.678 268.322 327.675 266.034 cv
327.801 259.272 li
328.148 232.148 li
328.191 228.8 328.228 225.447 328.261 222.093 cv
328.513 133.232 li
328.499 129.833 328.481 126.432 328.457 123.027 cv
328.265 95.5904 li
328.085 81.8243 li
328.079 80.6905 328.036 79.5034 328.062 78.4097 cv
328.103 77.3194 328.324 76.3491 328.695 75.5245 cv
329.061 74.6963 329.608 74.0591 330.276 73.6142 cv
330.948 73.1831 331.751 72.9609 332.631 72.939 cv
.815686 .898039 .984314 rgb
f
340.388 67.4961 mo
330.114 73.4663 li
330.169 73.4351 li
330.893 73.0547 331.732 72.8965 332.631 72.939 cv
342.905 66.9692 li
342.005 66.9263 341.166 67.0845 340.443 67.4648 cv
340.388 67.4961 li
cp
f
409.496 130.138 mo
419.77 124.168 li
341.128 78.7646 li
330.855 84.7349 li
409.496 130.138 li
cp
.835294 .85098 .92549 rgb
f
357.202 94.9976 mo
367.476 89.0273 li
366.624 88.5361 365.933 87.3389 365.936 86.355 cv
355.662 92.3252 li
355.659 93.3091 356.351 94.5063 357.202 94.9976 cv
cp
.0745098 .494118 .917647 rgb
f
355.662 92.3252 mo
365.936 86.355 li
365.939 84.9702 li
355.666 90.9404 li
355.662 92.3252 li
cp
f
365.939 84.9702 mo
365.94 84.4805 366.113 84.1367 366.392 83.9751 cv
356.118 89.9453 li
355.84 90.1069 355.667 90.4512 355.666 90.9404 cv
358.748 89.1494 362.857 86.7612 365.939 84.9702 cv
cp
f
366.392 83.9751 mo
356.118 89.9453 li
356.399 89.7822 356.788 89.8047 357.216 90.0518 cv
367.489 84.0815 li
367.062 83.8345 366.673 83.812 366.392 83.9751 cv
cp
.156863 .313726 .796078 rgb
f
384.224 110.599 mo
394.497 104.628 li
367.476 89.0273 li
357.202 94.9976 li
384.224 110.599 li
cp
.0745098 .494118 .917647 rgb
f
395.596 104.737 mo
395.315 104.9 394.927 104.876 394.497 104.628 cv
384.224 110.599 li
384.653 110.847 385.042 110.87 385.322 110.707 cv
388.404 108.916 392.514 106.528 395.596 104.737 cv
cp
f
385.321 110.707 mo
395.596 104.737 li
395.874 104.575 396.046 104.23 396.047 103.74 cv
385.773 109.71 li
385.772 110.201 385.6 110.545 385.321 110.707 cv
cp
.156863 .313726 .796078 rgb
f
385.773 109.71 mo
396.047 103.74 li
396.051 102.355 li
385.777 108.326 li
385.773 109.71 li
cp
f
384.237 105.653 mo
394.511 99.6826 li
367.489 84.0815 li
357.216 90.0518 li
384.237 105.653 li
cp
f
385.777 108.326 mo
396.051 102.355 li
396.054 101.371 395.367 100.177 394.511 99.6826 cv
384.237 105.653 li
385.094 106.147 385.78 107.342 385.777 108.326 cv
cp
f
413.281 169.46 mo
423.555 163.49 li
423.898 137.467 li
413.625 143.438 li
413.281 169.46 li
cp
.0745098 .494118 .917647 rgb
f
414.77 170.32 mo
425.043 164.35 li
424.848 138.015 li
414.574 143.986 li
414.77 170.32 li
cp
.815686 .898039 .984314 rgb
f
411.694 133.946 mo
421.968 127.976 li
421.972 126.575 420.988 124.872 419.77 124.168 cv
409.496 130.138 li
410.715 130.842 411.698 132.545 411.694 133.946 cv
cp
.835294 .85098 .92549 rgb
f
330.984 244.695 mo
330.977 247.235 332.767 250.336 334.978 251.612 cv
404.442 291.718 li
406.652 292.993 408.454 291.967 408.462 289.427 cv
408.703 204.265 li
408.71 201.725 406.92 198.625 404.71 197.348 cv
335.245 157.243 li
333.035 155.967 331.232 156.994 331.225 159.533 cv
330.984 244.695 li
330.855 84.7348 mo
409.496 130.138 li
410.715 130.842 411.698 132.545 411.694 133.946 cv
411.223 300.393 li
411.219 301.789 410.228 302.352 409.01 301.648 cv
330.369 256.245 li
329.154 255.544 328.171 253.841 328.175 252.445 cv
328.261 222.093 li
328.406 207.335 328.469 192.53 328.526 177.716 cv
328.55 162.906 328.573 148.093 328.513 133.232 cv
328.647 85.9989 li
328.651 84.5976 329.641 84.0337 330.855 84.7348 cv
f
424.136 121.248 mo
424.136 121.246 li
420.711 123.236 417.286 125.226 413.862 127.216 cv
413.862 127.218 li
413.863 127.226 li
417.273 125.244 420.684 123.262 424.094 121.28 cv
420.684 123.262 417.273 125.244 413.863 127.226 cv
413.966 128.33 413.889 129.379 413.881 130.463 cv
417.298 128.477 420.715 126.492 424.132 124.506 cv
422.199 125.629 420.267 126.752 418.334 127.875 cv
417.458 128.384 416.582 128.894 415.705 129.403 cv
415.518 129.512 415.267 129.658 415.078 129.767 cv
414.719 129.976 414.282 130.355 413.881 130.463 cv
413.881 130.469 li
424.154 124.499 li
424.162 123.411 424.239 122.357 424.136 121.248 cv
cp
.0745098 .494118 .917647 rgb
f
424.136 121.246 mo
424.036 120.129 423.765 118.935 423.358 117.737 cv
419.934 119.728 416.51 121.717 413.085 123.708 cv
413.491 124.905 413.763 126.099 413.862 127.216 cv
417.286 125.226 420.711 123.236 424.136 121.246 cv
cp
f
423.358 117.737 mo
423.357 117.735 li
419.934 119.725 416.509 121.715 413.084 123.705 cv
413.085 123.707 li
416.51 121.717 419.934 119.728 423.358 117.737 cv
cp
f
419.406 110.998 mo
415.982 112.99 412.559 114.979 409.133 116.968 cv
410.842 118.897 412.285 121.299 413.084 123.705 cv
416.509 121.715 419.934 119.725 423.357 117.735 cv
422.559 115.329 421.115 112.927 419.406 110.998 cv
cp
f
414.393 130.765 mo
424.666 124.794 li
424.637 123.69 424.682 122.618 424.536 121.415 cv
424.395 120.229 424.076 118.97 423.614 117.728 cv
422.698 115.233 421.153 112.842 419.405 110.998 cv
409.132 116.968 li
410.88 118.812 412.425 121.204 413.341 123.698 cv
413.803 124.94 414.121 126.2 414.263 127.385 cv
414.408 128.588 414.363 129.66 414.393 130.765 cv
cp
.815686 .898039 .984314 rgb
f
413.625 143.438 mo
423.898 137.467 li
424.154 124.499 li
413.881 130.469 li
413.625 143.438 li
cp
.0745098 .494118 .917647 rgb
f
414.574 143.986 mo
424.848 138.015 li
424.666 124.794 li
414.393 130.765 li
414.574 143.986 li
cp
.815686 .898039 .984314 rgb
f
409.132 116.968 mo
410.842 118.897 412.285 121.3 413.084 123.706 cv
413.491 124.904 413.763 126.1 413.862 127.218 cv
413.966 128.328 413.889 129.381 413.881 130.469 cv
413.625 143.438 li
413.281 169.46 li
413.055 186.816 412.981 204.256 412.909 221.7 cv
412.883 239.167 412.861 256.635 412.988 274.195 cv
413.185 300.535 li
413.361 313.748 li
413.407 317.053 li
413.414 318.154 413.476 319.272 413.329 320.247 cv
413.066 322.228 412.135 323.72 410.721 324.371 cv
412.195 323.84 413.248 322.445 413.617 320.473 cv
413.811 319.487 413.776 318.348 413.808 317.284 cv
413.873 314.044 li
414.124 301.078 li
414.468 275.05 li
414.694 257.693 414.771 240.257 414.845 222.818 cv
414.871 205.346 414.897 187.88 414.77 170.32 cv
414.574 143.986 li
414.393 130.765 li
414.363 129.66 414.408 128.588 414.263 127.385 cv
414.121 126.2 413.803 124.94 413.341 123.698 cv
412.425 121.204 410.88 118.812 409.132 116.968 cv
cp
f
328.458 123.027 mo
328.481 126.432 328.499 129.833 328.513 133.232 cv
328.542 122.978 li
328.458 123.027 li
326.66 231.288 mo
326.539 213.004 326.562 194.803 326.596 176.602 cv
326.67 158.43 326.745 140.258 326.974 122.17 cv
327.321 95.0449 li
327.578 81.5313 li
327.605 80.4004 327.599 79.2828 327.662 78.1523 cv
327.745 77.0371 328.004 76.0463 328.426 75.2348 cv
328.852 74.4312 329.46 73.8339 330.169 73.4351 cv
330.893 73.0547 331.732 72.8964 332.632 72.9395 cv
331.751 72.9609 330.948 73.1831 330.276 73.6142 cv
329.608 74.0591 329.061 74.6963 328.695 75.5239 cv
328.325 76.3497 328.103 77.3194 328.062 78.4097 cv
328.036 79.5034 328.08 80.6905 328.085 81.8243 cv
328.266 95.5904 li
328.62 95.3843 li
328.647 85.9989 li
328.651 84.5981 329.641 84.0342 330.855 84.7353 cv
409.496 130.139 li
410.715 130.842 411.698 132.545 411.694 133.947 cv
411.223 300.393 li
411.219 301.789 410.228 302.352 409.01 301.649 cv
330.369 256.246 li
329.154 255.545 328.171 253.842 328.175 252.445 cv
328.261 222.093 li
328.228 225.447 328.191 228.8 328.149 232.148 cv
327.801 259.272 li
327.675 266.034 li
327.678 268.322 327.388 270.437 328.135 272.93 cv
328.809 275.381 330.154 277.936 331.868 279.985 cv
332.718 281.018 333.647 281.929 334.61 282.704 cv
335.572 283.501 336.573 284.052 337.56 284.659 cv
337.066 284.382 336.57 284.121 336.074 283.835 cv
335.578 283.548 335.081 283.236 334.586 282.856 cv
333.6 282.121 332.633 281.231 331.732 280.207 cv
329.92 278.148 328.445 275.492 327.66 272.876 cv
327.258 271.567 327.039 270.267 327.005 269.074 cv
326.961 267.888 326.964 266.765 326.944 265.612 cv
326.857 258.728 li
326.66 231.288 li
339.531 263.292 mo
339.21 263.102 338.889 262.868 338.573 262.461 cv
338.89 262.424 339.211 262.562 339.532 262.741 cv
339.853 262.933 340.174 263.166 340.495 263.57 cv
340.173 263.609 339.852 263.473 339.531 263.292 cv
349.084 268.823 mo
342.02 264.611 li
349.085 268.551 li
356.153 272.557 li
370.286 280.652 li
384.413 288.873 li
389.127 291.637 393.836 294.409 398.544 297.246 cv
393.835 294.64 389.126 291.974 384.412 289.301 cv
370.284 281.208 li
356.152 272.985 li
349.084 268.823 li
360.942 294.646 mo
358.118 293.016 355.832 289.049 355.841 285.809 cv
355.851 282.563 358.151 281.252 360.976 282.883 cv
379.403 293.522 li
382.224 295.149 384.515 299.112 384.505 302.358 cv
384.496 305.599 382.19 306.913 379.37 305.285 cv
360.942 294.646 li
401.02 298.793 mo
400.698 298.603 400.378 298.368 400.058 297.959 cv
400.379 297.925 400.7 298.062 401.021 298.242 cv
401.342 298.433 401.663 298.666 401.979 299.068 cv
401.662 299.11 401.341 298.973 401.02 298.793 cv
413.617 320.473 mo
413.248 322.444 412.195 323.84 410.722 324.371 cv
412.135 323.72 413.067 322.228 413.329 320.248 cv
413.477 319.273 413.414 318.154 413.408 317.053 cv
413.361 313.748 li
413.185 300.535 li
412.988 274.195 li
412.861 256.635 412.883 239.166 412.909 221.7 cv
412.981 204.256 413.055 186.816 413.281 169.46 cv
413.625 143.437 li
413.881 130.469 li
413.889 129.381 413.966 128.328 413.862 127.218 cv
413.763 126.1 413.491 124.904 413.084 123.705 cv
412.285 121.3 410.842 118.898 409.133 116.968 cv
410.88 118.812 412.425 121.204 413.341 123.698 cv
413.804 124.94 414.121 126.2 414.263 127.385 cv
414.408 128.588 414.363 129.66 414.393 130.765 cv
414.574 143.986 li
414.77 170.32 li
414.897 187.88 414.871 205.346 414.845 222.818 cv
414.773 240.257 414.694 257.693 414.469 275.05 cv
414.124 301.078 li
413.873 314.044 li
413.808 317.284 li
413.777 318.348 413.811 319.486 413.617 320.473 cv
384.238 105.653 mo
385.094 106.147 385.78 107.342 385.778 108.326 cv
385.774 109.711 li
385.772 110.694 385.08 111.093 384.224 110.599 cv
357.202 94.9981 li
356.351 94.5064 355.659 93.3092 355.662 92.3252 cv
355.666 90.9405 li
355.669 89.957 356.364 89.5601 357.216 90.0518 cv
384.238 105.653 li
323.821 267.301 mo
323.798 275.503 329.568 285.492 336.706 289.613 cv
402.504 327.602 li
409.643 331.723 415.45 328.418 415.473 320.216 cv
416.016 128.975 li
416.038 120.772 410.269 110.779 403.131 106.658 cv
337.333 68.6695 li
330.194 64.5483 324.387 67.858 324.364 76.06 cv
323.821 267.301 li
.0745098 .494118 .917647 rgb
f
331.299 158.727 mo
331.323 158.602 li
331.299 158.727 li
331.391 158.342 mo
331.418 158.249 li
331.391 158.342 li
331.543 157.934 mo
331.569 157.883 li
331.543 157.934 li
331.697 157.653 mo
331.755 157.568 li
331.697 157.653 li
331.95 157.326 mo
331.882 157.402 li
331.95 157.326 li
332.106 157.176 mo
332.165 157.125 li
332.106 157.176 li
331.225 159.534 mo
331.053 220.471 li
338.534 216.124 li
338.696 159.235 li
335.245 157.243 li
335.134 157.185 li
335.034 157.13 334.933 157.075 334.834 157.03 cv
334.69 156.972 li
334.579 156.927 li
333.48 157.566 332.381 158.205 331.282 158.844 cv
331.248 159.061 331.227 159.288 331.225 159.534 cv
328.513 133.232 mo
328.261 222.093 li
328.406 207.335 328.47 192.53 328.527 177.716 cv
328.55 162.906 328.573 148.093 328.513 133.232 cv
.815686 .898039 .984314 rgb
f
335.204 157.222 mo
335.245 157.243 li
341.478 160.842 li
341.258 238.725 li
330.984 244.695 li
331.225 159.534 li
335.204 157.222 li
.835294 .85098 .92549 rgb
f
341.427 183.166 mo
341.425 183.621 341.745 184.175 342.141 184.404 cv
397.683 216.471 li
398.083 216.702 398.405 216.518 398.406 216.064 cv
398.408 215.513 li
398.409 215.059 398.089 214.504 397.688 214.273 cv
342.147 182.206 li
341.751 181.978 341.429 182.161 341.428 182.616 cv
341.427 183.166 li
341.395 194.155 mo
341.394 194.609 341.714 195.164 342.109 195.392 cv
397.651 227.459 li
398.052 227.69 398.374 227.506 398.375 227.052 cv
398.377 226.501 li
398.378 226.046 398.058 225.492 397.657 225.261 cv
342.116 193.194 li
341.72 192.966 341.398 193.149 341.397 193.604 cv
341.395 194.155 li
341.411 188.658 mo
341.41 189.118 341.729 189.672 342.125 189.9 cv
397.667 221.967 li
398.067 222.199 398.39 222.015 398.391 221.555 cv
398.393 221.01 li
398.394 220.555 398.073 219.996 397.673 219.765 cv
342.131 187.697 li
341.736 187.469 341.414 187.658 341.413 188.112 cv
341.411 188.658 li
404.71 197.348 mo
406.92 198.625 408.71 201.725 408.703 204.265 cv
408.462 289.427 li
408.454 291.967 406.652 292.993 404.442 291.718 cv
334.978 251.612 li
332.767 250.336 330.977 247.235 330.984 244.695 cv
331.225 159.533 li
331.232 156.994 333.035 155.967 335.245 157.243 cv
404.71 197.348 li
.972549 .972549 .972549 rgb
f
342.116 193.194 mo
341.72 192.966 341.398 193.149 341.397 193.604 cv
341.395 194.155 li
341.394 194.609 341.714 195.164 342.109 195.392 cv
397.651 227.459 li
398.052 227.69 398.374 227.506 398.375 227.052 cv
398.377 226.501 li
398.378 226.047 398.058 225.492 397.657 225.261 cv
342.116 193.194 li
.807843 .839216 .937255 rgb
f
342.131 187.697 mo
341.736 187.469 341.414 187.658 341.413 188.112 cv
341.411 188.658 li
341.41 189.118 341.729 189.672 342.125 189.9 cv
397.667 221.968 li
398.067 222.199 398.39 222.015 398.391 221.555 cv
398.393 221.01 li
398.394 220.555 398.073 219.996 397.673 219.765 cv
342.131 187.697 li
f
338.408 61.7993 mo
328.135 67.7695 li
330.485 66.4033 333.741 66.5957 337.333 68.6694 cv
347.606 62.6992 li
344.014 60.6255 340.759 60.4331 338.408 61.7993 cv
cp
.156863 .313726 .796078 rgb
f
357.216 90.0518 mo
356.364 89.5601 355.669 89.9565 355.666 90.9404 cv
355.662 92.3252 li
355.659 93.3091 356.351 94.5063 357.202 94.998 cv
384.224 110.599 li
385.08 111.093 385.771 110.694 385.773 109.71 cv
385.777 108.326 li
385.78 107.342 385.094 106.147 384.237 105.653 cv
357.216 90.0518 li
cp
f
415.473 320.216 mo
425.746 314.246 li
426.288 123.005 li
416.016 128.975 li
415.473 320.216 li
cp
f
403.13 106.658 mo
413.403 100.688 li
347.606 62.6992 li
337.333 68.6694 li
403.13 106.658 li
cp
f
416.016 128.975 mo
426.288 123.005 li
426.312 114.802 420.542 104.809 413.403 100.688 cv
403.13 106.658 li
410.269 110.779 416.038 120.772 416.016 128.975 cv
cp
f
407.123 164.104 mo
407.081 178.972 li
398.084 184.2 li
398.126 169.333 li
407.123 164.104 li
cp
f
398.126 169.333 mo
398.084 184.2 li
329.075 144.358 li
329.117 129.49 li
398.126 169.333 li
.541176 .784314 .992157 rgb
f
407.123 164.104 mo
398.126 169.333 li
329.117 129.49 li
338.114 124.262 li
407.123 164.104 li
cp
.0745098 .494118 .917647 rgb
f
332.88 139.455 mo
334.584 138.465 li
334.574 141.914 li
332.87 142.904 li
332.88 139.455 li
.121569 .243137 .615686 rgb
f
332.87 142.904 mo
334.574 141.914 li
394.168 176.321 li
392.464 177.311 li
332.87 142.904 li
.133333 .270588 .686275 rgb
f
393.333 173.372 mo
395.037 172.382 li
395.021 177.8 li
393.317 178.79 li
393.333 173.372 li
.156863 .313726 .796078 rgb
f
332.026 137.976 mo
333.73 136.986 li
395.037 172.382 li
393.333 173.372 li
332.026 137.976 li
f
392.464 177.311 mo
392.474 173.862 li
332.88 139.455 li
332.87 142.904 li
392.464 177.311 li
332.026 137.976 mo
393.333 173.372 li
393.317 178.79 li
332.011 143.394 li
332.026 137.976 li
.0745098 .494118 .917647 rgb
f
287.165 304.072 mo
290.535 295.943 296.537 289.01 304.421 284.526 cv
324.637 273.028 li
325.255 275.282 326.201 277.541 327.396 279.667 cv
308.389 290.479 li
305.467 292.141 302.805 294.138 300.438 296.409 cv
287.165 304.072 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.266667 .545098 .894118 ]
/C1 [.266667 .545098 .894118 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.266667 .545098 .894118 ]
/C1 [.180392 .360784 .917647 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~6UO4.6UO4.6UO4.6:+"*6:+"*6:+"*5s[e&5s[e&5s[e%5X7S"5X7S"5X7S!5<h@s5<h@s5<h@r5!D.o
5!D.o5!D+m4Ztqk4Ztqk4Ztni4?P_g4?P_g4?P\e4$,Mc4$,Mc4$#D`3]];_3]];_3]T2\3B9)[3B9)[
3&ilW3&ilW3&ilW2`EZS2`EZS2`EZS2E!HO2E!HO2E!HN2)R6K2)R6K2)R6J1c.$G1c.$G1c.$F1G^gC
1G^gC1G^dA1,:U?1,:U?1,:R=0ekC;0ekC;0ek@90JG170JG170J>(40/"t30/"t30.nk0/hSb//hSb/
~>
<~MMd:KMMd7IM2@(FLkpkCLkgb@LPLV=L5(G;KnY57KnP,4KS5#2K7ef/JqAT+JqAQ)JUrB&J:N0#It)rt
It)orIXZ`oI=6NlI=-EiI!g9fH[C*dH?sm`H?jd]H$O[[G^+IXGB\7TGBS.QG'8%OF`hhLFEDVHFEDSF
F)uDCEcQ2@EcH)=EH,r:E,]c8Df9Q4Df0H1DJj<.D/F-,Ci!p(Chmg%CMR^#C2.KuBk_9qBk_6oBP;'l
B4kjiB4bafAnGUcAS#F`A7T4]A7K+Z@q/tW@U`eU@:<SQ@:3JN?smAL?XI/I?=$rE?=$oC?!U`@>[1N=
~>
<~j5f:^jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPXek2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k3(pjkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$lkih6okih6okih6okih6okih6o
kih6okih6okih6okih6okih6okih9ql07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
289.713 314.039 mo
289.061 313.667 287.362 312.709 284.93 311.343 cv
285.018 310.918 285.112 310.495 285.213 310.074 cv
290.069 312.896 li
289.945 313.275 289.826 313.656 289.713 314.039 cv
290.446 311.8 mo
285.506 308.929 li
285.956 307.271 286.511 305.649 287.165 304.072 cv
300.438 296.409 li
295.958 300.707 292.541 305.981 290.446 311.8 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .384314 .815686 ]
/C1 [.211765 .384314 .815686 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .384314 .815686 ]
/C1 [.196078 .34902 .819608 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K
1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC1G^gC
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
~>
<~@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:3JN?smAM?smAM?smAM?smAM?smAM?smAM?sd8J?XI/I
?XI/I?XI/I?XI/I?XI/I?XI/I?XI,G?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?=$oC?!U`A?!U`A?!U`A
?!U`A?!U`A?!U`A?!U`@>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N<>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>?b<9>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1
~>
<~cd:%cd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.d
d*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.d
d*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.d
d*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.d
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
290.069 312.896 mo
285.213 310.074 li
285.306 309.69 285.403 309.31 285.506 308.929 cv
290.446 311.8 li
290.315 312.163 290.19 312.529 290.069 312.896 cv
.321569 .447059 .827451 rgb
f
330.395 277.962 mo
329.388 276.369 328.601 274.625 328.135 272.931 cv
328.135 272.931 li
328.601 274.625 329.388 276.369 330.395 277.961 cv
330.395 277.962 li
.682353 .780392 .945098 rgb
f
328.135 272.931 mo
327.962 272.352 327.844 271.793 327.766 271.248 cv
327.766 271.248 li
327.844 271.793 327.962 272.351 328.135 272.93 cv
328.135 272.93 328.135 272.93 328.135 272.93 cv
328.135 272.931 li
f
328.059 274.054 mo
327.911 273.662 327.778 273.268 327.66 272.876 cv
327.544 272.497 327.443 272.118 327.357 271.743 cv
327.443 272.118 327.544 272.496 327.66 272.875 cv
327.664 272.888 327.668 272.902 327.672 272.915 cv
327.674 272.921 327.676 272.927 327.677 272.932 cv
327.68 272.941 327.683 272.951 327.686 272.96 cv
327.689 272.97 327.692 272.981 327.695 272.992 cv
327.697 272.996 327.698 272.999 327.699 273.003 cv
327.739 273.134 327.781 273.264 327.825 273.395 cv
327.825 273.396 327.826 273.397 327.826 273.398 cv
327.835 273.426 327.845 273.454 327.854 273.482 cv
327.856 273.488 327.858 273.494 327.86 273.5 cv
327.863 273.508 327.866 273.516 327.869 273.525 cv
327.872 273.536 327.876 273.547 327.88 273.558 cv
327.882 273.562 327.883 273.567 327.885 273.571 cv
327.89 273.586 327.895 273.6 327.9 273.614 cv
327.9 273.614 327.9 273.614 327.9 273.614 cv
327.951 273.761 328.004 273.907 328.059 274.054 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
327.9 273.614 mo
327.9 273.614 327.9 273.614 327.9 273.614 cv
327.9 273.614 327.9 273.614 327.9 273.614 cv
327.885 273.571 mo
327.883 273.567 327.882 273.562 327.88 273.558 cv
327.882 273.562 327.883 273.567 327.885 273.571 cv
327.869 273.525 mo
327.866 273.516 327.863 273.508 327.86 273.5 cv
327.863 273.508 327.866 273.516 327.869 273.525 cv
327.854 273.482 mo
327.845 273.454 327.835 273.426 327.826 273.398 cv
327.835 273.426 327.845 273.454 327.854 273.482 cv
327.825 273.395 mo
327.781 273.264 327.739 273.134 327.699 273.003 cv
327.739 273.134 327.781 273.265 327.825 273.395 cv
327.695 272.992 mo
327.692 272.981 327.689 272.97 327.686 272.96 cv
327.689 272.971 327.692 272.981 327.695 272.992 cv
327.677 272.932 mo
327.676 272.927 327.674 272.921 327.672 272.915 cv
327.674 272.921 327.676 272.927 327.677 272.932 cv
.0901961 .458824 .894118 rgb
f
348.002 267.947 mo
342.02 264.611 li
348.002 267.947 li
348.002 267.947 li
.462745 .662745 .929412 rgb
f
347.804 268.06 mo
342.02 264.611 li
348.002 267.947 li
347.804 268.06 li
f
343.435 263.79 mo
342.166 263.057 li
342.167 263.057 li
343.435 263.789 li
343.435 263.79 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
349.328 267.192 mo
343.435 263.79 li
343.435 263.789 li
349.329 267.192 li
349.328 267.192 li
.462745 .662745 .929412 rgb
f
330.135 278.11 mo
329.296 276.839 328.586 275.454 328.059 274.054 cv
328.004 273.907 327.951 273.761 327.9 273.614 cv
327.9 273.614 327.9 273.614 327.9 273.614 cv
327.895 273.6 327.89 273.586 327.885 273.571 cv
327.883 273.567 327.882 273.562 327.88 273.558 cv
327.876 273.547 327.872 273.536 327.869 273.525 cv
327.866 273.516 327.863 273.508 327.86 273.5 cv
327.858 273.494 327.856 273.488 327.854 273.482 cv
327.845 273.454 327.835 273.426 327.826 273.398 cv
327.826 273.397 327.825 273.396 327.825 273.395 cv
327.781 273.265 327.739 273.134 327.699 273.003 cv
327.698 272.999 327.697 272.996 327.695 272.992 cv
327.692 272.981 327.689 272.971 327.686 272.96 cv
327.683 272.951 327.68 272.941 327.677 272.932 cv
327.676 272.927 327.674 272.921 327.672 272.915 cv
327.668 272.902 327.664 272.888 327.66 272.875 cv
327.544 272.496 327.443 272.118 327.357 271.743 cv
327.339 271.665 327.322 271.587 327.305 271.51 cv
327.766 271.248 li
327.844 271.793 327.962 272.352 328.135 272.931 cv
328.601 274.625 329.388 276.369 330.395 277.962 cv
330.135 278.11 li
.682353 .780392 .945098 rgb
f
349.329 267.192 mo
343.435 263.789 li
342.167 263.057 li
346.588 260.542 li
347.225 260.179 347.85 259.797 348.462 259.397 cv
355.236 263.308 li
353.769 264.489 352.205 265.556 350.556 266.494 cv
349.329 267.192 li
.698039 .745098 .898039 rgb
f
327.396 279.667 mo
326.201 277.541 325.255 275.282 324.637 273.028 cv
327.305 271.51 li
327.322 271.587 327.339 271.665 327.357 271.743 cv
327.443 272.118 327.544 272.497 327.66 272.876 cv
327.778 273.268 327.911 273.662 328.059 274.054 cv
328.586 275.454 329.296 276.839 330.135 278.11 cv
327.396 279.667 li
330.395 277.961 mo
329.388 276.369 328.601 274.625 328.135 272.93 cv
328.135 272.93 328.135 272.93 328.135 272.93 cv
327.962 272.351 327.844 271.793 327.766 271.248 cv
342.166 263.057 li
343.435 263.79 li
349.328 267.192 li
348.002 267.947 li
342.02 264.611 li
347.804 268.06 li
330.395 277.961 li
.0901961 .458824 .894118 rgb
f
373.052 202.25 mo
368.371 199.548 li
368.473 198.881 368.601 198.22 368.753 197.567 cv
373.661 200.401 li
373.435 201.009 373.232 201.625 373.052 202.25 cv
.678431 .733333 .909804 rgb
f
385.898 186.487 mo
378.882 182.436 li
379.729 181.828 380.471 181.374 381.031 181.052 cv
381.133 180.993 384.003 179.343 386.843 177.71 cv
393.988 181.836 li
391.453 183.294 387.625 185.495 385.898 186.487 cv
.698039 .745098 .898039 rgb
f
355.236 263.308 mo
348.462 259.397 li
353.226 256.278 357.172 252.043 359.948 247.046 cv
359.948 247.045 li
365.278 237.451 368.076 226.657 368.076 215.682 cv
368.076 210.384 li
372.044 212.674 li
372.044 221.634 li
372.044 232.609 369.247 243.404 363.917 252.998 cv
361.706 256.978 358.753 260.474 355.236 263.308 cv
372.044 210.473 mo
368.076 208.183 li
368.076 204.883 li
372.135 207.227 li
372.075 207.945 372.044 208.67 372.044 209.399 cv
372.044 210.473 li
372.392 205.169 mo
368.087 202.683 li
368.119 201.626 368.214 200.579 368.371 199.548 cv
373.052 202.25 li
372.777 203.206 372.556 204.18 372.392 205.169 cv
373.661 200.401 mo
368.753 197.567 li
369.335 195.078 370.28 192.701 371.548 190.51 cv
373.825 186.573 376.702 183.999 378.882 182.436 cv
385.898 186.487 li
385.366 186.793 385.033 186.985 385 187.004 cv
383 188.154 378.68 190.995 375.517 196.462 cv
374.79 197.719 374.169 199.036 373.661 200.401 cv
.807843 .839216 .937255 rgb
f
372.044 212.674 mo
368.076 210.384 li
368.076 208.183 li
372.044 210.473 li
372.044 212.674 li
.678431 .733333 .909804 rgb
f
372.135 207.227 mo
368.076 204.883 li
368.076 203.446 li
368.076 203.191 368.08 202.937 368.087 202.683 cv
372.392 205.169 li
372.279 205.848 372.193 206.535 372.135 207.227 cv
f
393.988 181.836 mo
386.843 177.71 li
387.634 177.255 388.423 176.801 389.149 176.384 cv
393.317 178.79 li
393.479 178.696 li
396.435 180.429 li
396.375 180.463 395.375 181.039 393.988 181.836 cv
.462745 .690196 .952941 rgb
f
393.317 178.79 mo
393.318 178.601 li
393.479 178.696 li
393.317 178.79 li
.156863 .313725 .796078 rgb
f
393.317 178.79 mo
389.149 176.384 li
389.215 176.346 389.281 176.308 389.345 176.271 cv
393.318 178.601 li
393.317 178.79 li
.0901961 .458824 .894118 rgb
f
273.419 312.008 mo
225.996 284.082 li
225.998 284.041 225.999 284 226 283.959 cv
227.974 283.512 230.063 283.289 232.151 283.289 cv
233.184 283.289 234.217 283.344 235.235 283.453 cv
244.548 288.693 266.572 301.036 279.68 308.394 cv
273.419 312.008 li
226.044 282.962 mo
226.403 276.604 228.258 270.526 231.347 265.165 cv
233.179 263.751 234.843 262.305 236.281 260.855 cv
236.418 260.717 236.553 260.579 236.684 260.442 cv
240.493 257.623 244.023 253.978 247.075 249.856 cv
266.01 239.086 li
273.407 237.986 280.401 235.758 286.18 232.4 cv
293.35 228.232 297.511 222.981 298.667 217.554 cv
299.841 216.069 300.898 214.485 301.825 212.817 cv
307.155 203.223 309.952 192.429 309.952 181.454 cv
309.952 169.218 li
309.952 159.972 314.893 151.432 322.908 146.823 cv
323.327 146.582 323.746 146.342 324.165 146.101 cv
324.141 154.589 li
317.753 159.433 313.921 167.029 313.921 175.17 cv
313.921 187.406 li
313.921 198.381 311.123 209.176 305.793 218.77 cv
305.793 218.77 li
302.661 224.408 298.039 229.077 292.433 232.266 cv
250.266 256.251 li
240.691 261.697 233.891 270.755 231.211 281.182 cv
231.607 281.408 232.334 281.819 233.335 282.383 cv
232.943 282.369 232.55 282.361 232.157 282.361 cv
230.089 282.361 228.019 282.562 226.044 282.962 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.529412 .776471 .988235 ]
/C1 [.529412 .776471 .988235 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.529412 .776471 .988235 ]
/C1 [.521569 .764706 .988235 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57
KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57
~>
<~`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pod6`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4
`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU3_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
~>
251 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
266.01 239.086 mo
288.464 226.314 li
292.412 224.068 295.872 221.089 298.667 217.554 cv
297.511 222.981 293.35 228.232 286.18 232.4 cv
280.401 235.758 273.407 237.986 266.01 239.086 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.52549 .764706 .984314 ]
/C1 [.52549 .764706 .984314 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.52549 .764706 .984314 ]
/C1 [.52549 .760784 .984314 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
133 194 250 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
231.347 265.165 mo
231.762 264.447 232.198 263.741 232.656 263.049 cv
232.815 262.96 232.977 262.869 233.137 262.776 cv
234.342 262.081 235.526 261.3 236.684 260.442 cv
236.553 260.579 236.418 260.717 236.281 260.855 cv
234.843 262.305 233.179 263.751 231.347 265.165 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
232.656 263.049 mo
236.084 257.869 240.72 253.471 246.298 250.298 cv
247.075 249.856 li
244.023 253.978 240.493 257.623 236.684 260.442 cv
235.526 261.3 234.342 262.081 233.137 262.776 cv
232.977 262.869 232.815 262.96 232.656 263.049 cv
.564706 .792157 .968627 rgb
f
226 283.959 mo
226.011 283.626 226.025 283.293 226.044 282.962 cv
228.019 282.562 230.089 282.361 232.157 282.361 cv
232.55 282.361 232.943 282.369 233.335 282.383 cv
233.889 282.695 234.524 283.053 235.235 283.453 cv
234.217 283.344 233.184 283.289 232.151 283.289 cv
230.063 283.289 227.974 283.512 226 283.959 cv
.564706 .796078 .992157 rgb
f
284.12 318.31 mo
273.419 312.008 li
279.68 308.394 li
281.657 309.504 283.433 310.501 284.93 311.343 cv
284.462 313.615 284.187 315.945 284.12 318.31 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
326.706 152.875 mo
326.722 150.119 326.739 147.363 326.758 144.609 cv
327.333 144.279 327.908 143.948 328.483 143.618 cv
328.46 151.866 li
327.932 152.169 327.404 152.472 326.876 152.776 cv
326.819 152.809 326.763 152.841 326.706 152.875 cv
.556863 .788235 .992157 rgb
f
324.141 154.589 mo
324.165 146.101 li
325.029 145.604 325.894 145.106 326.758 144.609 cv
326.739 147.363 326.722 150.119 326.706 152.875 cv
325.811 153.398 324.955 153.971 324.141 154.589 cv
.517647 .768627 .988235 rgb
f
328.551 151.813 mo
328.55 149.071 328.547 146.328 328.542 143.584 cv
328.721 143.481 328.9 143.378 329.078 143.276 cv
329.075 144.358 li
335.283 147.942 li
333.039 149.232 330.795 150.523 328.551 151.813 cv
.556863 .788235 .988235 rgb
f
328.46 151.866 mo
328.483 143.618 li
328.503 143.606 328.523 143.595 328.542 143.584 cv
328.547 146.328 328.55 149.071 328.551 151.813 cv
328.52 151.831 328.49 151.848 328.46 151.866 cv
.556863 .788235 .992157 rgb
f
391.718 174.906 mo
334.574 141.914 li
332.87 142.904 li
334.574 141.914 li
334.578 140.523 li
392.466 174.477 li
392.436 174.494 392.162 174.651 391.718 174.906 cv
335.283 147.942 mo
329.075 144.358 li
329.078 143.276 li
330.057 142.712 331.037 142.149 332.016 141.586 cv
332.011 143.394 li
337.59 146.615 li
336.821 147.058 336.052 147.5 335.283 147.942 cv
.541176 .784314 .992157 rgb
f
332.87 142.904 mo
332.875 141.092 li
333.325 140.833 333.775 140.575 334.226 140.316 cv
334.578 140.523 li
334.574 141.914 li
332.87 142.904 li
.521569 .756863 .972549 rgb
f
390.005 175.892 mo
332.87 142.904 li
334.574 141.914 li
391.718 174.906 li
391.286 175.155 390.693 175.496 390.005 175.892 cv
.521569 .756863 .976471 rgb
f
389.345 176.271 mo
338.194 146.268 li
337.993 146.384 337.791 146.5 337.59 146.615 cv
332.011 143.394 li
332.016 141.586 li
332.302 141.422 332.589 141.257 332.875 141.092 cv
332.87 142.904 li
390.005 175.892 li
389.793 176.013 389.573 176.14 389.345 176.271 cv
.517647 .768627 .988235 rgb
f
279.68 308.394 mo
266.572 301.036 244.548 288.693 235.235 283.453 cv
238.461 283.799 241.54 284.694 244.021 286.136 cv
281.005 307.629 li
279.68 308.394 li
282.14 306.973 mo
245.156 285.48 li
241.877 283.574 237.649 282.542 233.335 282.383 cv
232.334 281.819 231.607 281.408 231.211 281.182 cv
233.891 270.755 240.691 261.697 250.266 256.251 cv
292.433 232.266 li
298.039 229.077 302.661 224.408 305.793 218.77 cv
305.793 218.77 li
311.123 209.176 313.921 198.381 313.921 187.406 cv
313.921 175.17 li
313.921 167.029 317.753 159.433 324.141 154.589 cv
323.821 267.301 li
323.816 269.148 324.105 271.086 324.637 273.028 cv
304.421 284.526 li
296.537 289.01 290.535 295.943 287.165 304.072 cv
282.14 306.973 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.52549 .772549 .988235 ]
/C1 [.52549 .772549 .988235 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.52549 .772549 .988235 ]
/C1 [.521569 .760784 .988235 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
133 <~`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4`5KU4
`5KU4`5KU4`5KU4`5KU4`5KU4`5KR2_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0
_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C0_o'C/_SX1,_SX1,_SX1,_SX1,_SX1,
_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,
~>
251 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
281.005 307.629 mo
244.021 286.136 li
241.54 284.694 238.461 283.799 235.235 283.453 cv
234.524 283.053 233.889 282.695 233.335 282.383 cv
237.649 282.542 241.877 283.574 245.156 285.48 cv
282.14 306.973 li
281.005 307.629 li
.556863 .788235 .992157 rgb
f
284.93 311.343 mo
283.433 310.501 281.657 309.504 279.68 308.394 cv
281.005 307.629 li
285.213 310.074 li
285.112 310.495 285.018 310.918 284.93 311.343 cv
285.506 308.929 mo
282.14 306.973 li
287.165 304.072 li
286.511 305.649 285.956 307.271 285.506 308.929 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
285.213 310.074 mo
281.005 307.629 li
282.14 306.973 li
285.506 308.929 li
285.403 309.31 285.306 309.69 285.213 310.074 cv
.529412 .768627 .984314 rgb
f
327.766 271.248 mo
327.653 270.463 327.621 269.707 327.622 268.958 cv
327.622 267.994 327.675 267.043 327.675 266.061 cv
327.675 266.052 327.675 266.043 327.675 266.034 cv
327.675 266.034 li
327.675 266.034 li
327.675 266.034 li
327.677 267.791 327.507 269.446 327.766 271.248 cv
327.766 271.248 li
.54902 .784314 .988235 rgb
f
327.675 266.034 mo
327.801 259.272 li
327.675 266.034 li
327.675 266.034 li
f
328.17 230.411 mo
328.204 227.64 328.234 224.867 328.261 222.093 cv
328.261 222.093 li
328.234 224.867 328.204 227.64 328.17 230.411 cv
328.17 230.411 li
f
328.148 232.148 mo
328.156 231.569 328.163 230.99 328.17 230.411 cv
328.17 230.411 li
328.163 230.99 328.156 231.569 328.149 232.148 cv
328.148 232.148 li
.517647 .768627 .988235 rgb
f
327.801 259.272 mo
328.148 232.148 li
328.148 232.148 li
328.149 232.148 li
328.149 232.148 328.149 232.148 328.149 232.148 cv
327.801 259.272 li
.54902 .784314 .988235 rgb
f
340.383 263.577 mo
340.383 263.577 340.383 263.577 340.383 263.577 cv
340.42 263.577 340.457 263.575 340.495 263.57 cv
340.495 263.57 li
340.495 263.57 li
340.495 263.57 li
340.495 263.57 li
340.495 263.57 li
340.495 263.57 340.495 263.57 340.495 263.57 cv
340.458 263.575 340.42 263.577 340.383 263.577 cv
339.748 263.406 mo
339.744 263.404 339.74 263.402 339.736 263.4 cv
339.74 263.402 339.744 263.404 339.748 263.406 cv
339.714 263.389 mo
339.691 263.378 339.668 263.366 339.645 263.354 cv
339.668 263.366 339.691 263.378 339.714 263.389 cv
339.573 263.315 mo
339.566 263.311 339.559 263.308 339.551 263.304 cv
339.559 263.308 339.566 263.311 339.573 263.315 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
339.501 262.724 mo
339.228 262.574 338.955 262.457 338.685 262.455 cv
338.955 262.457 339.228 262.574 339.501 262.724 cv
.517647 .768627 .988235 rgb
f
340.383 263.577 mo
340.171 263.577 339.959 263.507 339.748 263.406 cv
339.744 263.404 339.74 263.402 339.736 263.4 cv
339.729 263.397 339.721 263.393 339.714 263.389 cv
339.691 263.378 339.668 263.366 339.645 263.354 cv
339.621 263.342 339.597 263.329 339.573 263.315 cv
339.566 263.311 339.559 263.308 339.551 263.304 cv
339.547 263.301 339.542 263.298 339.537 263.296 cv
339.535 263.294 339.533 263.293 339.531 263.292 cv
339.814 263.451 340.099 263.577 340.383 263.577 cv
340.42 263.577 340.457 263.575 340.495 263.57 cv
340.457 263.575 340.42 263.577 340.383 263.577 cv
340.495 263.57 mo
340.495 263.57 li
340.495 263.57 340.495 263.57 340.495 263.57 cv
340.495 263.57 340.495 263.57 340.495 263.57 cv
f
339.532 262.741 mo
339.522 262.735 339.512 262.73 339.501 262.724 cv
339.228 262.574 338.955 262.457 338.685 262.455 cv
338.683 262.455 338.681 262.455 338.679 262.455 cv
338.679 262.455 338.679 262.455 338.679 262.455 cv
338.961 262.455 339.247 262.581 339.532 262.741 cv
.537255 .776471 .988235 rgb
f
340.495 263.57 mo
340.495 263.57 li
340.409 263.462 340.323 263.366 340.238 263.28 cv
340.323 263.366 340.409 263.462 340.495 263.57 cv
340.495 263.57 li
f
340.383 263.577 mo
340.099 263.577 339.814 263.451 339.531 263.292 cv
339.531 263.292 li
339.531 263.292 li
339.21 263.102 338.889 262.868 338.573 262.461 cv
338.608 262.457 338.643 262.455 338.679 262.455 cv
338.681 262.455 338.683 262.455 338.685 262.455 cv
338.955 262.457 339.228 262.574 339.501 262.724 cv
339.512 262.73 339.522 262.735 339.532 262.741 cv
339.532 262.741 li
339.768 262.881 340.003 263.044 340.238 263.28 cv
340.323 263.366 340.409 263.462 340.495 263.57 cv
340.495 263.57 li
340.495 263.57 li
340.457 263.575 340.42 263.577 340.383 263.577 cv
f
342.166 263.057 mo
341.77 262.829 li
341.771 262.829 341.771 262.829 341.771 262.828 cv
342.167 263.057 li
342.166 263.057 li
339.849 261.719 mo
337.944 260.62 li
337.944 260.619 337.944 260.619 337.944 260.619 cv
339.85 261.719 li
339.849 261.719 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
337.944 260.62 mo
337.466 260.344 li
337.467 260.343 li
337.944 260.619 li
337.944 260.619 337.944 260.619 337.944 260.62 cv
.54902 .784314 .988235 rgb
f
337.466 260.344 mo
331.693 257.011 li
331.694 257.01 li
337.467 260.343 li
337.466 260.344 li
f
331.693 257.011 mo
330.369 256.246 li
329.652 255.832 329.017 255.07 328.616 254.228 cv
329.017 255.07 329.653 255.832 330.369 256.245 cv
331.694 257.01 li
331.693 257.011 li
f
341.77 262.829 mo
341.77 262.829 li
341.771 262.828 li
341.771 262.828 li
341.771 262.829 341.771 262.829 341.77 262.829 cv
.517647 .768627 .988235 rgb
f
340.572 262.137 mo
339.849 261.719 li
339.85 261.719 li
340.573 262.137 li
340.572 262.137 li
.537255 .776471 .988235 rgb
f
341.77 262.829 mo
340.572 262.137 li
340.573 262.137 li
341.771 262.828 li
341.77 262.829 li
f
330.984 244.695 mo
331.024 230.477 li
330.984 244.695 li
330.984 244.695 li
.54902 .784314 .988235 rgb
f
330.984 244.695 mo
330.984 244.695 330.984 244.695 330.984 244.695 cv
330.984 244.695 li
330.984 244.695 li
.54902 .780392 .988235 rgb
f
331.053 220.471 mo
331.225 159.533 li
331.225 159.533 li
331.225 159.533 li
331.053 220.471 li
331.266 158.916 mo
331.266 158.915 331.266 158.914 331.266 158.912 cv
331.266 158.914 331.266 158.915 331.266 158.916 cv
331.268 158.899 mo
331.268 158.897 331.269 158.894 331.269 158.892 cv
331.269 158.894 331.268 158.896 331.268 158.899 cv
331.271 158.881 mo
331.271 158.878 331.271 158.875 331.272 158.872 cv
331.271 158.875 331.271 158.878 331.271 158.881 cv
331.273 158.863 mo
331.274 158.859 331.274 158.855 331.275 158.851 cv
331.274 158.855 331.274 158.859 331.273 158.863 cv
331.276 158.844 mo
331.277 158.84 331.277 158.836 331.278 158.832 cv
331.277 158.836 331.277 158.84 331.276 158.844 cv
331.279 158.822 mo
331.28 158.82 331.28 158.817 331.28 158.814 cv
331.28 158.817 331.28 158.82 331.279 158.822 cv
331.282 158.802 mo
331.283 158.801 331.283 158.8 331.283 158.799 cv
331.283 158.8 331.283 158.801 331.282 158.802 cv
331.51 158.004 mo
331.51 158.003 331.51 158.002 331.511 158.002 cv
331.51 158.002 331.51 158.003 331.51 158.004 cv
331.516 157.989 mo
331.516 157.988 331.517 157.987 331.518 157.986 cv
331.517 157.987 331.517 157.988 331.516 157.989 cv
331.523 157.974 mo
331.523 157.973 331.524 157.972 331.525 157.97 cv
331.524 157.971 331.523 157.973 331.523 157.974 cv
331.529 157.959 mo
331.53 157.957 331.531 157.956 331.532 157.954 cv
331.531 157.956 331.53 157.958 331.529 157.959 cv
331.536 157.944 mo
331.538 157.941 331.539 157.938 331.541 157.935 cv
331.539 157.938 331.538 157.941 331.536 157.944 cv
331.545 157.925 mo
331.547 157.921 331.549 157.918 331.551 157.914 cv
331.549 157.918 331.547 157.921 331.545 157.925 cv
331.553 157.909 mo
331.555 157.906 331.556 157.902 331.558 157.898 cv
331.556 157.902 331.555 157.906 331.553 157.909 cv
331.56 157.894 mo
331.562 157.89 331.564 157.886 331.566 157.882 cv
331.564 157.886 331.562 157.89 331.56 157.894 cv
331.568 157.879 mo
331.57 157.875 331.572 157.871 331.574 157.866 cv
331.572 157.871 331.57 157.875 331.568 157.879 cv
331.575 157.863 mo
331.578 157.859 331.58 157.854 331.582 157.85 cv
331.58 157.854 331.578 157.859 331.575 157.863 cv
331.583 157.849 mo
331.786 157.452 332.068 157.151 332.411 156.956 cv
332.403 156.96 li
332.232 157.059 332.076 157.184 331.938 157.334 cv
331.937 157.334 331.937 157.335 331.937 157.335 cv
331.934 157.338 331.93 157.342 331.927 157.345 cv
331.927 157.346 331.926 157.347 331.926 157.347 cv
331.923 157.35 331.92 157.354 331.917 157.357 cv
331.916 157.358 331.915 157.358 331.915 157.359 cv
331.912 157.363 331.908 157.366 331.905 157.37 cv
331.905 157.37 331.905 157.371 331.904 157.371 cv
331.897 157.379 331.89 157.387 331.884 157.395 cv
331.882 157.396 331.881 157.398 331.88 157.399 cv
331.878 157.402 331.876 157.404 331.874 157.407 cv
331.872 157.409 331.87 157.411 331.869 157.413 cv
331.867 157.415 331.866 157.416 331.864 157.418 cv
331.862 157.42 331.86 157.423 331.858 157.425 cv
331.857 157.427 331.856 157.428 331.855 157.43 cv
331.852 157.432 331.85 157.435 331.848 157.438 cv
331.847 157.439 331.846 157.44 331.845 157.441 cv
331.843 157.444 331.841 157.447 331.838 157.45 cv
331.838 157.451 331.837 157.452 331.836 157.452 cv
331.742 157.571 331.657 157.704 331.583 157.849 cv
335.217 157.227 mo
335.216 157.226 335.214 157.225 335.213 157.224 cv
335.214 157.225 335.216 157.226 335.217 157.227 cv
.552941 .788235 .988235 rgb
f
331.225 159.533 mo
331.226 159.316 331.24 159.111 331.266 158.916 cv
331.266 158.915 331.266 158.914 331.266 158.912 cv
331.267 158.908 331.267 158.903 331.268 158.899 cv
331.268 158.896 331.269 158.894 331.269 158.892 cv
331.269 158.889 331.27 158.885 331.271 158.881 cv
331.271 158.878 331.271 158.875 331.272 158.872 cv
331.272 158.869 331.273 158.866 331.273 158.863 cv
331.274 158.859 331.274 158.855 331.275 158.851 cv
331.275 158.85 331.275 158.849 331.275 158.847 cv
331.275 158.847 331.275 158.847 331.275 158.847 cv
331.243 159.062 331.226 159.29 331.225 159.533 cv
331.225 159.533 li
.54902 .780392 .988235 rgb
f
331.275 158.847 mo
331.276 158.846 331.276 158.845 331.276 158.844 cv
331.277 158.84 331.277 158.836 331.278 158.832 cv
331.278 158.829 331.279 158.826 331.279 158.822 cv
331.28 158.82 331.28 158.817 331.28 158.814 cv
331.281 158.81 331.282 158.806 331.282 158.802 cv
331.283 158.801 331.283 158.8 331.283 158.799 cv
331.331 158.505 331.407 158.24 331.51 158.004 cv
331.51 158.003 331.51 158.002 331.511 158.002 cv
331.512 157.997 331.514 157.993 331.516 157.989 cv
331.517 157.988 331.517 157.987 331.518 157.986 cv
331.519 157.982 331.521 157.978 331.523 157.974 cv
331.523 157.973 331.524 157.971 331.525 157.97 cv
331.526 157.966 331.528 157.963 331.529 157.959 cv
331.53 157.958 331.531 157.956 331.532 157.954 cv
331.533 157.951 331.535 157.948 331.536 157.944 cv
331.538 157.941 331.539 157.938 331.541 157.935 cv
331.542 157.932 331.544 157.928 331.545 157.925 cv
331.547 157.921 331.549 157.918 331.551 157.914 cv
331.551 157.912 331.552 157.911 331.553 157.909 cv
331.555 157.906 331.556 157.902 331.558 157.898 cv
331.559 157.897 331.56 157.895 331.56 157.894 cv
331.562 157.89 331.564 157.886 331.566 157.882 cv
331.566 157.881 331.567 157.88 331.568 157.879 cv
331.57 157.875 331.572 157.871 331.574 157.866 cv
331.574 157.865 331.575 157.865 331.575 157.863 cv
331.578 157.859 331.58 157.854 331.582 157.85 cv
331.582 157.849 331.583 157.849 331.583 157.849 cv
331.657 157.704 331.742 157.571 331.836 157.452 cv
331.556 157.805 331.362 158.274 331.275 158.847 cv
331.275 158.847 331.275 158.847 331.275 158.847 cv
331.838 157.45 mo
331.841 157.447 331.843 157.444 331.845 157.441 cv
331.843 157.444 331.841 157.447 331.838 157.45 cv
331.848 157.438 mo
331.85 157.435 331.852 157.432 331.855 157.43 cv
331.852 157.432 331.85 157.435 331.848 157.438 cv
331.858 157.425 mo
331.86 157.423 331.862 157.42 331.864 157.418 cv
331.862 157.42 331.86 157.423 331.858 157.425 cv
331.869 157.413 mo
331.87 157.411 331.872 157.409 331.874 157.407 cv
331.872 157.409 331.87 157.411 331.869 157.413 cv
331.88 157.399 mo
331.881 157.398 331.882 157.396 331.884 157.395 cv
331.882 157.396 331.881 157.398 331.88 157.399 cv
331.904 157.371 mo
331.905 157.371 331.905 157.37 331.905 157.37 cv
331.905 157.37 331.905 157.371 331.904 157.371 cv
331.915 157.359 mo
331.915 157.358 331.916 157.358 331.917 157.357 cv
331.916 157.358 331.915 157.358 331.915 157.359 cv
331.926 157.347 mo
331.926 157.347 331.927 157.346 331.927 157.345 cv
331.927 157.346 331.926 157.347 331.926 157.347 cv
331.937 157.335 mo
331.937 157.335 331.937 157.334 331.938 157.334 cv
331.937 157.334 331.937 157.335 331.937 157.335 cv
332.403 156.96 mo
332.411 156.956 li
332.413 156.955 332.415 156.954 332.416 156.953 cv
332.412 156.955 li
332.409 156.957 332.406 156.959 332.403 156.96 cv
332.94 156.751 mo
332.94 156.751 332.941 156.751 332.941 156.751 cv
332.941 156.751 332.94 156.751 332.94 156.751 cv
332.955 156.747 mo
332.956 156.747 332.957 156.747 332.958 156.747 cv
332.957 156.747 332.956 156.747 332.955 156.747 cv
332.971 156.744 mo
332.972 156.744 332.974 156.743 332.975 156.743 cv
332.974 156.743 332.972 156.744 332.971 156.744 cv
332.988 156.74 mo
332.989 156.74 332.99 156.74 332.991 156.74 cv
332.99 156.74 332.989 156.74 332.988 156.74 cv
333.006 156.737 mo
333.009 156.736 333.011 156.736 333.013 156.735 cv
333.011 156.736 333.009 156.736 333.006 156.737 cv
333.022 156.734 mo
333.022 156.733 333.023 156.733 333.024 156.733 cv
333.024 156.733 333.025 156.733 333.025 156.733 cv
333.027 156.733 333.029 156.732 333.03 156.732 cv
333.027 156.733 333.025 156.733 333.022 156.734 cv
333.037 156.731 mo
333.038 156.731 333.039 156.73 333.04 156.73 cv
333.041 156.73 333.042 156.73 333.043 156.73 cv
333.044 156.729 333.045 156.729 333.046 156.729 cv
333.043 156.73 333.04 156.73 333.037 156.731 cv
333.051 156.728 mo
333.053 156.728 333.054 156.728 333.056 156.727 cv
333.057 156.727 333.059 156.727 333.06 156.727 cv
333.061 156.727 333.062 156.726 333.062 156.726 cv
333.059 156.727 333.055 156.728 333.051 156.728 cv
333.064 156.726 mo
333.067 156.726 333.069 156.725 333.072 156.725 cv
333.074 156.724 333.075 156.724 333.077 156.724 cv
333.082 156.723 333.087 156.722 333.092 156.722 cv
333.095 156.721 333.098 156.721 333.101 156.72 cv
333.103 156.72 333.105 156.719 333.107 156.719 cv
333.111 156.719 333.114 156.718 333.118 156.718 cv
333.119 156.717 333.121 156.717 333.122 156.717 cv
333.126 156.716 333.13 156.716 333.134 156.715 cv
333.135 156.715 333.136 156.715 333.137 156.715 cv
333.237 156.701 333.34 156.695 333.446 156.694 cv
333.314 156.695 333.187 156.705 333.064 156.726 cv
333.454 156.694 mo
333.453 156.694 333.451 156.694 333.45 156.694 cv
333.45 156.694 li
333.451 156.694 333.453 156.694 333.454 156.694 cv
f
332.412 156.955 mo
332.416 156.953 li
332.602 156.848 332.806 156.774 333.024 156.733 cv
333.023 156.733 333.022 156.733 333.022 156.734 cv
333.019 156.734 333.016 156.735 333.013 156.735 cv
333.011 156.736 333.009 156.736 333.006 156.737 cv
333.001 156.738 332.996 156.739 332.991 156.74 cv
332.99 156.74 332.989 156.74 332.988 156.74 cv
332.984 156.741 332.979 156.742 332.975 156.743 cv
332.974 156.743 332.972 156.744 332.971 156.744 cv
332.967 156.745 332.962 156.746 332.958 156.747 cv
332.957 156.747 332.956 156.747 332.955 156.747 cv
332.951 156.748 332.946 156.75 332.941 156.751 cv
332.941 156.751 332.94 156.751 332.94 156.751 cv
332.751 156.794 332.575 156.863 332.412 156.955 cv
333.025 156.733 mo
333.03 156.732 333.035 156.731 333.04 156.73 cv
333.039 156.73 333.038 156.731 333.037 156.731 cv
333.035 156.731 333.032 156.732 333.03 156.732 cv
333.029 156.732 333.027 156.733 333.025 156.733 cv
333.043 156.73 mo
333.047 156.729 333.052 156.728 333.056 156.727 cv
333.054 156.728 333.053 156.728 333.051 156.728 cv
333.05 156.729 333.048 156.729 333.046 156.729 cv
333.045 156.729 333.044 156.729 333.043 156.73 cv
333.06 156.727 mo
333.064 156.726 333.068 156.725 333.072 156.725 cv
333.069 156.725 333.067 156.726 333.064 156.726 cv
333.063 156.726 333.063 156.726 333.062 156.726 cv
333.062 156.726 333.061 156.727 333.06 156.727 cv
333.077 156.724 mo
333.082 156.723 333.087 156.722 333.092 156.722 cv
333.087 156.722 333.082 156.723 333.077 156.724 cv
333.101 156.72 mo
333.103 156.72 333.105 156.719 333.107 156.719 cv
333.105 156.719 333.103 156.72 333.101 156.72 cv
333.118 156.718 mo
333.119 156.717 333.121 156.717 333.122 156.717 cv
333.121 156.717 333.119 156.717 333.118 156.718 cv
333.134 156.715 mo
333.135 156.715 333.136 156.715 333.137 156.715 cv
333.136 156.715 333.135 156.715 333.134 156.715 cv
.552941 .788235 .988235 rgb
f
327.305 271.51 mo
327.127 270.671 327.027 269.85 327.005 269.074 cv
326.961 267.888 326.964 266.765 326.944 265.612 cv
326.944 265.612 li
326.857 258.728 li
326.66 231.288 li
326.539 213.004 326.562 194.803 326.596 176.602 cv
326.628 168.69 326.661 160.779 326.706 152.875 cv
326.763 152.841 326.819 152.809 326.876 152.776 cv
327.404 152.472 327.932 152.169 328.46 151.866 cv
328.261 222.093 li
328.261 222.093 li
328.234 224.867 328.204 227.64 328.17 230.411 cv
328.163 230.99 328.156 231.569 328.148 232.148 cv
328.148 232.148 li
327.801 259.272 li
327.675 266.034 li
327.675 266.043 327.675 266.052 327.675 266.061 cv
327.675 267.043 327.622 267.994 327.622 268.958 cv
327.621 269.707 327.653 270.463 327.766 271.248 cv
327.305 271.51 li
.54902 .784314 .988235 rgb
f
342.167 263.057 mo
341.771 262.828 li
341.771 262.828 li
340.573 262.137 li
339.85 261.719 li
337.944 260.619 li
337.467 260.343 li
331.694 257.01 li
330.369 256.245 li
329.653 255.832 329.017 255.07 328.616 254.228 cv
328.338 253.642 328.174 253.018 328.175 252.445 cv
328.261 222.093 li
328.261 222.093 li
328.261 222.093 li
328.406 207.335 328.47 192.53 328.527 177.716 cv
328.54 169.086 328.554 160.454 328.551 151.813 cv
330.795 150.523 333.039 149.232 335.283 147.942 cv
386.843 177.71 li
384.003 179.343 381.133 180.993 381.031 181.052 cv
380.471 181.374 379.729 181.828 378.882 182.436 cv
338.696 159.235 li
338.696 159.235 li
338.156 158.923 li
335.245 157.243 li
335.245 157.243 li
335.236 157.237 335.227 157.232 335.217 157.227 cv
335.216 157.226 335.214 157.225 335.213 157.224 cv
334.582 156.866 333.985 156.695 333.454 156.694 cv
333.453 156.694 333.451 156.694 333.45 156.694 cv
333.45 156.694 li
333.45 156.694 li
333.449 156.694 333.447 156.694 333.446 156.694 cv
333.34 156.695 333.237 156.701 333.137 156.715 cv
333.136 156.715 333.135 156.715 333.134 156.715 cv
333.13 156.716 333.126 156.716 333.122 156.717 cv
333.121 156.717 333.119 156.717 333.118 156.718 cv
333.114 156.718 333.111 156.719 333.107 156.719 cv
333.105 156.719 333.103 156.72 333.101 156.72 cv
333.098 156.721 333.095 156.721 333.092 156.722 cv
333.087 156.722 333.082 156.723 333.077 156.724 cv
333.075 156.724 333.074 156.724 333.072 156.725 cv
333.068 156.725 333.064 156.726 333.06 156.727 cv
333.059 156.727 333.057 156.727 333.056 156.727 cv
333.052 156.728 333.047 156.729 333.043 156.73 cv
333.042 156.73 333.041 156.73 333.04 156.73 cv
333.035 156.731 333.03 156.732 333.025 156.733 cv
333.025 156.733 333.024 156.733 333.024 156.733 cv
332.806 156.774 332.602 156.848 332.416 156.953 cv
332.415 156.954 332.413 156.955 332.411 156.956 cv
332.068 157.151 331.786 157.452 331.583 157.849 cv
331.583 157.849 331.582 157.849 331.582 157.85 cv
331.58 157.854 331.578 157.859 331.575 157.863 cv
331.575 157.865 331.574 157.865 331.574 157.866 cv
331.572 157.871 331.57 157.875 331.568 157.879 cv
331.567 157.88 331.566 157.881 331.566 157.882 cv
331.564 157.886 331.562 157.89 331.56 157.894 cv
331.56 157.895 331.559 157.897 331.558 157.898 cv
331.556 157.902 331.555 157.906 331.553 157.909 cv
331.552 157.911 331.551 157.912 331.551 157.914 cv
331.549 157.918 331.547 157.921 331.545 157.925 cv
331.544 157.928 331.542 157.932 331.541 157.935 cv
331.539 157.938 331.538 157.941 331.536 157.944 cv
331.535 157.948 331.533 157.951 331.532 157.954 cv
331.531 157.956 331.53 157.957 331.529 157.959 cv
331.528 157.963 331.526 157.966 331.525 157.97 cv
331.524 157.972 331.523 157.973 331.523 157.974 cv
331.521 157.978 331.519 157.982 331.518 157.986 cv
331.517 157.987 331.516 157.988 331.516 157.989 cv
331.514 157.993 331.512 157.997 331.511 158.002 cv
331.51 158.002 331.51 158.003 331.51 158.004 cv
331.407 158.24 331.331 158.505 331.283 158.799 cv
331.283 158.8 331.283 158.801 331.282 158.802 cv
331.282 158.806 331.281 158.81 331.28 158.814 cv
331.28 158.817 331.28 158.82 331.279 158.822 cv
331.279 158.826 331.278 158.829 331.278 158.832 cv
331.277 158.836 331.277 158.84 331.276 158.844 cv
331.276 158.845 331.276 158.846 331.275 158.847 cv
331.275 158.849 331.275 158.85 331.275 158.851 cv
331.274 158.855 331.274 158.859 331.273 158.863 cv
331.273 158.866 331.272 158.869 331.272 158.872 cv
331.271 158.875 331.271 158.878 331.271 158.881 cv
331.27 158.885 331.269 158.889 331.269 158.892 cv
331.269 158.894 331.268 158.897 331.268 158.899 cv
331.267 158.903 331.267 158.908 331.266 158.912 cv
331.266 158.914 331.266 158.915 331.266 158.916 cv
331.24 159.111 331.226 159.316 331.225 159.533 cv
331.225 159.533 li
331.053 220.471 li
331.053 220.471 li
331.024 230.477 li
330.984 244.695 li
330.984 244.695 330.984 244.695 330.984 244.695 cv
330.984 244.695 li
330.977 247.235 332.767 250.336 334.978 251.612 cv
348.462 259.397 li
347.85 259.797 347.225 260.179 346.588 260.542 cv
342.167 263.057 li
.54902 .780392 .988235 rgb
f
324.637 273.028 mo
324.105 271.086 323.816 269.148 323.821 267.301 cv
324.141 154.589 li
324.955 153.971 325.811 153.398 326.706 152.875 cv
326.661 160.779 326.628 168.69 326.596 176.602 cv
326.562 194.803 326.539 213.004 326.66 231.288 cv
326.857 258.728 li
326.944 265.612 li
326.944 265.612 li
326.964 266.765 326.961 267.888 327.005 269.074 cv
327.027 269.85 327.127 270.671 327.305 271.51 cv
324.637 273.028 li
327.766 271.248 mo
327.507 269.446 327.677 267.791 327.675 266.034 cv
327.675 266.034 li
327.801 259.272 li
328.149 232.148 li
328.149 232.148 li
328.156 231.569 328.163 230.99 328.17 230.411 cv
328.204 227.64 328.234 224.867 328.261 222.093 cv
328.261 222.093 li
328.261 222.093 li
328.175 252.445 li
328.174 253.018 328.338 253.642 328.616 254.228 cv
329.017 255.07 329.652 255.832 330.369 256.246 cv
331.693 257.011 li
337.466 260.344 li
337.944 260.62 li
339.849 261.719 li
340.572 262.137 li
341.77 262.829 li
341.77 262.829 li
342.166 263.057 li
327.766 271.248 li
340.383 263.577 mo
340.383 263.577 340.383 263.577 340.383 263.577 cv
340.42 263.577 340.458 263.575 340.495 263.57 cv
340.495 263.57 340.495 263.57 340.495 263.57 cv
340.495 263.57 li
340.409 263.462 340.323 263.366 340.238 263.28 cv
340.238 263.28 li
340.003 263.044 339.768 262.881 339.532 262.741 cv
339.532 262.741 li
339.247 262.581 338.961 262.455 338.679 262.455 cv
338.679 262.455 338.679 262.455 338.679 262.455 cv
338.643 262.455 338.608 262.457 338.573 262.461 cv
338.889 262.868 339.21 263.102 339.531 263.292 cv
339.531 263.292 li
339.533 263.293 339.535 263.294 339.537 263.296 cv
339.542 263.298 339.547 263.301 339.551 263.304 cv
339.559 263.308 339.566 263.311 339.573 263.315 cv
339.597 263.329 339.621 263.342 339.645 263.354 cv
339.668 263.366 339.691 263.378 339.714 263.389 cv
339.721 263.393 339.729 263.397 339.736 263.4 cv
339.74 263.402 339.744 263.404 339.748 263.406 cv
339.959 263.507 340.171 263.577 340.383 263.577 cv
.517647 .768627 .988235 rgb
f
342.109 193.19 mo
342.01 193.135 341.916 193.104 341.831 193.098 cv
341.833 193.098 341.834 193.098 341.836 193.098 cv
341.92 193.105 342.012 193.136 342.109 193.19 cv
342.109 193.19 li
.552941 .788235 .988235 rgb
f
341.836 193.098 mo
341.834 193.098 341.833 193.098 341.831 193.098 cv
341.819 193.097 341.806 193.096 341.794 193.096 cv
341.794 193.096 li
341.808 193.096 341.822 193.097 341.836 193.098 cv
.54902 .780392 .988235 rgb
f
368.371 199.548 mo
342.141 184.404 li
342.101 184.381 342.061 184.354 342.023 184.325 cv
341.684 184.064 341.425 183.575 341.427 183.166 cv
341.428 182.616 li
341.429 182.294 341.591 182.108 341.826 182.108 cv
341.922 182.108 342.032 182.139 342.147 182.206 cv
368.753 197.567 li
368.601 198.22 368.473 198.881 368.371 199.548 cv
f
328.261 222.093 mo
328.261 222.093 li
328.46 151.866 li
328.49 151.848 328.52 151.831 328.551 151.813 cv
328.554 160.454 328.54 169.086 328.527 177.716 cv
328.47 192.53 328.406 207.335 328.261 222.093 cv
338.696 159.235 mo
338.156 158.923 li
338.696 159.235 li
.54902 .784314 .988235 rgb
f
348.462 259.397 mo
334.978 251.612 li
332.767 250.336 330.977 247.235 330.984 244.695 cv
330.984 244.695 li
331.024 230.477 li
331.053 220.471 li
331.053 220.471 li
331.225 159.533 li
331.225 159.533 li
331.226 159.29 331.243 159.062 331.275 158.847 cv
331.362 158.274 331.556 157.805 331.836 157.452 cv
331.837 157.452 331.838 157.451 331.838 157.45 cv
331.841 157.447 331.843 157.444 331.845 157.441 cv
331.846 157.44 331.847 157.439 331.848 157.438 cv
331.85 157.435 331.852 157.432 331.855 157.43 cv
331.856 157.428 331.857 157.427 331.858 157.425 cv
331.86 157.423 331.862 157.42 331.864 157.418 cv
331.866 157.416 331.867 157.415 331.869 157.413 cv
331.87 157.411 331.872 157.409 331.874 157.407 cv
331.876 157.404 331.878 157.402 331.88 157.399 cv
331.881 157.398 331.882 157.396 331.884 157.395 cv
331.89 157.387 331.897 157.379 331.904 157.371 cv
331.905 157.371 331.905 157.37 331.905 157.37 cv
331.908 157.366 331.912 157.363 331.915 157.359 cv
331.915 157.358 331.916 157.358 331.917 157.357 cv
331.92 157.354 331.923 157.35 331.926 157.347 cv
331.926 157.347 331.927 157.346 331.927 157.345 cv
331.93 157.342 331.934 157.338 331.937 157.335 cv
331.937 157.335 331.937 157.334 331.938 157.334 cv
332.076 157.184 332.232 157.059 332.403 156.96 cv
332.406 156.959 332.409 156.957 332.412 156.955 cv
332.575 156.863 332.751 156.794 332.94 156.751 cv
332.94 156.751 332.941 156.751 332.941 156.751 cv
332.946 156.75 332.951 156.748 332.955 156.747 cv
332.956 156.747 332.957 156.747 332.958 156.747 cv
332.962 156.746 332.967 156.745 332.971 156.744 cv
332.972 156.744 332.974 156.743 332.975 156.743 cv
332.979 156.742 332.984 156.741 332.988 156.74 cv
332.989 156.74 332.99 156.74 332.991 156.74 cv
332.996 156.739 333.001 156.738 333.006 156.737 cv
333.009 156.736 333.011 156.736 333.013 156.735 cv
333.016 156.735 333.019 156.734 333.022 156.734 cv
333.025 156.733 333.027 156.733 333.03 156.732 cv
333.032 156.732 333.035 156.731 333.037 156.731 cv
333.04 156.73 333.043 156.73 333.046 156.729 cv
333.048 156.729 333.05 156.729 333.051 156.728 cv
333.055 156.728 333.059 156.727 333.062 156.726 cv
333.063 156.726 333.063 156.726 333.064 156.726 cv
333.187 156.705 333.314 156.695 333.446 156.694 cv
333.447 156.694 333.449 156.694 333.45 156.694 cv
333.45 156.694 li
333.451 156.694 333.453 156.694 333.454 156.694 cv
333.985 156.695 334.582 156.866 335.213 157.224 cv
335.214 157.225 335.216 157.226 335.217 157.227 cv
335.227 157.232 335.236 157.237 335.245 157.243 cv
335.245 157.243 li
338.156 158.923 li
338.696 159.235 li
378.882 182.436 li
376.702 183.999 373.825 186.573 371.548 190.51 cv
370.28 192.701 369.335 195.078 368.753 197.567 cv
342.147 182.206 li
342.032 182.139 341.922 182.108 341.826 182.108 cv
341.591 182.108 341.429 182.294 341.428 182.616 cv
341.427 183.166 li
341.425 183.575 341.684 184.064 342.023 184.325 cv
342.061 184.354 342.101 184.381 342.141 184.404 cv
368.371 199.548 li
368.214 200.579 368.119 201.626 368.087 202.683 cv
342.131 187.697 li
342.017 187.631 341.909 187.6 341.813 187.6 cv
341.577 187.6 341.413 187.789 341.413 188.112 cv
341.413 188.112 li
341.413 188.112 li
341.411 188.658 li
341.41 189.118 341.729 189.672 342.125 189.9 cv
368.076 204.883 li
368.076 208.183 li
342.116 193.194 li
342.113 193.193 342.111 193.192 342.109 193.19 cv
342.012 193.136 341.92 193.105 341.836 193.098 cv
341.822 193.097 341.808 193.096 341.794 193.096 cv
341.794 193.096 li
341.794 193.096 341.794 193.096 341.794 193.096 cv
341.559 193.096 341.398 193.282 341.397 193.604 cv
341.397 193.604 li
341.397 193.604 li
341.397 193.604 li
341.395 194.155 li
341.395 194.155 li
341.394 194.609 341.714 195.164 342.109 195.392 cv
368.076 210.384 li
368.076 215.682 li
368.076 226.657 365.278 237.451 359.948 247.045 cv
359.948 247.046 li
357.172 252.043 353.226 256.278 348.462 259.397 cv
.552941 .788235 .988235 rgb
f
368.076 210.384 mo
342.109 195.392 li
341.714 195.164 341.394 194.609 341.395 194.155 cv
341.395 194.155 li
341.397 193.604 li
341.397 193.604 li
341.397 193.604 li
341.397 193.604 li
341.398 193.282 341.559 193.096 341.794 193.096 cv
341.794 193.096 341.794 193.096 341.794 193.096 cv
341.806 193.096 341.819 193.097 341.831 193.098 cv
341.916 193.104 342.01 193.135 342.109 193.19 cv
342.111 193.192 342.113 193.193 342.116 193.194 cv
368.076 208.183 li
368.076 210.384 li
.54902 .780392 .988235 rgb
f
368.076 204.883 mo
342.125 189.9 li
341.729 189.672 341.41 189.118 341.411 188.658 cv
341.413 188.112 li
341.413 188.112 li
341.413 188.112 li
341.413 187.789 341.577 187.6 341.813 187.6 cv
341.909 187.6 342.017 187.631 342.131 187.697 cv
368.087 202.683 li
368.08 202.937 368.076 203.191 368.076 203.446 cv
368.076 204.883 li
f
386.843 177.71 mo
335.283 147.942 li
336.052 147.5 336.821 147.058 337.59 146.615 cv
389.149 176.384 li
388.423 176.801 387.634 177.255 386.843 177.71 cv
.537255 .780392 .988235 rgb
f
389.149 176.384 mo
337.59 146.615 li
337.791 146.5 337.993 146.384 338.194 146.268 cv
389.345 176.271 li
389.281 176.308 389.215 176.346 389.149 176.384 cv
.517647 .768627 .988235 rgb
f
322.623 176.912 mo
322.979 177.118 323.268 177.615 323.267 178.024 cv
323.266 178.433 322.975 178.596 322.619 178.39 cv
320.044 176.903 li
319.69 176.699 319.402 176.203 319.403 175.793 cv
319.404 175.384 319.695 175.222 320.048 175.426 cv
322.623 176.912 li
cp
.972549 .972549 .972549 rgb
f
330.661 184.33 mo
331.017 184.535 331.303 185.034 331.302 185.443 cv
331.3 185.849 331.013 186.016 330.657 185.811 cv
320.036 179.679 li
319.683 179.475 319.394 178.975 319.395 178.569 cv
319.396 178.16 319.687 177.994 320.04 178.198 cv
330.661 184.33 li
cp
f
327.137 176.742 mo
327.494 176.948 327.779 177.442 327.778 177.852 cv
327.777 178.261 327.489 178.425 327.133 178.22 cv
320.052 174.131 li
319.698 173.927 319.41 173.431 319.411 173.021 cv
319.412 172.612 319.703 172.45 320.056 172.653 cv
327.137 176.742 li
cp
f
322.639 171.364 mo
322.995 171.57 323.284 172.07 323.282 172.479 cv
323.281 172.886 322.991 173.051 322.634 172.846 cv
320.06 171.359 li
319.707 171.155 319.417 170.655 319.419 170.249 cv
319.42 169.84 319.71 169.674 320.064 169.878 cv
322.639 171.364 li
cp
f
322.599 185.232 mo
322.956 185.438 323.244 185.935 323.243 186.344 cv
323.242 186.753 322.951 186.916 322.595 186.71 cv
320.021 185.223 li
319.667 185.02 319.378 184.522 319.379 184.113 cv
319.381 183.704 319.671 183.542 320.024 183.746 cv
322.599 185.232 li
cp
f
329.03 191.722 mo
329.383 191.926 329.672 192.426 329.671 192.835 cv
329.669 193.241 329.379 193.407 329.025 193.203 cv
320.013 187.999 li
319.659 187.795 319.371 187.295 319.372 186.889 cv
319.373 186.479 319.664 186.314 320.017 186.518 cv
329.03 191.722 li
cp
f
325.825 184.318 mo
326.181 184.523 326.47 185.02 326.469 185.43 cv
326.467 185.839 326.177 186.001 325.821 185.795 cv
320.028 182.451 li
319.675 182.247 319.386 181.75 319.387 181.341 cv
319.389 180.932 319.679 180.77 320.032 180.974 cv
325.825 184.318 li
cp
f
325.48 192.452 mo
325.836 192.658 326.125 193.154 326.124 193.564 cv
326.123 193.973 325.832 194.136 325.476 193.93 cv
320.005 190.771 li
319.651 190.567 319.363 190.07 319.364 189.661 cv
319.365 189.251 319.655 189.089 320.009 189.293 cv
325.48 192.452 li
cp
f
322.568 196.324 mo
322.924 196.53 323.213 197.03 323.211 197.439 cv
323.21 197.846 322.92 198.011 322.563 197.805 cv
319.989 196.319 li
319.636 196.115 319.347 195.615 319.348 195.209 cv
319.349 194.799 319.64 194.634 319.993 194.838 cv
322.568 196.324 li
cp
f
324.507 194.667 mo
324.864 194.873 325.149 195.368 325.148 195.778 cv
325.147 196.187 324.859 196.351 324.503 196.145 cv
319.997 193.543 li
319.644 193.339 319.355 192.843 319.356 192.433 cv
319.357 192.024 319.647 191.862 320.001 192.066 cv
324.507 194.667 li
cp
f
357.992 208.443 mo
358.346 208.647 358.634 209.147 358.633 209.557 cv
358.632 209.962 358.341 210.128 357.988 209.924 cv
347.367 203.792 li
347.011 203.586 346.726 203.088 346.727 202.682 cv
346.728 202.273 347.015 202.105 347.372 202.312 cv
357.992 208.443 li
cp
f
357.984 211.219 mo
358.338 211.422 358.626 211.919 358.625 212.329 cv
358.624 212.738 358.333 212.9 357.979 212.696 cv
347.359 206.564 li
347.003 206.359 346.717 205.864 346.719 205.455 cv
346.72 205.045 347.007 204.881 347.364 205.087 cv
357.984 211.219 li
cp
f
357.969 216.763 mo
358.322 216.967 358.61 217.467 358.609 217.876 cv
358.608 218.282 358.317 218.448 357.964 218.244 cv
352.493 215.085 li
352.137 214.879 351.849 214.379 351.85 213.974 cv
351.851 213.564 352.142 213.399 352.497 213.604 cv
357.969 216.763 li
cp
f
350.244 212.303 mo
350.601 212.509 350.886 213.007 350.885 213.417 cv
350.884 213.823 350.596 213.99 350.24 213.784 cv
349.275 213.228 li
348.919 213.022 348.631 212.522 348.632 212.116 cv
348.633 211.707 348.923 211.541 349.28 211.747 cv
350.244 212.303 li
cp
f
357.977 213.991 mo
358.33 214.195 358.618 214.691 358.617 215.101 cv
358.616 215.51 358.325 215.672 357.972 215.468 cv
347.352 209.337 li
346.996 209.131 346.709 208.636 346.711 208.227 cv
346.712 207.817 347 207.653 347.356 207.859 cv
357.977 213.991 li
cp
f
358 205.671 mo
358.354 205.875 358.642 206.372 358.641 206.781 cv
358.64 207.19 358.349 207.353 357.996 207.148 cv
341.261 197.487 li
340.905 197.281 340.619 196.786 340.621 196.377 cv
340.622 195.967 340.909 195.804 341.266 196.009 cv
358 205.671 li
cp
f
358.016 200.123 mo
358.369 200.327 358.657 200.827 358.656 201.236 cv
358.655 201.643 358.365 201.808 358.012 201.604 cv
356.723 200.86 li
356.366 200.654 356.08 200.156 356.082 199.75 cv
356.083 199.34 356.37 199.173 356.727 199.379 cv
358.016 200.123 li
cp
f
346.431 193.435 mo
346.784 193.639 347.073 194.139 347.072 194.548 cv
347.07 194.954 346.78 195.12 346.427 194.916 cv
345.138 194.171 li
344.781 193.966 344.496 193.467 344.497 193.062 cv
344.498 192.652 344.786 192.485 345.142 192.69 cv
346.431 193.435 li
cp
f
350.613 195.849 mo
350.969 196.055 351.255 196.553 351.254 196.962 cv
351.253 197.368 350.965 197.536 350.609 197.33 cv
349.323 196.587 li
348.967 196.382 348.678 195.882 348.679 195.476 cv
348.68 195.066 348.971 194.901 349.327 195.106 cv
350.613 195.849 li
cp
f
358.008 202.898 mo
358.361 203.103 358.649 203.599 358.648 204.009 cv
358.647 204.418 358.357 204.58 358.004 204.376 cv
337.73 192.671 li
337.374 192.466 337.085 191.969 337.086 191.56 cv
337.087 191.15 337.378 190.988 337.734 191.193 cv
358.008 202.898 li
cp
f
358.023 197.351 mo
358.377 197.555 358.666 198.051 358.664 198.461 cv
358.663 198.87 358.373 199.033 358.02 198.829 cv
337.746 187.124 li
337.39 186.918 337.101 186.421 337.102 186.012 cv
337.103 185.603 337.394 185.44 337.75 185.646 cv
358.023 197.351 li
cp
f
358.031 194.579 mo
358.385 194.783 358.674 195.279 358.672 195.688 cv
358.671 196.098 358.381 196.26 358.027 196.056 cv
345.153 188.624 li
344.797 188.418 344.511 187.923 344.513 187.514 cv
344.514 187.104 344.801 186.94 345.158 187.146 cv
358.031 194.579 li
cp
f
358.039 191.803 mo
358.393 192.007 358.682 192.507 358.68 192.917 cv
358.679 193.322 358.389 193.488 358.035 193.284 cv
337.761 181.579 li
337.405 181.374 337.117 180.874 337.118 180.467 cv
337.119 180.058 337.409 179.893 337.766 180.098 cv
358.039 191.803 li
cp
f
354.474 198.078 mo
354.83 198.284 355.118 198.784 355.117 199.193 cv
355.116 199.599 354.825 199.765 354.47 199.559 cv
353.184 198.816 li
352.827 198.611 352.541 198.112 352.543 197.707 cv
352.544 197.297 352.831 197.13 353.188 197.335 cv
354.474 198.078 li
cp
f
313.833 256.729 mo
313.476 256.523 313.477 256.19 313.831 255.984 cv
314.182 255.781 314.757 255.779 315.113 255.984 cv
322.191 260.071 li
322.547 260.277 322.549 260.611 322.198 260.815 cv
321.844 261.021 321.267 261.021 320.911 260.815 cv
313.833 256.729 li
cp
f
320.736 257.935 mo
320.382 257.73 320.378 257.397 320.731 257.192 cv
321.085 256.986 321.66 256.988 322.014 257.192 cv
324.588 258.679 li
324.944 258.885 324.949 259.217 324.595 259.423 cv
324.241 259.628 323.667 259.627 323.311 259.421 cv
320.736 257.935 li
cp
f
315.939 260.722 mo
315.586 260.518 315.584 260.184 315.935 259.979 cv
316.289 259.773 316.866 259.773 317.22 259.978 cv
319.794 261.465 li
320.151 261.67 320.152 262.005 319.799 262.21 cv
319.448 262.414 318.87 262.414 318.514 262.209 cv
315.939 260.722 li
cp
f
322.312 253.291 mo
321.958 253.087 321.957 252.753 322.311 252.547 cv
322.662 252.343 323.239 252.343 323.592 252.547 cv
329.385 255.891 li
329.741 256.097 329.743 256.432 329.392 256.635 cv
329.038 256.841 328.46 256.841 328.104 256.635 cv
322.312 253.291 li
cp
f
315.09 251.898 mo
314.734 251.692 314.732 251.358 315.083 251.154 cv
315.437 250.948 316.014 250.948 316.37 251.154 cv
326.988 257.284 li
327.344 257.489 327.346 257.824 326.992 258.03 cv
326.641 258.233 326.064 258.233 325.708 258.028 cv
315.09 251.898 li
cp
f
323.891 248.646 mo
323.535 248.44 323.536 248.107 323.887 247.903 cv
324.241 247.698 324.815 247.696 325.171 247.901 cv
334.182 253.104 li
334.538 253.31 334.54 253.644 334.186 253.85 cv
333.834 254.054 333.257 254.054 332.901 253.848 cv
323.891 248.646 li
cp
f
337.52 248.181 mo
337.167 247.977 337.165 247.643 337.516 247.438 cv
337.87 247.233 338.447 247.233 338.8 247.437 cv
341.375 248.923 li
341.731 249.129 341.733 249.463 341.379 249.669 cv
341.028 249.873 340.451 249.873 340.095 249.667 cv
337.52 248.181 li
cp
f
333.194 248.46 mo
332.838 248.254 332.836 247.923 333.19 247.718 cv
333.544 247.512 334.115 247.512 334.472 247.718 cv
338.975 250.318 li
339.332 250.523 339.336 250.856 338.982 251.062 cv
338.628 251.268 338.054 251.266 337.698 251.061 cv
333.194 248.46 li
cp
f
329.827 249.296 mo
329.474 249.092 329.472 248.758 329.826 248.552 cv
330.177 248.348 330.754 248.348 331.107 248.552 cv
336.578 251.711 li
336.935 251.916 336.937 252.251 336.585 252.455 cv
336.231 252.66 335.654 252.66 335.298 252.455 cv
329.827 249.296 li
cp
f
327.929 253.754 mo
327.576 253.55 327.571 253.218 327.925 253.012 cv
328.279 252.806 328.854 252.808 329.207 253.012 cv
331.782 254.498 li
332.138 254.704 332.143 255.036 331.789 255.242 cv
331.435 255.448 330.86 255.446 330.504 255.24 cv
327.929 253.754 li
cp
f
302.122 227.744 mo
301.766 227.538 301.767 227.206 302.118 227.001 cv
302.472 226.796 303.046 226.794 303.402 227 cv
308.874 230.159 li
309.229 230.364 309.229 230.697 308.875 230.903 cv
308.524 231.106 307.949 231.108 307.593 230.903 cv
302.122 227.744 li
cp
f
309.846 232.204 mo
309.49 231.998 309.491 231.665 309.842 231.461 cv
310.196 231.255 310.771 231.254 311.127 231.459 cv
312.091 232.016 li
312.447 232.222 312.446 232.555 312.092 232.76 cv
311.742 232.964 311.167 232.966 310.811 232.76 cv
309.846 232.204 li
cp
f
299.725 229.137 mo
299.369 228.931 299.367 228.6 299.721 228.395 cv
300.075 228.188 300.646 228.188 301.003 228.395 cv
311.623 234.526 li
311.979 234.732 311.981 235.063 311.627 235.269 cv
311.273 235.474 310.702 235.474 310.346 235.269 cv
299.725 229.137 li
cp
f
297.326 230.531 mo
296.969 230.326 296.97 229.993 297.324 229.787 cv
297.675 229.583 298.25 229.582 298.606 229.787 cv
309.227 235.919 li
309.583 236.125 309.582 236.458 309.23 236.662 cv
308.876 236.867 308.302 236.869 307.946 236.663 cv
297.326 230.531 li
cp
f
287.735 236.104 mo
287.379 235.899 287.38 235.566 287.731 235.362 cv
288.085 235.157 288.659 235.155 289.016 235.361 cv
290.304 236.104 li
290.658 236.309 290.66 236.643 290.306 236.849 cv
289.955 237.053 289.377 237.053 289.024 236.849 cv
287.735 236.104 li
cp
f
294.929 231.924 mo
294.572 231.719 294.573 231.386 294.924 231.182 cv
295.278 230.976 295.853 230.975 296.209 231.18 cv
306.83 237.312 li
307.186 237.518 307.185 237.851 306.831 238.056 cv
306.48 238.26 305.905 238.262 305.549 238.056 cv
294.929 231.924 li
cp
f
291.274 238.148 mo
290.921 237.944 290.919 237.61 291.27 237.406 cv
291.624 237.2 292.201 237.2 292.555 237.404 cv
293.843 238.148 li
294.2 238.354 294.199 238.687 293.845 238.892 cv
293.494 239.096 292.919 239.098 292.563 238.892 cv
291.274 238.148 li
cp
f
295.138 240.379 mo
294.782 240.173 294.783 239.84 295.134 239.636 cv
295.488 239.431 296.062 239.429 296.418 239.635 cv
297.704 240.377 li
298.061 240.583 298.06 240.916 297.706 241.121 cv
297.354 241.325 296.78 241.327 296.424 241.121 cv
295.138 240.379 li
cp
f
292.532 233.317 mo
292.175 233.112 292.173 232.78 292.527 232.575 cv
292.881 232.369 293.453 232.369 293.809 232.575 cv
310.543 242.236 li
310.9 242.442 310.902 242.773 310.548 242.979 cv
310.194 243.185 309.622 243.185 309.266 242.979 cv
292.532 233.317 li
cp
f
299.32 242.793 mo
298.964 242.587 298.965 242.255 299.316 242.051 cv
299.669 241.845 300.244 241.843 300.601 242.049 cv
301.889 242.793 li
302.243 242.997 302.245 243.332 301.891 243.538 cv
301.54 243.741 300.962 243.741 300.609 243.538 cv
299.32 242.793 li
cp
f
290.132 234.712 mo
289.776 234.506 289.777 234.173 290.13 233.968 cv
290.481 233.764 291.056 233.762 291.413 233.968 cv
311.686 245.673 li
312.042 245.878 312.041 246.211 311.69 246.415 cv
311.336 246.621 310.762 246.623 310.406 246.417 cv
290.132 234.712 li
cp
f
285.338 237.498 mo
284.982 237.292 284.98 236.961 285.334 236.755 cv
285.688 236.549 286.259 236.549 286.616 236.755 cv
306.889 248.46 li
307.246 248.666 307.248 248.997 306.894 249.203 cv
306.54 249.408 305.968 249.408 305.612 249.203 cv
285.338 237.498 li
cp
f
280.542 240.285 mo
280.185 240.08 280.186 239.747 280.537 239.542 cv
280.891 239.337 281.466 239.335 281.822 239.541 cv
302.096 251.246 li
302.452 251.452 302.451 251.784 302.097 251.99 cv
301.746 252.194 301.171 252.195 300.815 251.99 cv
280.542 240.285 li
cp
f
282.938 238.892 mo
282.582 238.687 282.583 238.354 282.937 238.148 cv
283.288 237.944 283.863 237.942 284.219 238.148 cv
297.093 245.581 li
297.446 245.785 297.448 246.119 297.097 246.323 cv
296.743 246.529 296.166 246.529 295.812 246.325 cv
282.938 238.892 li
cp
f
488.517 361.388 mo
487.709 361.388 486.903 361.375 486.096 361.35 cv
486.104 361.346 486.112 361.343 486.12 361.34 cv
486.12 361.34 li
488.25 360.479 490.28 359.51 492.18 358.4 cv
495.659 356.371 498.438 354.092 500.497 351.663 cv
508.157 351.156 515.578 349.201 521.435 345.797 cv
528.273 341.823 531.696 336.623 531.711 331.416 cv
531.712 331.088 li
534.355 339.101 530.348 347.698 519.68 353.9 cv
511.088 358.892 499.81 361.388 488.517 361.388 cv
472.59 358.29 mo
472.69 357.98 472.78 357.67 472.86 357.35 cv
472.846 357.413 472.831 357.477 472.815 357.541 cv
472.748 357.791 472.673 358.04 472.591 358.288 cv
472.59 358.289 472.59 358.289 472.59 358.29 cv
496.406 351.796 mo
496.404 351.796 496.402 351.796 496.4 351.796 cv
496.402 351.796 496.404 351.796 496.406 351.796 cv
496.406 351.796 li
496.412 351.796 mo
496.472 351.796 496.534 351.796 496.594 351.796 cv
496.595 351.796 496.595 351.796 496.596 351.796 cv
496.535 351.796 496.473 351.796 496.412 351.796 cv
504.619 343.763 mo
504.619 343.763 li
510.64 342.941 516.358 341.193 521.092 338.519 cv
516.357 341.193 510.641 342.941 504.619 343.763 cv
504.99 340.097 mo
504.99 340.097 504.99 340.097 504.99 340.097 cv
505.385 340.028 505.778 339.953 506.167 339.874 cv
505.778 339.953 505.386 340.028 504.99 340.097 cv
521.095 338.517 mo
521.135 338.494 521.175 338.471 521.215 338.449 cv
521.175 338.471 521.135 338.494 521.095 338.517 cv
521.399 338.343 mo
521.418 338.332 521.438 338.321 521.457 338.309 cv
521.457 338.309 li
521.457 338.309 li
521.438 338.321 521.418 338.332 521.399 338.343 cv
506.837 338.302 mo
506.973 338.271 507.113 338.256 507.251 338.256 cv
507.113 338.256 506.973 338.271 506.837 338.302 cv
507.263 338.256 mo
507.261 338.256 507.258 338.255 507.256 338.255 cv
507.256 338.255 li
507.258 338.255 507.261 338.256 507.263 338.256 cv
521.612 338.219 mo
521.613 338.218 521.615 338.217 521.617 338.216 cv
521.615 338.217 521.613 338.218 521.612 338.219 cv
521.645 338.199 mo
521.65 338.197 521.653 338.195 521.657 338.193 cv
521.653 338.195 521.649 338.197 521.645 338.199 cv
521.679 338.179 mo
521.685 338.176 521.69 338.173 521.697 338.169 cv
521.691 338.173 521.685 338.176 521.679 338.179 cv
521.715 338.158 mo
521.722 338.154 521.729 338.15 521.737 338.145 cv
521.729 338.15 521.722 338.154 521.715 338.158 cv
521.754 338.135 mo
521.761 338.13 521.769 338.126 521.776 338.122 cv
521.769 338.126 521.761 338.13 521.754 338.135 cv
521.798 338.109 mo
521.803 338.105 521.81 338.102 521.815 338.098 cv
521.809 338.102 521.804 338.105 521.798 338.109 cv
521.835 338.087 mo
521.842 338.082 521.848 338.079 521.855 338.074 cv
521.849 338.078 521.841 338.083 521.835 338.087 cv
512.124 338.076 mo
511.826 338.076 511.531 338.008 511.311 337.882 cv
511.17 337.78 li
510.815 337.477 510.953 337.064 511.478 336.857 cv
512.938 336.29 514.312 335.636 515.564 334.907 cv
515.631 334.868 li
515.856 334.738 516.149 334.672 516.443 334.672 cv
516.736 334.672 517.029 334.737 517.253 334.867 cv
517.704 335.127 517.707 335.547 517.258 335.808 cv
517.2 335.842 li
515.834 336.636 514.345 337.349 512.761 337.963 cv
512.566 338.039 512.344 338.076 512.124 338.076 cv
521.872 338.064 mo
521.88 338.059 521.886 338.056 521.895 338.051 cv
521.887 338.055 521.879 338.06 521.872 338.064 cv
521.909 338.042 mo
521.918 338.036 521.925 338.032 521.934 338.027 cv
521.926 338.032 521.918 338.037 521.909 338.042 cv
521.948 338.018 mo
521.957 338.013 521.965 338.008 521.973 338.003 cv
521.965 338.008 521.957 338.013 521.948 338.018 cv
521.989 337.994 mo
521.996 337.99 522.005 337.984 522.012 337.98 cv
522.004 337.985 521.997 337.989 521.989 337.994 cv
522.031 337.968 mo
522.038 337.964 522.044 337.96 522.051 337.956 cv
522.044 337.96 522.038 337.964 522.031 337.968 cv
522.072 337.943 mo
522.078 337.94 522.084 337.936 522.09 337.932 cv
522.084 337.936 522.078 337.94 522.072 337.943 cv
522.112 337.918 mo
522.118 337.915 522.123 337.912 522.129 337.909 cv
522.123 337.912 522.118 337.915 522.112 337.918 cv
522.15 337.895 mo
522.156 337.892 522.162 337.888 522.167 337.885 cv
522.161 337.888 522.156 337.892 522.15 337.895 cv
522.187 337.872 mo
522.194 337.868 522.2 337.865 522.207 337.861 cv
522.2 337.865 522.194 337.868 522.187 337.872 cv
522.224 337.85 mo
522.232 337.845 522.238 337.841 522.245 337.837 cv
522.238 337.841 522.231 337.845 522.224 337.85 cv
522.265 337.824 mo
522.271 337.82 522.277 337.817 522.284 337.813 cv
522.278 337.817 522.271 337.821 522.265 337.824 cv
522.303 337.801 mo
522.309 337.797 522.316 337.793 522.322 337.789 cv
522.316 337.793 522.309 337.797 522.303 337.801 cv
522.341 337.777 mo
522.348 337.773 522.354 337.769 522.361 337.765 cv
522.354 337.769 522.348 337.773 522.341 337.777 cv
522.38 337.753 mo
522.386 337.749 522.392 337.745 522.399 337.741 cv
522.392 337.745 522.386 337.749 522.38 337.753 cv
522.421 337.727 mo
522.426 337.724 522.432 337.72 522.437 337.717 cv
522.432 337.72 522.426 337.724 522.421 337.727 cv
522.459 337.703 mo
522.464 337.7 522.47 337.696 522.475 337.693 cv
522.47 337.696 522.464 337.7 522.459 337.703 cv
522.497 337.679 mo
522.502 337.676 522.508 337.672 522.513 337.669 cv
522.508 337.672 522.502 337.676 522.497 337.679 cv
522.534 337.656 mo
522.54 337.652 522.546 337.648 522.551 337.645 cv
522.545 337.649 522.54 337.652 522.534 337.656 cv
522.572 337.632 mo
522.578 337.628 522.584 337.624 522.59 337.621 cv
522.584 337.624 522.578 337.628 522.572 337.632 cv
522.608 337.609 mo
522.615 337.604 522.62 337.601 522.628 337.596 cv
522.621 337.6 522.614 337.605 522.608 337.609 cv
522.647 337.584 mo
522.652 337.58 522.659 337.576 522.665 337.572 cv
522.659 337.576 522.653 337.58 522.647 337.584 cv
522.685 337.56 mo
522.69 337.556 522.697 337.552 522.702 337.548 cv
522.697 337.552 522.691 337.556 522.685 337.56 cv
522.724 337.534 mo
522.73 337.531 522.734 337.528 522.74 337.524 cv
522.735 337.527 522.729 337.531 522.724 337.534 cv
522.762 337.51 mo
522.767 337.507 522.772 337.503 522.777 337.5 cv
522.772 337.503 522.767 337.507 522.762 337.51 cv
522.799 337.486 mo
522.804 337.482 522.81 337.479 522.815 337.475 cv
522.81 337.479 522.804 337.482 522.799 337.486 cv
522.835 337.463 mo
522.841 337.459 522.846 337.455 522.853 337.451 cv
522.847 337.455 522.841 337.459 522.835 337.463 cv
522.875 337.437 mo
522.88 337.433 522.884 337.431 522.889 337.427 cv
522.884 337.43 522.88 337.433 522.875 337.437 cv
522.911 337.413 mo
522.916 337.409 522.922 337.406 522.927 337.402 cv
522.922 337.406 522.916 337.41 522.911 337.413 cv
522.948 337.389 mo
522.953 337.385 522.959 337.381 522.964 337.378 cv
522.959 337.382 522.953 337.385 522.948 337.389 cv
522.984 337.365 mo
522.99 337.361 522.995 337.358 523.001 337.354 cv
522.995 337.357 522.99 337.361 522.984 337.365 cv
523.023 337.339 mo
523.028 337.336 523.033 337.332 523.038 337.329 cv
523.033 337.332 523.028 337.336 523.023 337.339 cv
523.059 337.315 mo
523.064 337.312 523.07 337.308 523.075 337.305 cv
523.07 337.308 523.064 337.312 523.059 337.315 cv
523.096 337.291 mo
523.102 337.287 523.106 337.284 523.112 337.28 cv
523.107 337.284 523.101 337.287 523.096 337.291 cv
523.131 337.268 mo
523.137 337.264 523.143 337.259 523.149 337.255 cv
523.143 337.259 523.137 337.264 523.131 337.268 cv
523.169 337.242 mo
523.175 337.238 523.18 337.235 523.185 337.231 cv
523.18 337.235 523.175 337.238 523.169 337.242 cv
523.205 337.218 mo
523.211 337.214 523.217 337.21 523.222 337.206 cv
523.217 337.21 523.211 337.214 523.205 337.218 cv
523.243 337.193 mo
523.248 337.189 523.253 337.186 523.258 337.182 cv
523.253 337.186 523.248 337.189 523.243 337.193 cv
523.278 337.169 mo
523.284 337.165 523.29 337.161 523.295 337.157 cv
523.29 337.161 523.284 337.165 523.278 337.169 cv
523.316 337.143 mo
523.321 337.14 523.326 337.136 523.332 337.133 cv
523.326 337.136 523.321 337.14 523.316 337.143 cv
523.351 337.12 mo
523.356 337.116 523.363 337.111 523.368 337.108 cv
523.362 337.112 523.357 337.115 523.351 337.12 cv
523.388 337.094 mo
523.393 337.091 523.399 337.087 523.404 337.083 cv
523.398 337.087 523.393 337.09 523.388 337.094 cv
523.424 337.07 mo
523.429 337.066 523.435 337.062 523.44 337.059 cv
523.435 337.062 523.429 337.066 523.424 337.07 cv
523.462 337.044 mo
523.466 337.04 523.471 337.037 523.475 337.034 cv
523.471 337.037 523.466 337.04 523.462 337.044 cv
523.497 337.019 mo
523.502 337.016 523.506 337.013 523.512 337.009 cv
523.507 337.013 523.502 337.016 523.497 337.019 cv
523.533 336.994 mo
523.538 336.991 523.542 336.988 523.548 336.984 cv
523.543 336.988 523.538 336.991 523.533 336.994 cv
523.568 336.97 mo
523.573 336.967 523.578 336.963 523.583 336.96 cv
523.578 336.963 523.573 336.967 523.568 336.97 cv
523.606 336.944 mo
523.61 336.941 523.615 336.938 523.619 336.935 cv
523.614 336.938 523.61 336.941 523.606 336.944 cv
523.64 336.92 mo
523.645 336.917 523.65 336.914 523.655 336.91 cv
523.65 336.913 523.645 336.917 523.64 336.92 cv
523.676 336.895 mo
523.681 336.892 523.686 336.888 523.69 336.885 cv
523.685 336.888 523.681 336.892 523.676 336.895 cv
523.711 336.871 mo
523.715 336.867 523.721 336.863 523.726 336.86 cv
523.721 336.864 523.716 336.867 523.711 336.871 cv
523.748 336.845 mo
523.752 336.841 523.757 336.838 523.761 336.835 cv
523.757 336.838 523.752 336.841 523.748 336.845 cv
523.781 336.821 mo
523.787 336.817 523.791 336.814 523.797 336.81 cv
523.792 336.814 523.787 336.817 523.781 336.821 cv
523.817 336.796 mo
523.823 336.792 523.827 336.789 523.833 336.784 cv
523.827 336.788 523.822 336.792 523.817 336.796 cv
523.851 336.772 mo
523.856 336.768 523.862 336.763 523.867 336.76 cv
523.862 336.764 523.856 336.768 523.851 336.772 cv
523.888 336.745 mo
523.892 336.742 523.898 336.738 523.902 336.735 cv
523.898 336.738 523.893 336.742 523.888 336.745 cv
523.922 336.721 mo
523.927 336.717 523.933 336.713 523.938 336.71 cv
523.932 336.713 523.927 336.717 523.922 336.721 cv
523.957 336.696 mo
523.962 336.692 523.967 336.688 523.972 336.685 cv
523.967 336.688 523.962 336.692 523.957 336.696 cv
523.992 336.67 mo
523.997 336.667 524.002 336.663 524.007 336.66 cv
524.002 336.663 523.997 336.667 523.992 336.67 cv
524.028 336.645 mo
524.033 336.641 524.037 336.638 524.042 336.635 cv
524.037 336.638 524.033 336.641 524.028 336.645 cv
524.062 336.62 mo
524.067 336.616 524.071 336.613 524.076 336.609 cv
524.072 336.613 524.067 336.617 524.062 336.62 cv
524.097 336.594 mo
524.102 336.591 524.106 336.588 524.111 336.584 cv
524.106 336.588 524.102 336.591 524.097 336.594 cv
524.132 336.569 mo
524.136 336.566 524.141 336.563 524.145 336.559 cv
524.141 336.563 524.136 336.566 524.132 336.569 cv
524.167 336.543 mo
524.171 336.54 524.175 336.537 524.179 336.535 cv
524.175 336.538 524.171 336.54 524.167 336.543 cv
524.201 336.518 mo
524.205 336.515 524.21 336.512 524.214 336.509 cv
524.21 336.512 524.205 336.515 524.201 336.518 cv
524.236 336.493 mo
524.24 336.49 524.244 336.487 524.249 336.483 cv
524.244 336.487 524.24 336.49 524.236 336.493 cv
524.268 336.469 mo
524.273 336.465 524.279 336.461 524.284 336.457 cv
524.279 336.461 524.273 336.465 524.268 336.469 cv
524.303 336.443 mo
524.308 336.44 524.313 336.436 524.318 336.432 cv
524.313 336.436 524.308 336.44 524.303 336.443 cv
524.337 336.418 mo
524.342 336.414 524.346 336.411 524.352 336.407 cv
524.347 336.41 524.341 336.415 524.337 336.418 cv
524.371 336.393 mo
524.377 336.388 524.381 336.385 524.386 336.381 cv
524.381 336.385 524.376 336.389 524.371 336.393 cv
524.404 336.368 mo
524.409 336.364 524.415 336.36 524.42 336.356 cv
524.415 336.36 524.409 336.364 524.404 336.368 cv
524.439 336.341 mo
524.444 336.338 524.449 336.334 524.453 336.331 cv
524.449 336.334 524.444 336.338 524.439 336.341 cv
524.473 336.316 mo
524.477 336.313 524.483 336.309 524.487 336.305 cv
524.483 336.309 524.477 336.313 524.473 336.316 cv
524.506 336.291 mo
524.511 336.287 524.516 336.283 524.521 336.279 cv
524.516 336.283 524.511 336.287 524.506 336.291 cv
524.539 336.266 mo
524.544 336.262 524.55 336.258 524.555 336.254 cv
524.55 336.258 524.545 336.262 524.539 336.266 cv
524.573 336.24 mo
524.578 336.236 524.584 336.232 524.589 336.228 cv
524.584 336.232 524.578 336.236 524.573 336.24 cv
524.606 336.215 mo
524.611 336.211 524.617 336.206 524.622 336.203 cv
524.617 336.207 524.612 336.211 524.606 336.215 cv
524.64 336.189 mo
524.645 336.185 524.651 336.181 524.656 336.177 cv
524.651 336.181 524.645 336.185 524.64 336.189 cv
524.673 336.163 mo
524.678 336.16 524.683 336.156 524.688 336.152 cv
524.683 336.156 524.678 336.159 524.673 336.163 cv
524.708 336.137 mo
524.712 336.133 524.716 336.13 524.721 336.127 cv
524.716 336.13 524.712 336.133 524.708 336.137 cv
524.74 336.112 mo
524.745 336.108 524.75 336.104 524.755 336.101 cv
524.75 336.104 524.745 336.108 524.74 336.112 cv
524.773 336.086 mo
524.778 336.082 524.783 336.079 524.788 336.075 cv
524.783 336.079 524.778 336.082 524.773 336.086 cv
524.806 336.061 mo
524.811 336.057 524.816 336.053 524.82 336.049 cv
524.816 336.053 524.811 336.057 524.806 336.061 cv
524.84 336.034 mo
524.845 336.031 524.848 336.028 524.852 336.025 cv
524.848 336.028 524.844 336.031 524.84 336.034 cv
524.872 336.009 mo
524.877 336.005 524.882 336.001 524.886 335.998 cv
524.882 336.002 524.877 336.005 524.872 336.009 cv
524.905 335.983 mo
524.91 335.979 524.914 335.976 524.919 335.972 cv
524.914 335.976 524.91 335.979 524.905 335.983 cv
524.937 335.958 mo
524.943 335.954 524.947 335.95 524.952 335.946 cv
524.947 335.95 524.942 335.954 524.937 335.958 cv
524.971 335.931 mo
524.975 335.928 524.979 335.924 524.983 335.921 cv
524.979 335.925 524.975 335.928 524.971 335.931 cv
525.003 335.905 mo
525.007 335.902 525.012 335.899 525.016 335.895 cv
525.012 335.899 525.008 335.902 525.003 335.905 cv
525.036 335.879 mo
525.04 335.876 525.045 335.872 525.049 335.869 cv
525.045 335.872 525.04 335.876 525.036 335.879 cv
525.067 335.854 mo
525.072 335.851 525.077 335.846 525.082 335.843 cv
525.077 335.846 525.072 335.851 525.067 335.854 cv
525.1 335.828 mo
525.105 335.824 525.11 335.82 525.115 335.816 cv
525.11 335.82 525.105 335.824 525.1 335.828 cv
525.132 335.803 mo
525.137 335.798 525.142 335.794 525.148 335.79 cv
525.142 335.794 525.137 335.798 525.132 335.803 cv
525.164 335.777 mo
525.169 335.773 525.175 335.768 525.18 335.763 cv
525.175 335.768 525.169 335.773 525.164 335.777 cv
525.195 335.751 mo
525.201 335.747 525.206 335.743 525.211 335.739 cv
525.206 335.743 525.201 335.747 525.195 335.751 cv
525.229 335.724 mo
525.234 335.72 525.237 335.717 525.242 335.713 cv
525.238 335.717 525.233 335.72 525.229 335.724 cv
525.26 335.698 mo
525.265 335.695 525.27 335.691 525.275 335.687 cv
525.27 335.691 525.265 335.694 525.26 335.698 cv
525.292 335.672 mo
525.297 335.669 525.303 335.664 525.307 335.66 cv
525.302 335.664 525.297 335.668 525.292 335.672 cv
525.323 335.647 mo
525.328 335.643 525.333 335.639 525.338 335.635 cv
525.333 335.639 525.328 335.643 525.323 335.647 cv
525.356 335.62 mo
525.36 335.616 525.365 335.612 525.369 335.609 cv
525.365 335.613 525.361 335.616 525.356 335.62 cv
525.387 335.594 mo
525.392 335.591 525.396 335.587 525.401 335.583 cv
525.396 335.586 525.392 335.591 525.387 335.594 cv
525.419 335.568 mo
525.424 335.564 525.428 335.56 525.433 335.556 cv
525.428 335.56 525.424 335.564 525.419 335.568 cv
525.45 335.542 mo
525.454 335.538 525.459 335.535 525.464 335.531 cv
525.459 335.535 525.455 335.538 525.45 335.542 cv
525.483 335.515 mo
525.486 335.512 525.489 335.509 525.492 335.507 cv
525.489 335.509 525.486 335.512 525.483 335.515 cv
525.514 335.489 mo
525.517 335.486 525.521 335.483 525.524 335.48 cv
525.521 335.483 525.517 335.486 525.514 335.489 cv
525.545 335.462 mo
525.548 335.46 525.553 335.456 525.556 335.453 cv
525.552 335.456 525.549 335.459 525.545 335.462 cv
525.575 335.437 mo
525.58 335.433 525.583 335.431 525.587 335.427 cv
525.583 335.43 525.58 335.434 525.575 335.437 cv
525.608 335.41 mo
525.61 335.408 525.614 335.404 525.617 335.402 cv
525.614 335.405 525.611 335.407 525.608 335.41 cv
525.638 335.384 mo
525.641 335.381 525.646 335.378 525.649 335.375 cv
525.645 335.378 525.641 335.381 525.638 335.384 cv
525.669 335.358 mo
525.672 335.355 525.677 335.351 525.68 335.348 cv
525.676 335.351 525.673 335.354 525.669 335.358 cv
525.699 335.332 mo
525.703 335.328 525.707 335.325 525.712 335.321 cv
525.707 335.325 525.703 335.328 525.699 335.332 cv
525.731 335.305 mo
525.734 335.302 525.738 335.298 525.742 335.295 cv
525.738 335.298 525.734 335.302 525.731 335.305 cv
525.76 335.279 mo
525.765 335.276 525.769 335.272 525.773 335.268 cv
525.769 335.272 525.764 335.276 525.76 335.279 cv
525.792 335.252 mo
525.796 335.249 525.798 335.246 525.802 335.243 cv
525.799 335.246 525.795 335.249 525.792 335.252 cv
525.822 335.226 mo
525.826 335.223 525.829 335.22 525.832 335.217 cv
525.829 335.22 525.826 335.223 525.822 335.226 cv
525.853 335.199 mo
525.856 335.196 525.858 335.195 525.861 335.192 cv
525.858 335.194 525.856 335.197 525.853 335.199 cv
525.883 335.173 mo
525.886 335.17 525.889 335.167 525.892 335.165 cv
525.889 335.167 525.886 335.17 525.883 335.173 cv
525.914 335.146 mo
525.917 335.143 525.919 335.142 525.922 335.139 cv
525.919 335.141 525.916 335.144 525.914 335.146 cv
525.943 335.12 mo
525.946 335.118 525.949 335.115 525.952 335.113 cv
525.949 335.115 525.946 335.118 525.943 335.12 cv
526.004 335.066 mo
526.006 335.065 526.008 335.063 526.01 335.062 cv
526.008 335.063 526.006 335.065 526.004 335.066 cv
526.034 335.04 mo
526.036 335.038 526.037 335.038 526.038 335.036 cv
526.037 335.037 526.035 335.039 526.034 335.04 cv
526.063 335.014 mo
526.065 335.012 526.068 335.009 526.07 335.008 cv
526.068 335.01 526.066 335.012 526.063 335.014 cv
526.094 334.986 mo
526.094 334.986 li
526.094 334.986 li
526.123 334.961 mo
526.125 334.958 526.128 334.956 526.13 334.954 cv
526.128 334.956 526.125 334.958 526.123 334.961 cv
526.153 334.934 mo
526.155 334.932 526.157 334.93 526.159 334.928 cv
526.157 334.93 526.155 334.932 526.153 334.934 cv
526.182 334.908 mo
526.185 334.905 526.186 334.903 526.19 334.901 cv
526.187 334.903 526.184 334.905 526.182 334.908 cv
526.242 334.853 mo
526.242 334.853 526.242 334.853 526.243 334.852 cv
526.243 334.852 526.242 334.853 526.242 334.853 cv
526.3 334.8 mo
526.301 334.8 526.301 334.799 526.302 334.798 cv
526.301 334.799 526.301 334.8 526.3 334.8 cv
526.416 334.693 mo
526.416 334.693 li
526.416 334.693 li
519.928 333.524 mo
519.71 333.524 519.488 333.488 519.293 333.413 cv
519.114 333.33 li
518.733 333.109 518.661 332.758 518.967 332.492 cv
519.941 331.641 520.771 330.727 521.435 329.78 cv
521.618 329.522 522.046 329.367 522.499 329.367 cv
522.644 329.367 522.791 329.383 522.932 329.416 cv
523.078 329.451 523.204 329.5 523.309 329.561 cv
523.628 329.745 523.742 330.028 523.565 330.284 cv
522.841 331.313 521.94 332.302 520.885 333.228 cv
520.665 333.42 520.3 333.524 519.928 333.524 cv
527.809 333.276 mo
527.809 333.276 li
527.809 333.276 li
528.099 332.942 mo
528.1 332.942 528.1 332.942 528.1 332.941 cv
528.1 332.942 528.1 332.942 528.099 332.942 cv
530.01 330.22 mo
530.01 330.219 li
530.01 330.219 530.01 330.219 530.01 330.22 cv
530.026 330.19 mo
530.027 330.19 530.027 330.189 530.027 330.189 cv
530.027 330.189 530.027 330.19 530.026 330.19 cv
530.136 329.99 mo
530.146 329.972 530.155 329.955 530.164 329.937 cv
530.155 329.954 530.145 329.972 530.136 329.99 cv
530.193 329.883 mo
530.211 329.848 530.229 329.813 530.248 329.778 cv
530.23 329.813 530.211 329.848 530.193 329.883 cv
530.249 329.776 mo
530.269 329.737 530.289 329.698 530.308 329.659 cv
530.289 329.698 530.269 329.737 530.249 329.776 cv
530.309 329.658 mo
530.463 329.352 530.606 329.044 530.735 328.735 cv
530.735 328.735 li
530.606 329.044 530.463 329.352 530.309 329.658 cv
503.981 328.477 mo
503.983 327.851 503.749 327.138 503.28 326.364 cv
502.876 325.699 502.073 324.77 500.894 323.607 cv
500.894 323.607 li
500.894 323.607 li
502.073 324.77 502.876 325.699 503.28 326.364 cv
503.749 327.138 503.984 327.851 503.981 328.477 cv
524.071 327.63 mo
523.999 327.63 523.925 327.626 523.851 327.618 cv
523.618 327.591 523.413 327.527 523.258 327.438 cv
522.997 327.286 522.864 327.064 522.938 326.838 cv
523.268 325.834 523.433 324.805 523.424 323.781 cv
523.419 323.413 523.932 323.115 524.565 323.114 cv
524.883 323.114 525.172 323.188 525.381 323.309 cv
525.589 323.43 525.719 323.595 525.721 323.777 cv
525.733 324.888 525.556 326.004 525.193 327.094 cv
525.089 327.411 524.61 327.63 524.071 327.63 cv
510.486 326.054 mo
510.482 326.054 510.479 326.054 510.476 326.054 cv
510.479 326.054 510.482 326.054 510.486 326.054 cv
510.486 326.054 li
510.488 326.054 mo
510.541 326.054 510.592 326.051 510.643 326.046 cv
510.592 326.051 510.541 326.054 510.488 326.054 cv
509.878 325.935 mo
509.869 325.931 509.861 325.928 509.852 325.924 cv
509.861 325.928 509.869 325.931 509.878 325.935 cv
500.568 323.283 mo
500.568 323.283 li
500.45 323.168 li
499.643 322.405 499.031 321.799 498.588 321.319 cv
498.196 320.901 497.943 320.601 497.808 320.404 cv
497.586 320.067 497.475 319.766 497.474 319.506 cv
497.475 319.766 497.586 320.067 497.808 320.404 cv
497.943 320.601 498.196 320.901 498.588 321.319 cv
499.031 321.799 499.643 322.404 500.451 323.168 cv
500.568 323.283 li
500.568 323.283 li
513.203 322.592 mo
513.202 322.183 513.111 321.773 512.931 321.363 cv
512.517 320.43 511.663 319.472 510.39 318.507 cv
510.39 318.506 li
511.663 319.471 512.517 320.43 512.931 321.363 cv
513.111 321.773 513.202 322.183 513.203 322.592 cv
523.999 321.26 mo
523.692 321.26 523.402 321.187 523.189 321.065 cv
523.034 320.975 522.92 320.857 522.872 320.726 cv
522.743 320.359 522.591 319.995 522.417 319.634 cv
523.143 320.144 523.831 320.666 524.478 321.199 cv
524.399 321.22 524.314 321.237 524.225 321.247 cv
524.149 321.256 524.073 321.26 523.999 321.26 cv
498.19 318.627 mo
498.705 318.335 499.204 318.197 499.778 318.195 cv
499.204 318.197 498.705 318.335 498.19 318.627 cv
500.304 318.228 mo
500.288 318.226 500.271 318.224 500.255 318.222 cv
500.271 318.224 500.288 318.226 500.304 318.228 cv
499.795 318.195 mo
499.794 318.195 499.793 318.195 499.792 318.195 cv
499.792 318.195 li
499.793 318.195 499.794 318.195 499.795 318.195 cv
506.314 316.1 mo
504.201 315.116 502.123 314.526 500.132 314.349 cv
500.101 314.346 500.07 314.343 500.039 314.341 cv
500.07 314.343 500.101 314.346 500.132 314.349 cv
502.123 314.526 504.201 315.116 506.314 316.1 cv
508.004 315.117 li
508.004 315.117 li
508.004 315.117 li
506.314 316.1 li
492.873 315.781 mo
494.656 314.79 496.648 314.291 498.812 314.29 cv
496.648 314.291 494.656 314.79 492.873 315.781 cv
470.783 315.449 mo
470.783 315.449 li
471.13 315.093 471.498 314.745 471.888 314.405 cv
471.892 314.402 471.895 314.399 471.899 314.395 cv
471.895 314.399 471.892 314.402 471.888 314.405 cv
471.498 314.745 471.13 315.093 470.783 315.449 cv
510.038 315.105 mo
510.029 315.1 510.02 315.095 510.01 315.09 cv
510.02 315.095 510.029 315.1 510.038 315.105 cv
508.047 315.093 mo
508.054 315.089 508.062 315.085 508.069 315.081 cv
508.062 315.085 508.054 315.089 508.047 315.093 cv
508.073 315.079 mo
508.345 314.941 508.685 314.871 509.026 314.87 cv
508.685 314.871 508.345 314.941 508.073 315.079 cv
464.507 314.879 mo
464.052 314.849 463.606 314.83 463.15 314.82 cv
463.14 314.82 463.13 314.82 463.12 314.819 cv
463.831 314.532 464.553 314.259 465.286 314 cv
465.013 314.29 464.754 314.583 464.507 314.879 cv
509.037 314.87 mo
509.035 314.87 509.034 314.87 509.032 314.87 cv
509.032 314.87 li
509.034 314.87 509.035 314.87 509.037 314.87 cv
473.994 314.776 mo
473.993 314.602 473.876 314.431 473.655 314.304 cv
473.479 314.221 li
473.474 314.219 473.469 314.217 473.464 314.215 cv
473.469 314.217 473.474 314.219 473.479 314.221 cv
473.655 314.304 li
473.876 314.431 473.993 314.602 473.994 314.776 cv
471.928 314.372 mo
472.15 314.202 472.488 314.11 472.834 314.109 cv
472.488 314.11 472.15 314.202 471.928 314.372 cv
498.823 314.29 mo
498.823 314.29 498.822 314.29 498.821 314.29 cv
498.821 314.29 li
498.822 314.29 498.823 314.29 498.823 314.29 cv
473.454 314.211 mo
473.453 314.211 473.452 314.21 473.45 314.21 cv
473.452 314.21 473.453 314.211 473.454 314.211 cv
472.846 314.109 mo
472.845 314.109 472.844 314.109 472.843 314.109 cv
472.843 314.109 li
472.844 314.109 472.845 314.109 472.846 314.109 cv
476.336 312.963 mo
476.043 312.963 475.75 312.899 475.525 312.769 cv
475.074 312.509 475.074 312.088 475.52 311.829 cv
475.556 311.809 li
475.946 311.582 476.347 311.361 476.759 311.147 cv
478.359 310.898 479.981 310.702 481.613 310.56 cv
481.527 310.659 481.398 310.748 481.228 310.815 cv
479.784 311.378 478.421 312.028 477.183 312.748 cv
477.147 312.769 li
476.924 312.898 476.631 312.963 476.336 312.963 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
517.003 311.779 mo
516.555 311.521 515.827 311.519 515.378 311.779 cv
514.933 312.038 514.938 312.46 515.387 312.719 cv
515.439 312.749 li
516.68 313.465 517.804 314.252 518.781 315.087 cv
518.922 315.185 li
519.303 315.405 519.914 315.447 520.375 315.269 cv
520.899 315.062 521.034 314.646 520.68 314.344 cv
519.622 313.439 518.404 312.589 517.041 311.802 cv
517.003 311.779 li
475.705 335.857 mo
476.157 336.118 476.873 336.113 477.321 335.852 cv
477.767 335.593 477.756 335.168 477.308 334.909 cv
476.053 334.185 474.92 333.39 473.939 332.546 cv
473.799 332.448 li
473.418 332.228 472.809 332.186 472.346 332.365 cv
471.82 332.571 471.683 332.984 472.038 333.288 cv
473.101 334.202 474.33 335.064 475.69 335.849 cv
475.705 335.857 li
475.52 311.829 mo
475.074 312.088 475.074 312.509 475.525 312.769 cv
475.975 313.028 476.702 313.027 477.147 312.769 cv
477.183 312.748 li
478.421 312.028 479.784 311.378 481.228 310.815 cv
481.753 310.608 481.891 310.195 481.532 309.891 cv
481.389 309.789 li
481.01 309.57 480.402 309.529 479.939 309.709 cv
478.373 310.32 476.898 311.028 475.556 311.809 cv
475.52 311.829 li
512.761 337.963 mo
514.345 337.349 515.834 336.636 517.2 335.842 cv
517.258 335.808 li
517.707 335.547 517.704 335.127 517.253 334.867 cv
516.805 334.607 516.08 334.607 515.631 334.868 cv
515.564 334.907 li
514.312 335.636 512.938 336.29 511.478 336.857 cv
510.953 337.064 510.815 337.477 511.17 337.78 cv
511.311 337.882 li
511.692 338.101 512.301 338.143 512.761 337.963 cv
485.247 339.541 mo
485.829 339.681 486.504 339.521 486.744 339.18 cv
486.924 338.924 486.807 338.64 486.486 338.455 cv
486.384 338.396 486.259 338.346 486.117 338.312 cv
484.481 337.921 482.903 337.435 481.433 336.866 cv
480.903 336.661 480.193 336.744 479.841 337.047 cv
479.533 337.318 479.608 337.668 479.989 337.889 cv
480.162 337.972 li
481.761 338.588 483.474 339.117 485.247 339.541 cv
507.453 308.104 mo
506.867 307.966 506.196 308.128 505.958 308.467 cv
505.775 308.723 505.895 309.007 506.211 309.189 cv
506.316 309.25 506.442 309.3 506.589 309.333 cv
508.225 309.725 509.8 310.208 511.272 310.775 cv
511.803 310.98 512.516 310.895 512.864 310.591 cv
513.173 310.322 513.097 309.971 512.717 309.752 cv
512.541 309.669 li
510.941 309.053 509.228 308.526 507.453 308.104 cv
469.828 318.214 mo
470.417 318.354 471.088 318.191 471.325 317.853 cv
471.992 316.905 472.826 315.993 473.803 315.143 cv
474.109 314.875 474.037 314.524 473.655 314.304 cv
473.479 314.221 li
472.952 314.017 472.239 314.099 471.888 314.405 cv
470.829 315.329 469.923 316.317 469.201 317.346 cv
469.019 317.601 469.134 317.884 469.453 318.068 cv
469.559 318.129 469.685 318.178 469.828 318.214 cv
522.932 329.416 mo
522.345 329.279 521.676 329.439 521.435 329.78 cv
520.771 330.727 519.941 331.641 518.967 332.492 cv
518.661 332.758 518.733 333.109 519.114 333.33 cv
519.293 333.413 li
519.82 333.616 520.536 333.533 520.885 333.228 cv
521.94 332.302 522.841 331.313 523.565 330.284 cv
523.742 330.028 523.628 329.745 523.309 329.561 cv
523.204 329.5 523.078 329.451 522.932 329.416 cv
521.921 316.92 mo
521.335 317.061 521.062 317.45 521.307 317.79 cv
521.993 318.733 522.519 319.722 522.872 320.726 cv
522.92 320.857 523.034 320.975 523.189 321.065 cv
523.453 321.217 523.837 321.293 524.225 321.247 cv
524.847 321.174 525.251 320.823 525.124 320.463 cv
524.737 319.373 524.168 318.302 523.423 317.277 cv
523.362 317.194 523.277 317.122 523.174 317.062 cv
522.854 316.877 522.362 316.813 521.921 316.92 cv
470.802 330.711 mo
471.389 330.57 471.667 330.182 471.419 329.843 cv
470.739 328.9 470.213 327.911 469.859 326.904 cv
469.813 326.77 469.7 326.654 469.545 326.565 cv
469.282 326.413 468.897 326.337 468.507 326.383 cv
467.888 326.454 467.483 326.805 467.611 327.165 cv
467.994 328.257 468.565 329.328 469.304 330.352 cv
469.359 330.436 469.447 330.507 469.553 330.567 cv
469.873 330.752 470.361 330.818 470.802 330.711 cv
484.997 308.132 mo
484.414 308.273 484.141 308.663 484.383 309.002 cv
484.444 309.085 484.529 309.157 484.632 309.217 cv
484.952 309.401 485.446 309.467 485.887 309.36 cv
487.516 308.968 489.22 308.666 490.952 308.465 cv
491.571 308.394 491.976 308.044 491.848 307.683 cv
491.802 307.55 491.689 307.434 491.533 307.344 cv
491.27 307.191 490.886 307.116 490.494 307.161 cv
488.614 307.378 486.766 307.705 484.997 308.132 cv
507.699 339.535 mo
508.286 339.395 508.561 339.007 508.317 338.667 cv
508.257 338.583 508.171 338.51 508.066 338.45 cv
507.748 338.266 507.258 338.2 506.816 338.307 cv
505.19 338.697 503.482 338.997 501.748 339.197 cv
501.129 339.267 500.725 339.618 500.85 339.978 cv
500.896 340.112 501.009 340.227 501.164 340.317 cv
501.428 340.47 501.811 340.546 502.202 340.502 cv
504.083 340.285 505.934 339.96 507.699 339.535 cv
496.215 306.83 mo
495.58 306.831 495.068 307.13 495.073 307.497 cv
495.074 307.68 495.203 307.846 495.412 307.966 cv
495.62 308.086 495.906 308.16 496.228 308.16 cv
497.996 308.158 499.773 308.257 501.505 308.453 cv
502.128 308.522 502.731 308.287 502.852 307.929 cv
502.926 307.703 502.793 307.481 502.531 307.33 cv
502.375 307.239 502.172 307.174 501.939 307.148 cv
500.059 306.933 498.132 306.826 496.215 306.83 cv
496.482 340.827 mo
497.113 340.827 497.626 340.529 497.627 340.162 cv
497.624 339.978 497.495 339.813 497.287 339.692 cv
497.077 339.571 496.789 339.497 496.472 339.498 cv
494.704 339.496 492.929 339.396 491.192 339.2 cv
490.569 339.128 489.969 339.361 489.848 339.724 cv
489.771 339.948 489.903 340.17 490.167 340.322 cv
490.322 340.412 490.524 340.479 490.755 340.504 cv
492.636 340.719 494.562 340.829 496.482 340.827 cv
468.181 324.514 mo
468.811 324.514 469.324 324.216 469.319 323.849 cv
469.313 322.823 469.48 321.796 469.816 320.792 cv
469.891 320.566 469.759 320.345 469.497 320.193 cv
469.341 320.104 469.138 320.038 468.903 320.012 cv
468.283 319.94 467.68 320.176 467.559 320.534 cv
467.197 321.625 467.017 322.738 467.025 323.851 cv
467.026 324.033 467.156 324.199 467.364 324.319 cv
467.572 324.439 467.862 324.516 468.181 324.514 cv
524.565 323.114 mo
523.932 323.115 523.419 323.413 523.424 323.781 cv
523.433 324.805 523.268 325.834 522.938 326.838 cv
522.864 327.064 522.997 327.286 523.258 327.438 cv
523.413 327.527 523.618 327.591 523.851 327.618 cv
524.475 327.687 525.075 327.454 525.193 327.094 cv
525.556 326.004 525.733 324.888 525.721 323.777 cv
525.719 323.595 525.589 323.43 525.381 323.309 cv
525.172 323.188 524.883 323.114 524.565 323.114 cv
493.461 333.582 mo
496.429 333.861 499.076 333.342 501.33 332.031 cv
502.236 331.505 502.911 330.933 503.334 330.337 cv
503.761 329.746 503.974 329.12 503.981 328.477 cv
503.984 327.851 503.749 327.138 503.28 326.364 cv
502.876 325.699 502.073 324.77 500.894 323.607 cv
500.791 323.5 500.683 323.394 500.568 323.283 cv
500.451 323.168 li
499.643 322.404 499.031 321.799 498.588 321.319 cv
498.196 320.901 497.943 320.601 497.808 320.404 cv
497.543 320.001 497.435 319.649 497.486 319.357 cv
497.532 319.117 497.756 318.879 498.148 318.65 cv
498.836 318.251 499.49 318.126 500.326 318.23 cv
500.967 318.313 501.711 318.547 502.546 318.925 cv
503 319.129 503.472 319.371 503.955 319.65 cv
504.565 320.003 505.069 320.354 505.457 320.693 cv
505.871 321.051 506.157 321.401 506.308 321.738 cv
506.574 322.323 506.44 322.843 505.898 323.324 cv
505.806 323.405 li
505.544 323.643 505.602 323.959 505.947 324.158 cv
509.852 325.924 li
510.081 326.029 510.38 326.073 510.643 326.046 cv
510.935 326.023 511.197 325.928 511.354 325.788 cv
511.462 325.695 li
513.079 324.277 513.573 322.821 512.931 321.363 cv
512.517 320.43 511.663 319.471 510.39 318.506 cv
512.126 317.497 li
512.69 317.169 512.687 316.634 512.122 316.308 cv
510.058 315.116 li
509.489 314.787 508.568 314.789 508.004 315.117 cv
506.314 316.1 li
504.201 315.116 502.123 314.526 500.132 314.349 cv
497.369 314.104 494.861 314.623 492.674 315.894 cv
491.475 316.592 490.728 317.365 490.454 318.189 cv
490.19 318.978 490.259 319.825 490.655 320.705 cv
491.022 321.504 491.929 322.628 493.357 324.043 cv
495.417 326.08 li
495.508 326.166 495.588 326.253 495.667 326.335 cv
496.337 327.046 496.7 327.637 496.74 328.096 cv
496.778 328.522 496.515 328.894 495.935 329.23 cv
495.137 329.693 494.319 329.856 493.357 329.743 cv
492.69 329.665 491.927 329.439 491.08 329.079 cv
490.506 328.832 489.89 328.521 489.251 328.151 cv
488.77 327.874 488.365 327.617 488.017 327.361 cv
487.224 326.793 486.697 326.253 486.452 325.753 cv
486.133 325.104 486.302 324.444 486.95 323.793 cv
487.031 323.712 li
487.267 323.476 487.197 323.177 486.866 322.985 cv
486.711 322.913 li
482.736 321.364 li
482.499 321.27 482.216 321.238 481.936 321.273 cv
481.661 321.307 481.422 321.404 481.27 321.543 cv
481.178 321.631 li
479.616 323.096 479.151 324.599 479.794 326.103 cv
480.266 327.205 481.385 328.372 483.128 329.573 cv
481.371 330.595 li
480.807 330.923 480.81 331.454 481.378 331.783 cv
483.442 332.975 li
484.008 333.301 484.929 333.303 485.493 332.975 cv
487.314 331.916 li
489.374 332.829 491.44 333.391 493.461 333.582 cv
521.294 309.347 mo
535.147 317.345 535.221 330.311 521.457 338.309 cv
507.694 346.309 485.306 346.31 471.452 338.312 cv
457.6 330.313 457.526 317.344 471.289 309.346 cv
485.053 301.347 507.441 301.349 521.294 309.347 cv
.992157 .945098 .501961 rgb
f
512.122 316.308 mo
512.687 316.634 512.69 317.169 512.126 317.497 cv
510.39 318.507 li
511.663 319.472 512.517 320.43 512.931 321.363 cv
513.573 322.821 513.079 324.277 511.462 325.695 cv
511.354 325.789 li
511.197 325.928 510.935 326.023 510.643 326.046 cv
510.38 326.073 510.081 326.029 509.852 325.924 cv
505.947 324.158 li
505.602 323.959 505.544 323.643 505.806 323.405 cv
505.898 323.324 li
506.44 322.843 506.574 322.323 506.308 321.738 cv
506.157 321.401 505.871 321.051 505.457 320.693 cv
505.069 320.354 504.565 320.003 503.955 319.65 cv
503.472 319.371 503 319.129 502.546 318.925 cv
501.711 318.547 500.967 318.313 500.326 318.23 cv
499.49 318.126 498.836 318.251 498.148 318.65 cv
497.756 318.879 497.532 319.117 497.486 319.357 cv
497.435 319.649 497.543 320.001 497.808 320.404 cv
497.943 320.601 498.196 320.901 498.588 321.319 cv
499.031 321.799 499.643 322.405 500.45 323.168 cv
500.568 323.283 li
500.683 323.394 500.792 323.5 500.894 323.607 cv
502.073 324.77 502.876 325.699 503.28 326.364 cv
503.749 327.138 503.983 327.851 503.981 328.477 cv
503.974 329.12 503.761 329.746 503.334 330.337 cv
502.911 330.933 502.236 331.505 501.33 332.031 cv
499.076 333.342 496.429 333.861 493.461 333.582 cv
491.44 333.391 489.374 332.829 487.314 331.916 cv
485.493 332.975 li
484.929 333.303 484.008 333.301 483.442 332.975 cv
481.378 331.783 li
480.81 331.454 480.807 330.923 481.371 330.595 cv
483.128 329.573 li
481.385 328.372 480.265 327.205 479.794 326.103 cv
479.151 324.599 479.616 323.096 481.178 321.631 cv
481.27 321.543 li
481.422 321.404 481.661 321.307 481.936 321.273 cv
482.216 321.238 482.499 321.27 482.736 321.364 cv
486.711 322.913 li
486.866 322.985 li
487.197 323.177 487.267 323.476 487.031 323.712 cv
486.95 323.793 li
486.302 324.444 486.133 325.104 486.452 325.753 cv
486.698 326.253 487.224 326.793 488.017 327.361 cv
488.365 327.617 488.77 327.874 489.251 328.151 cv
489.89 328.521 490.506 328.832 491.08 329.079 cv
491.927 329.439 492.69 329.665 493.357 329.743 cv
494.319 329.856 495.137 329.693 495.935 329.23 cv
496.515 328.894 496.778 328.522 496.74 328.096 cv
496.7 327.637 496.337 327.046 495.667 326.335 cv
495.588 326.253 495.508 326.166 495.417 326.08 cv
493.357 324.044 li
491.929 322.628 491.022 321.504 490.655 320.705 cv
490.259 319.825 490.19 318.978 490.454 318.189 cv
490.728 317.365 491.474 316.592 492.674 315.894 cv
494.861 314.623 497.369 314.104 500.132 314.349 cv
502.123 314.526 504.201 315.116 506.314 316.1 cv
508.004 315.117 li
508.568 314.789 509.489 314.787 510.058 315.116 cv
512.122 316.308 li
.980392 .760784 .25098 rgb
f
484.383 309.002 mo
484.141 308.663 484.414 308.273 484.997 308.132 cv
486.766 307.705 488.614 307.378 490.494 307.162 cv
490.886 307.116 491.271 307.191 491.533 307.344 cv
491.688 307.434 491.802 307.55 491.848 307.683 cv
491.976 308.044 491.571 308.394 490.952 308.465 cv
489.22 308.666 487.516 308.968 485.887 309.36 cv
485.446 309.467 484.952 309.401 484.632 309.217 cv
484.529 309.157 484.444 309.085 484.383 309.002 cv
cp
f
506.211 309.189 mo
505.895 309.007 505.775 308.723 505.958 308.467 cv
506.196 308.128 506.867 307.966 507.453 308.104 cv
509.229 308.526 510.941 309.053 512.541 309.669 cv
512.717 309.752 li
513.097 309.971 513.173 310.322 512.864 310.591 cv
512.516 310.896 511.803 310.98 511.272 310.775 cv
509.8 310.208 508.225 309.725 506.589 309.333 cv
506.442 309.3 506.316 309.25 506.211 309.189 cv
cp
f
477.147 312.769 mo
476.702 313.027 475.975 313.028 475.525 312.77 cv
475.074 312.509 475.074 312.088 475.521 311.829 cv
475.556 311.809 li
476.898 311.028 478.373 310.32 479.938 309.709 cv
480.402 309.529 481.01 309.57 481.389 309.789 cv
481.532 309.891 li
481.891 310.195 481.753 310.608 481.228 310.814 cv
479.784 311.378 478.421 312.028 477.183 312.748 cv
477.147 312.769 li
cp
f
515.387 312.719 mo
514.938 312.46 514.933 312.038 515.378 311.779 cv
515.827 311.519 516.555 311.521 517.003 311.779 cv
517.038 311.8 li
518.404 312.589 519.622 313.439 520.68 314.344 cv
521.034 314.646 520.899 315.062 520.375 315.269 cv
519.914 315.447 519.303 315.405 518.922 315.186 cv
518.781 315.087 li
517.804 314.252 516.68 313.465 515.439 312.749 cv
515.387 312.719 li
cp
f
473.803 315.143 mo
472.826 315.993 471.992 316.905 471.325 317.853 cv
471.088 318.191 470.417 318.354 469.828 318.214 cv
469.685 318.178 469.559 318.129 469.453 318.068 cv
469.134 317.884 469.019 317.601 469.201 317.346 cv
469.923 316.317 470.829 315.329 471.888 314.405 cv
472.239 314.099 472.952 314.017 473.479 314.221 cv
473.655 314.304 li
474.037 314.524 474.109 314.875 473.803 315.143 cv
f
521.307 317.79 mo
521.063 317.45 521.335 317.061 521.921 316.92 cv
522.362 316.813 522.854 316.877 523.174 317.062 cv
523.277 317.122 523.362 317.194 523.423 317.277 cv
524.168 318.302 524.737 319.373 525.124 320.463 cv
525.251 320.823 524.847 321.174 524.226 321.247 cv
523.837 321.293 523.453 321.217 523.189 321.064 cv
523.034 320.975 522.92 320.857 522.872 320.726 cv
522.519 319.722 521.993 318.733 521.307 317.79 cv
cp
f
522.938 326.838 mo
523.269 325.834 523.433 324.805 523.424 323.781 cv
523.419 323.413 523.932 323.115 524.565 323.114 cv
524.883 323.114 525.172 323.188 525.381 323.31 cv
525.589 323.43 525.719 323.595 525.721 323.777 cv
525.733 324.888 525.556 326.004 525.193 327.094 cv
525.075 327.454 524.475 327.688 523.852 327.618 cv
523.618 327.591 523.413 327.527 523.258 327.438 cv
522.997 327.286 522.864 327.064 522.938 326.838 cv
cp
f
471.419 329.843 mo
471.667 330.182 471.389 330.57 470.802 330.711 cv
470.361 330.818 469.873 330.752 469.553 330.567 cv
469.447 330.507 469.359 330.436 469.304 330.352 cv
468.565 329.328 467.994 328.257 467.611 327.165 cv
467.483 326.805 467.888 326.454 468.507 326.383 cv
468.897 326.337 469.282 326.413 469.545 326.565 cv
469.7 326.654 469.813 326.77 469.859 326.904 cv
470.213 327.911 470.739 328.9 471.419 329.843 cv
f
518.967 332.492 mo
519.94 331.641 520.771 330.727 521.436 329.78 cv
521.676 329.439 522.345 329.279 522.933 329.416 cv
523.078 329.451 523.204 329.5 523.309 329.561 cv
523.628 329.745 523.742 330.028 523.565 330.284 cv
522.841 331.313 521.94 332.302 520.885 333.229 cv
520.536 333.533 519.82 333.616 519.293 333.413 cv
519.114 333.33 li
518.733 333.109 518.661 332.758 518.967 332.492 cv
cp
f
517.253 334.867 mo
517.704 335.127 517.707 335.547 517.258 335.808 cv
517.2 335.842 li
515.834 336.636 514.345 337.349 512.761 337.963 cv
512.301 338.143 511.692 338.102 511.312 337.882 cv
511.17 337.78 li
510.815 337.477 510.953 337.064 511.478 336.857 cv
512.938 336.29 514.312 335.636 515.564 334.907 cv
515.631 334.868 li
516.08 334.607 516.805 334.607 517.253 334.867 cv
cp
f
486.486 338.455 mo
486.807 338.64 486.924 338.924 486.744 339.18 cv
486.504 339.521 485.829 339.681 485.247 339.541 cv
483.474 339.117 481.761 338.588 480.162 337.972 cv
479.989 337.889 li
479.608 337.668 479.533 337.318 479.841 337.047 cv
480.193 336.744 480.903 336.661 481.433 336.866 cv
482.903 337.435 484.481 337.921 486.117 338.312 cv
486.259 338.346 486.384 338.396 486.486 338.455 cv
f
508.317 338.667 mo
508.561 339.007 508.286 339.395 507.7 339.535 cv
505.934 339.96 504.083 340.285 502.202 340.502 cv
501.811 340.546 501.428 340.47 501.164 340.317 cv
501.009 340.227 500.896 340.112 500.85 339.978 cv
500.725 339.618 501.129 339.267 501.748 339.197 cv
503.482 338.997 505.19 338.697 506.816 338.307 cv
507.258 338.2 507.748 338.266 508.066 338.45 cv
508.171 338.51 508.257 338.583 508.317 338.667 cv
f
497.287 339.692 mo
497.495 339.813 497.624 339.978 497.627 340.162 cv
497.626 340.529 497.113 340.827 496.482 340.827 cv
494.562 340.829 492.636 340.719 490.755 340.504 cv
490.524 340.479 490.322 340.412 490.167 340.322 cv
489.903 340.17 489.771 339.948 489.848 339.724 cv
489.969 339.361 490.569 339.128 491.192 339.2 cv
492.929 339.396 494.704 339.496 496.472 339.498 cv
496.789 339.497 497.077 339.571 497.287 339.692 cv
f
495.412 307.966 mo
495.203 307.846 495.074 307.68 495.073 307.497 cv
495.068 307.13 495.581 306.831 496.215 306.83 cv
498.132 306.826 500.059 306.933 501.938 307.148 cv
502.172 307.174 502.375 307.239 502.531 307.33 cv
502.793 307.481 502.926 307.703 502.852 307.929 cv
502.731 308.287 502.128 308.522 501.505 308.453 cv
499.773 308.257 497.996 308.158 496.229 308.16 cv
495.906 308.16 495.62 308.086 495.412 307.966 cv
cp
f
469.816 320.792 mo
469.48 321.796 469.313 322.823 469.319 323.849 cv
469.324 324.216 468.811 324.514 468.181 324.514 cv
467.862 324.516 467.572 324.439 467.364 324.319 cv
467.156 324.199 467.026 324.033 467.025 323.851 cv
467.017 322.738 467.197 321.625 467.559 320.534 cv
467.68 320.176 468.283 319.94 468.903 320.012 cv
469.138 320.038 469.341 320.104 469.497 320.194 cv
469.759 320.345 469.891 320.566 469.816 320.792 cv
f
477.308 334.909 mo
477.756 335.168 477.767 335.593 477.321 335.852 cv
476.873 336.113 476.157 336.118 475.705 335.857 cv
475.69 335.849 li
474.33 335.064 473.101 334.202 472.038 333.288 cv
471.683 332.984 471.82 332.571 472.346 332.365 cv
472.808 332.186 473.418 332.228 473.799 332.448 cv
473.939 332.546 li
474.92 333.39 476.053 334.185 477.308 334.909 cv
f
531.732 323.93 mo
531.711 331.416 li
531.696 336.623 528.273 341.823 521.435 345.797 cv
507.673 353.795 485.284 353.797 471.431 345.798 cv
464.46 341.773 460.978 336.49 460.993 331.214 cv
461.015 323.728 li
461 329.003 464.481 334.287 471.452 338.312 cv
485.306 346.31 507.694 346.309 521.457 338.309 cv
528.295 334.336 531.717 329.137 531.732 323.93 cv
f
gsave
430.354 391.887 mo
440.634 385.952 li
442.686 384.767 444.157 383.371 445.045 381.883 cv
451.607 381.109 457.859 379.247 462.936 376.297 cv
468.441 373.097 471.733 369.103 472.814 364.95 cv
473.183 364.9 473.541 364.84 473.909 364.77 cv
474.688 371.819 470.447 379.013 461.18 384.4 cv
452.673 389.343 441.534 391.838 430.354 391.887 cv
428.13 391.865 mo
417.472 391.602 406.937 389.114 398.769 384.4 cv
381.485 374.417 381.398 358.23 398.57 348.26 cv
399.873 347.502 401.239 346.802 402.657 346.159 cv
402.739 347.166 403.066 348.166 403.637 349.129 cv
402.317 352.09 402.162 355.193 403.17 358.19 cv
403.279 358.506 403.398 358.823 403.526 359.14 cv
402.847 357.527 402.51 355.877 402.515 354.228 cv
402.493 361.714 li
402.479 366.99 405.96 372.273 412.931 376.298 cv
419.857 380.297 428.915 382.297 437.964 382.296 cv
439.72 382.296 441.476 382.221 443.215 382.07 cv
442.389 383.245 441.153 384.346 439.506 385.297 cv
428.13 391.865 li
404.523 347.445 mo
404.314 346.795 404.22 346.134 404.239 345.475 cv
405.074 345.13 405.926 344.804 406.791 344.498 cv
406.788 344.502 406.784 344.506 406.78 344.51 cv
405.888 345.458 405.136 346.44 404.523 347.445 cv
clp
381.398 344.498 mo
474.688 344.498 li
474.688 391.887 li
381.398 391.887 li
cp
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
430.017 391.888 mo
429.388 391.888 428.758 391.88 428.13 391.865 cv
439.506 385.297 li
441.153 384.346 442.389 383.245 443.215 382.07 cv
443.828 382.017 444.437 381.955 445.045 381.883 cv
444.157 383.371 442.686 384.767 440.634 385.952 cv
430.354 391.887 li
430.242 391.888 430.129 391.888 430.017 391.888 cv
403.637 349.129 mo
403.066 348.166 402.739 347.166 402.657 346.159 cv
403.178 345.923 403.705 345.695 404.239 345.475 cv
404.22 346.134 404.314 346.795 404.523 347.445 cv
404.185 348 403.89 348.562 403.637 349.129 cv
.364706 .482353 .835294 rgb
f
434.756 374.724 mo
426.811 374.305 419.053 372.334 412.952 368.812 cv
412.605 368.611 412.266 368.407 411.936 368.201 cv
412.265 368.407 412.603 368.61 412.95 368.81 cv
419.054 372.333 426.81 374.305 434.756 374.724 cv
437.98 371.33 mo
436.06 371.33 434.14 371.22 432.26 371 cv
432.02 370.98 431.82 370.91 431.67 370.82 cv
431.4 370.67 431.27 370.45 431.35 370.22 cv
431.455 369.904 431.932 369.688 432.467 369.688 cv
432.541 369.688 432.615 369.692 432.69 369.7 cv
434.093 369.862 435.515 369.958 436.941 369.989 cv
438.849 371.098 li
438.638 371.24 438.326 371.33 437.98 371.33 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
438.849 371.098 mo
436.941 369.989 li
437.284 369.996 437.627 370 437.97 370 cv
438.29 370 438.58 370.07 438.79 370.19 cv
438.99 370.31 439.12 370.479 439.13 370.66 cv
439.13 370.827 439.024 370.98 438.849 371.098 cv
.364706 .482353 .835294 rgb
f
443.467 371.015 mo
443.161 371.015 442.876 370.94 442.66 370.82 cv
442.51 370.729 442.4 370.61 442.35 370.479 cv
442.22 370.12 442.63 369.77 443.25 369.7 cv
444.98 369.5 446.69 369.2 448.32 368.81 cv
448.464 368.774 448.612 368.757 448.759 368.757 cv
449.061 368.757 449.354 368.828 449.57 368.95 cv
449.67 369.01 449.76 369.08 449.82 369.17 cv
450.06 369.51 449.79 369.89 449.2 370.04 cv
447.43 370.46 445.58 370.79 443.7 371 cv
443.622 371.01 443.544 371.015 443.467 371.015 cv
427.185 370.09 mo
427.04 370.09 426.892 370.074 426.75 370.04 cv
424.97 369.62 423.26 369.09 421.66 368.47 cv
421.49 368.39 li
421.11 368.17 421.03 367.82 421.34 367.55 cv
421.558 367.357 421.917 367.253 422.283 367.253 cv
422.505 367.253 422.73 367.291 422.93 367.37 cv
424.4 367.93 425.981 368.42 427.62 368.81 cv
427.76 368.85 427.88 368.9 427.99 368.95 cv
428.31 369.14 428.42 369.42 428.24 369.68 cv
428.059 369.936 427.632 370.09 427.185 370.09 cv
417.998 366.55 mo
417.714 366.55 417.431 366.488 417.21 366.36 cv
417.19 366.35 li
415.83 365.56 414.6 364.7 413.54 363.79 cv
413.18 363.48 413.32 363.07 413.85 362.87 cv
414.046 362.794 414.269 362.757 414.49 362.757 cv
414.788 362.757 415.082 362.824 415.3 362.95 cv
415.44 363.05 li
416.42 363.89 417.55 364.68 418.81 365.41 cv
419.26 365.67 419.269 366.09 418.82 366.35 cv
418.591 366.483 418.294 366.55 417.998 366.55 cv
458.723 366.328 mo
458.758 366.308 li
458.876 366.239 458.963 366.16 459.018 366.075 cv
458.964 366.159 458.878 366.24 458.76 366.309 cv
458.723 366.328 li
466.675 366.268 mo
466.943 366.048 467.199 365.829 467.45 365.61 cv
467.45 365.61 li
467.454 365.61 li
467.203 365.832 466.943 366.051 466.675 366.268 cv
455.631 366.182 mo
455.915 366.039 456.195 365.891 456.47 365.74 cv
456.47 365.74 li
456.471 365.74 456.472 365.74 456.473 365.741 cv
456.198 365.891 455.917 366.039 455.631 366.182 cv
407.81 365.062 mo
407.558 364.827 407.314 364.589 407.08 364.348 cv
407.318 364.579 407.558 364.817 407.81 365.062 cv
407.01 364.276 mo
406.502 363.749 406.036 363.212 405.614 362.667 cv
406.043 363.21 406.511 363.743 407.01 364.27 cv
407.01 364.276 li
439.334 363.868 mo
440.056 363.716 440.751 363.502 441.416 363.229 cv
441.418 363.229 441.419 363.229 441.42 363.229 cv
440.754 363.504 440.058 363.716 439.334 363.868 cv
432.586 363.692 mo
431.333 363.402 430.069 362.976 428.81 362.42 cv
428.571 362.558 li
428.814 362.416 li
430.073 362.974 431.334 363.401 432.586 363.692 cv
405.46 362.465 mo
404.65 361.388 404.007 360.279 403.531 359.151 cv
403.54 359.16 li
404.01 360.28 404.66 361.39 405.46 362.46 cv
405.46 362.465 li
470.75 361.941 mo
470.836 361.814 470.92 361.687 471.002 361.56 cv
470.921 361.688 470.837 361.815 470.75 361.941 cv
423.384 360.796 mo
423.381 360.794 li
424.626 360.072 li
424.627 360.073 424.627 360.073 424.628 360.073 cv
423.384 360.796 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
422.471 361.541 mo
422.52 361.376 422.653 361.218 422.87 361.09 cv
423.381 360.794 li
423.384 360.796 li
422.871 361.095 li
422.654 361.221 422.521 361.377 422.471 361.541 cv
.364706 .482353 .835294 rgb
f
411.861 361.263 mo
411.558 361.263 411.266 361.191 411.05 361.07 cv
410.95 361.01 410.86 360.94 410.8 360.85 cv
410.059 359.83 409.49 358.76 409.11 357.66 cv
408.98 357.3 409.39 356.95 410.01 356.88 cv
410.083 356.872 410.155 356.869 410.227 356.869 cv
410.538 356.869 410.831 356.938 411.05 357.06 cv
411.2 357.15 411.31 357.27 411.36 357.4 cv
411.71 358.41 412.24 359.4 412.92 360.34 cv
413.17 360.68 412.89 361.07 412.3 361.21 cv
412.156 361.246 412.007 361.263 411.861 361.263 cv
471.25 361.16 mo
471.25 361.16 li
471.25 361.16 li
471.343 361.006 471.431 360.852 471.516 360.698 cv
471.584 360.575 471.651 360.452 471.715 360.329 cv
471.577 360.605 471.418 360.883 471.25 361.16 cv
471.25 361.16 li
421.554 357.111 mo
421.451 356.939 421.363 356.769 421.29 356.6 cv
421.072 356.086 420.982 355.573 421.023 355.061 cv
420.984 355.574 421.074 356.089 421.294 356.603 cv
421.366 356.771 421.452 356.94 421.554 357.111 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
409.627 355.011 mo
409.329 355.011 409.059 354.934 408.86 354.82 cv
408.66 354.7 408.53 354.53 408.53 354.35 cv
408.527 354.065 408.537 353.78 408.559 353.496 cv
410.643 354.706 li
410.44 354.89 410.085 355.01 409.68 355.01 cv
409.662 355.01 409.645 355.011 409.627 355.011 cv
410.852 353.513 mo
409.117 352.505 li
408.986 352.428 408.857 352.351 408.73 352.272 cv
408.814 351.856 408.924 351.441 409.06 351.03 cv
409.166 350.721 409.647 350.498 410.185 350.498 cv
410.256 350.498 410.328 350.502 410.4 350.51 cv
410.64 350.54 410.84 350.6 411 350.69 cv
411.26 350.85 411.39 351.07 411.32 351.29 cv
411.073 352.025 410.915 352.767 410.852 353.513 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
410.643 354.706 mo
408.559 353.496 li
408.591 353.087 408.648 352.679 408.73 352.272 cv
408.857 352.351 408.986 352.428 409.117 352.505 cv
410.852 353.513 li
410.828 353.791 410.817 354.07 410.82 354.35 cv
410.82 354.482 410.755 354.604 410.643 354.706 cv
.364706 .482353 .835294 rgb
f
411.771 348.761 mo
411.624 348.761 411.475 348.744 411.33 348.71 cv
411.18 348.68 411.06 348.63 410.95 348.57 cv
410.63 348.38 410.52 348.1 410.7 347.85 cv
411.42 346.82 412.33 345.83 413.39 344.9 cv
413.61 344.711 413.972 344.61 414.342 344.61 cv
414.561 344.61 414.783 344.645 414.981 344.72 cv
415.16 344.8 li
415.54 345.02 415.61 345.38 415.3 345.64 cv
414.33 346.49 413.49 347.41 412.83 348.35 cv
412.649 348.607 412.223 348.761 411.771 348.761 cv
416.819 343.108 mo
416.666 342.946 416.641 342.758 416.745 342.588 cv
416.647 342.758 416.672 342.947 416.819 343.108 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
458.76 366.309 mo
458.7 366.34 li
457.33 367.14 455.84 367.85 454.26 368.46 cv
453.8 368.64 453.19 368.6 452.81 368.38 cv
452.67 368.28 li
452.32 367.979 452.45 367.56 452.98 367.36 cv
454.21 366.88 455.38 366.34 456.47 365.74 cv
456.67 365.63 456.87 365.52 457.06 365.41 cv
457.13 365.37 li
457.58 365.11 458.3 365.11 458.75 365.37 cv
458.98 365.5 459.09 365.67 459.09 365.85 cv
459.09 366.01 458.98 366.18 458.76 366.309 cv
449.2 370.04 mo
447.43 370.46 445.58 370.79 443.7 371 cv
443.31 371.05 442.93 370.97 442.66 370.82 cv
442.51 370.729 442.4 370.61 442.35 370.479 cv
442.22 370.12 442.63 369.77 443.25 369.7 cv
444.98 369.5 446.69 369.2 448.32 368.81 cv
448.76 368.7 449.25 368.769 449.57 368.95 cv
449.67 369.01 449.76 369.08 449.82 369.17 cv
450.06 369.51 449.79 369.89 449.2 370.04 cv
434.96 364.08 mo
432.94 363.89 430.87 363.33 428.81 362.42 cv
426.99 363.47 li
426.43 363.8 425.51 363.8 424.94 363.47 cv
422.88 362.28 li
422.309 361.95 422.309 361.42 422.87 361.09 cv
424.63 360.07 li
422.89 358.87 421.77 357.71 421.29 356.6 cv
420.72 355.26 421.03 353.92 422.23 352.6 cv
422.36 352.45 422.51 352.29 422.68 352.13 cv
422.769 352.04 li
422.92 351.9 423.16 351.81 423.44 351.769 cv
423.72 351.74 424 351.769 424.24 351.86 cv
428.21 353.41 li
428.37 353.49 li
428.7 353.68 428.769 353.979 428.53 354.21 cv
428.45 354.29 li
427.8 354.94 427.63 355.6 427.95 356.25 cv
428.2 356.75 428.72 357.29 429.519 357.86 cv
429.87 358.12 430.269 358.37 430.75 358.65 cv
431.39 359.02 432.01 359.33 432.58 359.58 cv
433.43 359.94 434.19 360.17 434.86 360.24 cv
435.82 360.36 436.64 360.19 437.43 359.729 cv
438.01 359.39 438.28 359.02 438.24 358.6 cv
438.2 358.14 437.84 357.55 437.17 356.84 cv
436.92 356.58 li
434.86 354.54 li
433.43 353.13 432.52 352 432.16 351.21 cv
431.76 350.33 431.69 349.479 431.95 348.69 cv
432.23 347.87 432.97 347.09 434.17 346.39 cv
435.18 345.809 436.26 345.38 437.4 345.12 cv
438.73 344.8 440.14 344.72 441.63 344.85 cv
443.62 345.03 445.7 345.62 447.81 346.6 cv
449.5 345.62 li
449.72 345.51 li
450.28 345.29 451.06 345.33 451.56 345.62 cv
453.51 346.75 li
453.62 346.81 li
454.19 347.13 454.19 347.67 453.63 348 cv
451.89 349.01 li
453.16 349.97 454.019 350.93 454.43 351.86 cv
454.81 352.729 454.79 353.61 454.36 354.47 cv
454.08 355.05 453.61 355.63 452.96 356.2 cv
452.85 356.29 li
452.7 356.43 452.43 356.519 452.14 356.55 cv
451.88 356.57 451.58 356.53 451.35 356.42 cv
447.45 354.66 li
447.1 354.46 447.04 354.14 447.31 353.91 cv
447.4 353.82 li
447.94 353.34 448.07 352.82 447.81 352.24 cv
447.66 351.9 447.37 351.55 446.96 351.19 cv
446.57 350.85 446.07 350.5 445.46 350.15 cv
444.97 349.87 444.5 349.63 444.05 349.42 cv
443.21 349.05 442.47 348.81 441.83 348.729 cv
441.69 348.72 441.56 348.71 441.43 348.71 cv
440.77 348.68 440.231 348.82 439.65 349.15 cv
439.26 349.38 439.03 349.62 438.99 349.86 cv
438.94 350.15 439.04 350.5 439.31 350.9 cv
439.44 351.1 439.7 351.4 440.09 351.82 cv
440.53 352.3 441.14 352.9 441.95 353.67 cv
442.07 353.78 li
442.18 353.89 442.29 354 442.39 354.11 cv
443.57 355.27 444.38 356.2 444.78 356.86 cv
445.25 357.64 445.48 358.35 445.48 358.979 cv
445.47 359.62 445.26 360.25 444.83 360.84 cv
444.72 360.99 444.6 361.13 444.47 361.28 cv
444.33 361.42 444.18 361.57 444.01 361.71 cv
443.68 362 443.28 362.27 442.83 362.53 cv
442.37 362.79 441.9 363.03 441.42 363.229 cv
439.5 364.019 437.33 364.3 434.96 364.08 cv
437.98 371.33 mo
436.06 371.33 434.14 371.22 432.26 371 cv
432.02 370.98 431.82 370.91 431.67 370.82 cv
431.4 370.67 431.27 370.45 431.35 370.22 cv
431.47 369.86 432.07 369.63 432.69 369.7 cv
434.43 369.9 436.2 370 437.97 370 cv
438.29 370 438.58 370.07 438.79 370.19 cv
438.99 370.31 439.12 370.479 439.13 370.66 cv
439.13 371.03 438.61 371.33 437.98 371.33 cv
428.24 369.68 mo
428 370.019 427.33 370.18 426.75 370.04 cv
424.97 369.62 423.26 369.09 421.66 368.47 cv
421.49 368.39 li
421.11 368.17 421.03 367.82 421.34 367.55 cv
421.69 367.24 422.4 367.16 422.93 367.37 cv
424.4 367.93 425.981 368.42 427.62 368.81 cv
427.76 368.85 427.88 368.9 427.99 368.95 cv
428.31 369.14 428.42 369.42 428.24 369.68 cv
418.82 366.35 mo
418.37 366.61 417.66 366.62 417.21 366.36 cv
417.19 366.35 li
415.83 365.56 414.6 364.7 413.54 363.79 cv
413.18 363.48 413.32 363.07 413.85 362.87 cv
414.31 362.69 414.92 362.73 415.3 362.95 cv
415.44 363.05 li
416.42 363.89 417.55 364.68 418.81 365.41 cv
419.26 365.67 419.269 366.09 418.82 366.35 cv
412.3 361.21 mo
411.86 361.32 411.37 361.25 411.05 361.07 cv
410.95 361.01 410.86 360.94 410.8 360.85 cv
410.059 359.83 409.49 358.76 409.11 357.66 cv
408.98 357.3 409.39 356.95 410.01 356.88 cv
410.4 356.84 410.78 356.91 411.05 357.06 cv
411.2 357.15 411.31 357.27 411.36 357.4 cv
411.71 358.41 412.24 359.4 412.92 360.34 cv
413.17 360.68 412.89 361.07 412.3 361.21 cv
408.53 354.35 mo
408.52 353.24 408.7 352.12 409.06 351.03 cv
409.18 350.68 409.78 350.44 410.4 350.51 cv
410.64 350.54 410.84 350.6 411 350.69 cv
411.26 350.85 411.39 351.07 411.32 351.29 cv
410.98 352.3 410.81 353.32 410.82 354.35 cv
410.82 354.72 410.31 355.01 409.68 355.01 cv
409.36 355.019 409.07 354.94 408.86 354.82 cv
408.66 354.7 408.53 354.53 408.53 354.35 cv
415.3 345.64 mo
414.33 346.49 413.49 347.41 412.83 348.35 cv
412.59 348.69 411.92 348.85 411.33 348.71 cv
411.18 348.68 411.06 348.63 410.95 348.57 cv
410.63 348.38 410.52 348.1 410.7 347.85 cv
411.42 346.82 412.33 345.83 413.39 344.9 cv
413.74 344.6 414.45 344.52 414.981 344.72 cv
415.16 344.8 li
415.54 345.02 415.61 345.38 415.3 345.64 cv
421.44 340.21 mo
421.9 340.03 422.51 340.07 422.89 340.29 cv
423.03 340.39 li
423.28 340.6 423.29 340.86 423.1 341.07 cv
423.02 341.17 422.89 341.25 422.73 341.31 cv
421.28 341.88 419.92 342.53 418.68 343.25 cv
418.65 343.27 li
418.21 343.519 417.51 343.53 417.07 343.29 cv
417.03 343.27 li
416.61 343.03 416.57 342.67 416.91 342.41 cv
417.02 342.33 li
417.06 342.31 li
417.44 342.09 417.83 341.87 418.24 341.66 cv
419.25 341.13 420.32 340.65 421.44 340.21 cv
426.5 338.63 mo
428.27 338.21 430.11 337.88 431.99 337.66 cv
432.39 337.62 432.77 337.69 433.03 337.84 cv
433.19 337.93 433.3 338.05 433.35 338.18 cv
433.481 338.54 433.07 338.89 432.45 338.97 cv
430.72 339.17 429.02 339.47 427.39 339.86 cv
426.95 339.97 426.45 339.9 426.13 339.72 cv
426.03 339.66 425.94 339.58 425.88 339.5 cv
425.64 339.16 425.91 338.769 426.5 338.63 cv
437.71 337.33 mo
439.63 337.33 441.56 337.43 443.44 337.65 cv
443.67 337.67 443.87 337.74 444.03 337.83 cv
444.29 337.979 444.43 338.2 444.35 338.43 cv
444.23 338.79 443.63 339.02 443 338.95 cv
441.49 338.78 439.95 338.69 438.41 338.67 cv
438.39 338.67 li
438.17 338.66 437.95 338.66 437.73 338.66 cv
437.41 338.66 437.12 338.59 436.91 338.47 cv
436.7 338.35 436.57 338.18 436.57 338 cv
436.57 337.74 436.83 337.51 437.21 337.4 cv
437.36 337.35 437.53 337.33 437.71 337.33 cv
448.95 338.6 mo
450.73 339.03 452.44 339.55 454.04 340.17 cv
454.22 340.25 li
454.6 340.47 454.67 340.82 454.36 341.09 cv
454.23 341.21 454.04 341.3 453.83 341.34 cv
453.52 341.41 453.17 341.41 452.87 341.3 cv
452.769 341.28 li
451.85 340.92 450.88 340.6 449.88 340.31 cv
449.3 340.13 448.7 339.979 448.09 339.83 cv
447.94 339.8 447.82 339.75 447.71 339.69 cv
447.39 339.51 447.28 339.22 447.46 338.97 cv
447.63 338.73 448.03 338.57 448.45 338.55 cv
448.62 338.55 448.79 338.56 448.95 338.6 cv
458.5 342.28 mo
458.54 342.3 li
459.9 343.09 461.12 343.94 462.18 344.84 cv
462.53 345.15 462.4 345.56 461.87 345.77 cv
461.41 345.95 460.8 345.91 460.42 345.69 cv
460.28 345.59 li
459.66 345.06 458.99 344.56 458.269 344.08 cv
457.85 343.79 457.4 343.519 456.94 343.25 cv
456.89 343.22 li
456.46 342.97 456.43 342.59 456.81 342.33 cv
456.88 342.28 li
457.33 342.019 458.05 342.019 458.5 342.28 cv
464.76 357.94 mo
464.5 357.79 464.36 357.56 464.44 357.34 cv
464.57 356.95 464.67 356.55 464.74 356.15 cv
464.87 355.53 464.93 354.91 464.92 354.28 cv
464.92 353.91 465.43 353.62 466.07 353.61 cv
466.38 353.61 466.67 353.69 466.88 353.81 cv
467.09 353.93 467.22 354.09 467.22 354.28 cv
467.23 354.94 467.17 355.61 467.03 356.27 cv
466.95 356.71 466.84 357.15 466.69 357.59 cv
466.58 357.95 465.97 358.19 465.35 358.12 cv
465.12 358.09 464.91 358.03 464.76 357.94 cv
462.81 348.29 mo
462.559 347.95 462.83 347.56 463.42 347.42 cv
463.86 347.31 464.35 347.38 464.67 347.56 cv
464.78 347.62 464.86 347.69 464.92 347.78 cv
465.15 348.09 465.36 348.4 465.55 348.72 cv
466 349.45 466.36 350.2 466.62 350.96 cv
466.73 351.27 466.45 351.58 465.96 351.7 cv
465.73 351.75 li
465.34 351.79 464.95 351.72 464.69 351.56 cv
464.53 351.47 464.42 351.36 464.37 351.229 cv
464.24 350.86 464.09 350.49 463.9 350.13 cv
463.65 349.58 463.33 349.04 462.96 348.51 cv
462.81 348.29 li
460.61 363.83 mo
460.23 363.61 460.16 363.26 460.47 362.99 cv
461.44 362.14 462.269 361.23 462.94 360.28 cv
463.18 359.94 463.84 359.78 464.43 359.92 cv
464.58 359.95 464.7 360 464.81 360.06 cv
465.13 360.24 465.24 360.53 465.07 360.78 cv
464.34 361.81 463.44 362.8 462.39 363.729 cv
462.04 364.03 461.32 364.12 460.79 363.91 cv
460.61 363.83 li
471.86 348.74 mo
471.27 347.54 470.49 346.37 469.52 345.25 cv
469.16 344.82 468.77 344.4 468.35 343.99 cv
466.84 342.51 464.99 341.12 462.79 339.85 cv
461.26 338.97 459.63 338.18 457.92 337.5 cv
456.52 336.94 455.07 336.44 453.57 336.01 cv
450.45 335.1 447.16 334.479 443.79 334.15 cv
442.93 334.06 442.07 334 441.2 333.94 cv
439.1 333.83 436.99 333.82 434.89 333.92 cv
434.88 333.92 li
434.42 333.94 433.95 333.97 433.49 334 cv
427.63 334.41 421.92 335.67 416.95 337.78 cv
415.5 338.4 414.1 339.09 412.79 339.85 cv
410.35 341.27 408.35 342.84 406.78 344.51 cv
402.82 348.72 401.62 353.58 403.17 358.19 cv
403.28 358.51 403.4 358.83 403.53 359.15 cv
403.54 359.16 li
404.01 360.28 404.66 361.39 405.46 362.46 cv
405.46 362.47 li
405.93 363.08 406.45 363.68 407.01 364.27 cv
407.01 364.28 li
407.3 364.56 407.59 364.85 407.9 365.15 cv
409.309 366.45 410.99 367.68 412.95 368.81 cv
426.81 376.81 449.19 376.81 462.96 368.81 cv
464.24 368.07 465.4 367.28 466.45 366.45 cv
466.8 366.17 467.13 365.89 467.45 365.61 cv
467.46 365.61 li
469.05 364.21 470.32 362.71 471.25 361.16 cv
471.6 360.57 471.91 359.98 472.17 359.39 cv
472.24 359.24 li
472.25 359.19 li
472.37 358.91 472.47 358.63 472.57 358.35 cv
472.59 358.29 li
472.69 357.98 472.78 357.67 472.86 357.35 cv
472.87 357.32 li
472.95 357.01 473.01 356.7 473.06 356.38 cv
473.1 356.16 li
473.13 355.95 473.15 355.74 473.17 355.54 cv
473.19 355.29 li
473.22 355.019 473.23 354.74 473.23 354.47 cv
473.23 354.43 li
473.24 352.52 472.78 350.6 471.86 348.74 cv
.992157 .945098 .501961 rgb
f
453.622 346.808 mo
454.188 347.134 454.19 347.669 453.626 347.997 cv
451.89 349.007 li
453.163 349.972 454.017 350.93 454.431 351.863 cv
455.073 353.321 454.579 354.777 452.962 356.195 cv
452.854 356.289 li
452.697 356.428 452.435 356.522 452.143 356.546 cv
451.88 356.573 451.581 356.529 451.353 356.424 cv
447.447 354.658 li
447.102 354.459 447.044 354.143 447.306 353.905 cv
447.398 353.824 li
447.939 353.343 448.074 352.823 447.808 352.238 cv
447.657 351.901 447.371 351.551 446.957 351.193 cv
446.569 350.854 446.065 350.503 445.455 350.15 cv
444.972 349.871 444.5 349.629 444.046 349.425 cv
443.211 349.047 442.467 348.813 441.826 348.73 cv
440.99 348.626 440.336 348.751 439.648 349.15 cv
439.256 349.379 439.032 349.617 438.986 349.857 cv
438.936 350.149 439.043 350.501 439.308 350.904 cv
439.443 351.101 439.696 351.401 440.088 351.819 cv
440.531 352.299 441.143 352.905 441.95 353.668 cv
442.068 353.783 li
442.183 353.894 442.292 354 442.395 354.106 cv
443.573 355.27 444.376 356.199 444.78 356.864 cv
445.249 357.638 445.483 358.351 445.482 358.976 cv
445.474 359.62 445.261 360.246 444.834 360.837 cv
444.411 361.433 443.736 362.005 442.83 362.531 cv
440.576 363.842 437.929 364.361 434.961 364.082 cv
432.94 363.891 430.874 363.329 428.814 362.416 cv
426.993 363.475 li
426.429 363.803 425.508 363.801 424.942 363.475 cv
422.878 362.283 li
422.309 361.954 422.307 361.423 422.871 361.095 cv
424.628 360.073 li
422.885 358.872 421.765 357.705 421.294 356.603 cv
420.651 355.099 421.116 353.596 422.678 352.131 cv
422.771 352.043 li
422.922 351.904 423.161 351.807 423.436 351.772 cv
423.716 351.738 423.999 351.771 424.236 351.864 cv
428.211 353.413 li
428.366 353.485 li
428.697 353.677 428.767 353.977 428.531 354.212 cv
428.45 354.293 li
427.802 354.944 427.633 355.604 427.952 356.253 cv
428.198 356.753 428.724 357.293 429.517 357.861 cv
429.865 358.117 430.271 358.374 430.751 358.651 cv
431.39 359.02 432.006 359.332 432.58 359.579 cv
433.427 359.939 434.19 360.165 434.857 360.243 cv
435.819 360.356 436.637 360.193 437.435 359.731 cv
438.015 359.394 438.278 359.022 438.24 358.596 cv
438.2 358.137 437.837 357.546 437.167 356.835 cv
437.088 356.753 437.008 356.666 436.917 356.58 cv
434.857 354.544 li
433.429 353.128 432.523 352.004 432.155 351.205 cv
431.759 350.325 431.69 349.478 431.954 348.69 cv
432.228 347.865 432.974 347.092 434.174 346.395 cv
436.361 345.123 438.869 344.603 441.632 344.849 cv
443.623 345.026 445.701 345.616 447.814 346.6 cv
449.504 345.617 li
450.068 345.289 450.989 345.287 451.558 345.616 cv
453.622 346.808 li
.980392 .760784 .25098 rgb
f
425.883 339.502 mo
425.641 339.163 425.914 338.773 426.497 338.632 cv
428.266 338.205 430.114 337.878 431.994 337.662 cv
432.386 337.616 432.77 337.691 433.033 337.844 cv
433.188 337.934 433.302 338.05 433.348 338.183 cv
433.476 338.544 433.071 338.894 432.452 338.965 cv
430.72 339.166 429.016 339.468 427.387 339.86 cv
426.946 339.967 426.452 339.901 426.132 339.717 cv
426.029 339.657 425.944 339.585 425.883 339.502 cv
f
447.711 339.689 mo
447.395 339.507 447.275 339.223 447.458 338.967 cv
447.696 338.628 448.367 338.466 448.953 338.604 cv
450.728 339.026 452.441 339.553 454.041 340.169 cv
454.217 340.252 li
454.597 340.471 454.673 340.822 454.364 341.091 cv
454.016 341.395 453.303 341.48 452.772 341.275 cv
451.3 340.708 449.725 340.225 448.089 339.833 cv
447.942 339.8 447.816 339.75 447.711 339.689 cv
f
418.647 343.269 mo
418.202 343.527 417.475 343.528 417.025 343.27 cv
416.574 343.009 416.574 342.588 417.02 342.329 cv
417.056 342.309 li
418.398 341.528 419.873 340.82 421.438 340.209 cv
421.902 340.029 422.51 340.07 422.889 340.289 cv
423.032 340.391 li
423.391 340.695 423.253 341.108 422.728 341.314 cv
421.284 341.878 419.921 342.528 418.683 343.248 cv
418.647 343.269 li
f
456.887 343.219 mo
456.438 342.96 456.433 342.538 456.878 342.279 cv
457.327 342.019 458.055 342.02 458.503 342.279 cv
458.538 342.3 li
459.904 343.089 461.122 343.94 462.18 344.844 cv
462.534 345.147 462.399 345.562 461.875 345.768 cv
461.414 345.947 460.803 345.905 460.422 345.686 cv
460.281 345.587 li
459.304 344.752 458.18 343.965 456.939 343.249 cv
456.887 343.219 li
f
415.303 345.643 mo
414.326 346.493 413.492 347.405 412.825 348.354 cv
412.588 348.691 411.917 348.854 411.328 348.714 cv
411.185 348.678 411.059 348.629 410.953 348.568 cv
410.634 348.384 410.519 348.101 410.701 347.846 cv
411.423 346.817 412.329 345.829 413.388 344.905 cv
413.739 344.599 414.452 344.518 414.979 344.721 cv
415.155 344.804 li
415.537 345.024 415.609 345.375 415.303 345.643 cv
cp
f
462.807 348.29 mo
462.562 347.95 462.835 347.56 463.421 347.42 cv
463.862 347.313 464.354 347.377 464.674 347.561 cv
464.777 347.622 464.862 347.694 464.923 347.777 cv
465.668 348.802 466.237 349.873 466.624 350.963 cv
466.751 351.323 466.347 351.674 465.725 351.747 cv
465.337 351.793 464.953 351.717 464.689 351.564 cv
464.534 351.475 464.42 351.357 464.372 351.226 cv
464.018 350.222 463.493 349.233 462.807 348.29 cv
f
464.438 357.338 mo
464.769 356.334 464.933 355.305 464.924 354.281 cv
464.919 353.913 465.432 353.615 466.065 353.614 cv
466.383 353.614 466.672 353.689 466.881 353.81 cv
467.089 353.93 467.219 354.095 467.221 354.277 cv
467.233 355.388 467.056 356.504 466.693 357.594 cv
466.575 357.954 465.975 358.188 465.352 358.118 cv
465.118 358.091 464.913 358.027 464.758 357.938 cv
464.497 357.786 464.364 357.564 464.438 357.338 cv
f
412.919 360.343 mo
413.167 360.682 412.889 361.07 412.302 361.211 cv
411.861 361.318 411.373 361.252 411.053 361.067 cv
410.947 361.007 410.859 360.936 410.804 360.853 cv
410.064 359.828 409.494 358.757 409.111 357.665 cv
408.983 357.305 409.388 356.954 410.007 356.883 cv
410.397 356.837 410.782 356.913 411.045 357.064 cv
411.2 357.154 411.313 357.271 411.359 357.404 cv
411.713 358.411 412.239 359.4 412.919 360.343 cv
cp
f
460.467 362.992 mo
461.44 362.141 462.271 361.227 462.936 360.28 cv
463.176 359.939 463.845 359.779 464.433 359.916 cv
464.578 359.951 464.704 360 464.809 360.061 cv
465.128 360.245 465.242 360.528 465.065 360.784 cv
464.341 361.813 463.44 362.802 462.385 363.729 cv
462.036 364.033 461.32 364.116 460.793 363.913 cv
460.614 363.83 li
460.233 363.609 460.161 363.258 460.467 362.992 cv
f
458.753 365.367 mo
459.204 365.627 459.207 366.047 458.758 366.308 cv
458.7 366.342 li
457.334 367.136 455.845 367.849 454.261 368.463 cv
453.801 368.643 453.192 368.602 452.812 368.382 cv
452.67 368.28 li
452.315 367.977 452.453 367.564 452.977 367.357 cv
454.438 366.79 455.811 366.136 457.064 365.407 cv
457.131 365.368 li
457.58 365.107 458.305 365.107 458.753 365.367 cv
f
427.986 368.955 mo
428.307 369.14 428.424 369.424 428.244 369.68 cv
428.004 370.021 427.329 370.181 426.747 370.041 cv
424.974 369.617 423.261 369.088 421.662 368.472 cv
421.489 368.389 li
421.108 368.168 421.033 367.818 421.341 367.547 cv
421.693 367.244 422.403 367.161 422.933 367.366 cv
424.403 367.935 425.981 368.421 427.617 368.812 cv
427.759 368.846 427.884 368.896 427.986 368.955 cv
cp
f
449.817 369.167 mo
450.062 369.507 449.786 369.895 449.2 370.035 cv
447.434 370.46 445.583 370.785 443.702 371.002 cv
443.311 371.046 442.928 370.97 442.664 370.817 cv
442.509 370.728 442.396 370.612 442.35 370.478 cv
442.225 370.118 442.629 369.768 443.248 369.697 cv
444.982 369.497 446.69 369.197 448.316 368.807 cv
448.758 368.7 449.248 368.766 449.566 368.95 cv
449.671 369.01 449.757 369.083 449.817 369.167 cv
cp
f
438.787 370.192 mo
438.995 370.313 439.124 370.479 439.127 370.662 cv
439.126 371.029 438.613 371.327 437.982 371.327 cv
436.063 371.329 434.136 371.219 432.255 371.004 cv
432.024 370.979 431.822 370.912 431.667 370.822 cv
431.403 370.67 431.271 370.448 431.348 370.224 cv
431.469 369.861 432.069 369.628 432.692 369.7 cv
434.429 369.896 436.204 369.996 437.972 369.998 cv
438.289 369.997 438.577 370.071 438.787 370.192 cv
cp
f
436.912 338.466 mo
436.703 338.346 436.574 338.18 436.573 337.997 cv
436.568 337.63 437.081 337.331 437.715 337.33 cv
439.632 337.326 441.559 337.433 443.438 337.648 cv
443.672 337.674 443.875 337.739 444.031 337.83 cv
444.293 337.981 444.426 338.203 444.352 338.429 cv
444.231 338.787 443.628 339.023 443.005 338.953 cv
441.273 338.757 439.496 338.658 437.728 338.66 cv
437.406 338.66 437.12 338.586 436.912 338.466 cv
f
411.316 351.292 mo
410.98 352.296 410.813 353.323 410.819 354.349 cv
410.824 354.716 410.312 355.014 409.681 355.014 cv
409.362 355.016 409.072 354.939 408.864 354.819 cv
408.656 354.699 408.526 354.533 408.525 354.351 cv
408.517 353.238 408.697 352.125 409.059 351.034 cv
409.18 350.676 409.783 350.44 410.403 350.512 cv
410.638 350.538 410.841 350.604 410.997 350.694 cv
411.259 350.845 411.391 351.066 411.316 351.292 cv
cp
f
418.808 365.409 mo
419.256 365.668 419.267 366.093 418.821 366.353 cv
418.373 366.613 417.657 366.618 417.205 366.357 cv
417.19 366.349 li
415.83 365.563 414.601 364.702 413.538 363.788 cv
413.183 363.484 413.32 363.071 413.846 362.865 cv
414.308 362.686 414.918 362.728 415.299 362.948 cv
415.439 363.046 li
416.42 363.89 417.553 364.685 418.808 365.409 cv
cp
f
473.232 354.43 mo
473.211 361.916 li
473.196 367.123 469.773 372.323 462.936 376.297 cv
449.173 384.295 426.784 384.297 412.931 376.298 cv
405.96 372.273 402.479 366.99 402.493 361.714 cv
402.515 354.228 li
402.5 359.503 405.981 364.787 412.952 368.812 cv
426.806 376.81 449.194 376.809 462.957 368.81 cv
469.795 364.836 473.217 359.637 473.232 354.43 cv
f
gsave
523.017 240.888 mo
511.725 240.888 500.418 238.392 491.77 233.4 cv
480.895 227.119 476.828 218.384 479.583 210.285 cv
486.228 206.449 li
490.526 203.967 492.271 200.556 491.459 197.325 cv
491.496 197.303 491.533 197.282 491.57 197.26 cv
500.156 192.268 511.435 189.772 522.727 189.772 cv
534.019 189.772 545.326 192.268 553.968 197.26 cv
571.265 207.231 571.352 223.416 554.18 233.4 cv
548.951 236.438 542.729 238.551 536.114 239.741 cv
559.937 225.986 li
560.255 225.803 560.256 225.508 559.946 225.328 cv
559.79 225.237 559.588 225.192 559.384 225.192 cv
559.177 225.192 558.97 225.238 558.809 225.331 cv
533.008 240.227 li
529.725 240.668 526.372 240.888 523.017 240.888 cv
480.271 208.576 mo
482.016 204.826 485.263 201.265 490.014 198.211 cv
490.331 200.93 488.689 203.715 485.095 205.791 cv
480.271 208.576 li
clp
476.828 189.772 mo
571.352 189.772 li
571.352 240.888 li
476.828 240.888 li
cp
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
grestore
479.583 210.285 mo
479.778 209.712 480.007 209.141 480.271 208.576 cv
485.095 205.791 li
488.689 203.715 490.331 200.93 490.014 198.211 cv
490.48 197.911 490.963 197.615 491.459 197.325 cv
492.271 200.556 490.526 203.967 486.228 206.449 cv
479.583 210.285 li
.364706 .482353 .835294 rgb
f
533.008 240.227 mo
558.809 225.331 li
558.97 225.238 559.177 225.192 559.384 225.192 cv
559.588 225.192 559.79 225.237 559.946 225.328 cv
560.256 225.508 560.255 225.803 559.937 225.986 cv
536.114 239.741 li
535.088 239.925 534.05 240.087 533.008 240.227 cv
f
551.76 215.31 mo
551.7 215.34 li
550.33 216.14 548.84 216.85 547.26 217.46 cv
546.8 217.64 546.19 217.6 545.81 217.38 cv
545.67 217.28 li
545.32 216.98 545.45 216.56 545.98 216.36 cv
547.21 215.88 548.38 215.34 549.47 214.74 cv
549.67 214.63 549.87 214.52 550.06 214.41 cv
550.13 214.37 li
550.58 214.11 551.3 214.11 551.75 214.37 cv
551.98 214.5 552.09 214.67 552.09 214.85 cv
552.09 215.01 551.98 215.18 551.76 215.31 cv
cp
542.2 219.04 mo
540.43 219.46 538.58 219.79 536.7 220 cv
536.31 220.05 535.93 219.97 535.66 219.82 cv
535.51 219.73 535.4 219.61 535.35 219.48 cv
535.22 219.12 535.63 218.77 536.25 218.7 cv
537.98 218.5 539.69 218.2 541.32 217.81 cv
541.76 217.7 542.25 217.77 542.57 217.95 cv
542.67 218.01 542.76 218.08 542.82 218.17 cv
543.06 218.51 542.79 218.89 542.2 219.04 cv
cp
527.96 213.08 mo
525.94 212.89 523.87 212.33 521.81 211.42 cv
519.99 212.47 li
519.43 212.8 518.51 212.8 517.94 212.47 cv
515.88 211.28 li
515.31 210.95 515.31 210.42 515.87 210.09 cv
517.63 209.07 li
515.89 207.87 514.77 206.71 514.29 205.6 cv
513.72 204.26 514.03 202.92 515.23 201.6 cv
515.36 201.45 515.51 201.29 515.68 201.13 cv
515.77 201.04 li
515.92 200.9 516.16 200.81 516.44 200.77 cv
516.72 200.74 517 200.77 517.24 200.86 cv
521.21 202.41 li
521.37 202.49 li
521.7 202.68 521.77 202.98 521.53 203.21 cv
521.45 203.29 li
520.8 203.94 520.63 204.6 520.95 205.25 cv
521.2 205.75 521.72 206.29 522.52 206.86 cv
522.87 207.12 523.27 207.37 523.75 207.65 cv
524.39 208.02 525.01 208.33 525.58 208.58 cv
526.43 208.94 527.19 209.17 527.86 209.24 cv
528.82 209.36 529.64 209.19 530.43 208.73 cv
531.01 208.39 531.28 208.02 531.24 207.6 cv
531.2 207.14 530.84 206.55 530.17 205.84 cv
529.92 205.58 li
527.86 203.54 li
526.43 202.13 525.52 201 525.16 200.21 cv
524.76 199.33 524.69 198.48 524.95 197.69 cv
525.23 196.87 525.97 196.09 527.17 195.39 cv
528.18 194.81 529.26 194.38 530.4 194.12 cv
531.73 193.8 533.14 193.72 534.63 193.85 cv
536.62 194.03 538.7 194.62 540.81 195.6 cv
542.5 194.62 li
542.72 194.51 li
543.28 194.29 544.06 194.33 544.56 194.62 cv
546.51 195.75 li
546.62 195.81 li
547.19 196.13 547.19 196.67 546.63 197 cv
544.89 198.01 li
546.16 198.97 547.02 199.93 547.43 200.86 cv
547.81 201.73 547.79 202.61 547.36 203.47 cv
547.08 204.05 546.61 204.63 545.96 205.2 cv
545.85 205.29 li
545.7 205.43 545.43 205.52 545.14 205.55 cv
544.88 205.57 544.58 205.53 544.35 205.42 cv
540.45 203.66 li
540.1 203.46 540.04 203.14 540.31 202.91 cv
540.4 202.82 li
540.94 202.34 541.07 201.82 540.81 201.24 cv
540.66 200.9 540.37 200.55 539.96 200.19 cv
539.57 199.85 539.07 199.5 538.46 199.15 cv
537.97 198.87 537.5 198.63 537.05 198.42 cv
536.21 198.05 535.47 197.81 534.83 197.73 cv
534.69 197.72 534.56 197.71 534.43 197.71 cv
533.77 197.68 533.23 197.82 532.65 198.15 cv
532.26 198.38 532.03 198.62 531.99 198.86 cv
531.94 199.15 532.04 199.5 532.31 199.9 cv
532.44 200.1 532.7 200.4 533.09 200.82 cv
533.53 201.3 534.14 201.9 534.95 202.67 cv
535.07 202.78 li
535.18 202.89 535.29 203 535.39 203.11 cv
536.57 204.27 537.38 205.2 537.78 205.86 cv
538.25 206.64 538.48 207.35 538.48 207.98 cv
538.47 208.62 538.26 209.25 537.83 209.84 cv
537.72 209.99 537.6 210.13 537.47 210.28 cv
537.33 210.42 537.18 210.57 537.01 210.71 cv
536.68 211 536.28 211.27 535.83 211.53 cv
535.37 211.79 534.9 212.03 534.42 212.23 cv
532.5 213.02 530.33 213.3 527.96 213.08 cv
cp
530.98 220.33 mo
529.06 220.33 527.14 220.22 525.26 220 cv
525.02 219.98 524.82 219.91 524.67 219.82 cv
524.4 219.67 524.27 219.45 524.35 219.22 cv
524.47 218.86 525.07 218.63 525.69 218.7 cv
527.43 218.9 529.2 219 530.97 219 cv
531.29 219 531.58 219.07 531.79 219.19 cv
531.99 219.31 532.12 219.48 532.13 219.66 cv
532.13 220.03 531.61 220.33 530.98 220.33 cv
cp
521.24 218.68 mo
521 219.02 520.33 219.18 519.75 219.04 cv
517.97 218.62 516.26 218.09 514.66 217.47 cv
514.49 217.39 li
514.11 217.17 514.03 216.82 514.34 216.55 cv
514.69 216.24 515.4 216.16 515.93 216.37 cv
517.4 216.93 518.98 217.42 520.62 217.81 cv
520.76 217.85 520.88 217.9 520.99 217.95 cv
521.31 218.14 521.42 218.42 521.24 218.68 cv
cp
511.82 215.35 mo
511.37 215.61 510.66 215.62 510.21 215.36 cv
510.19 215.35 li
508.83 214.56 507.6 213.7 506.54 212.79 cv
506.18 212.48 506.32 212.07 506.85 211.87 cv
507.31 211.69 507.92 211.73 508.3 211.95 cv
508.44 212.05 li
509.42 212.89 510.55 213.68 511.81 214.41 cv
512.26 214.67 512.27 215.09 511.82 215.35 cv
cp
505.3 210.21 mo
504.86 210.32 504.37 210.25 504.05 210.07 cv
503.95 210.01 503.86 209.94 503.8 209.85 cv
503.06 208.83 502.49 207.76 502.11 206.66 cv
501.98 206.3 502.39 205.95 503.01 205.88 cv
503.4 205.84 503.78 205.91 504.05 206.06 cv
504.2 206.15 504.31 206.27 504.36 206.4 cv
504.71 207.41 505.24 208.4 505.92 209.34 cv
506.17 209.68 505.89 210.07 505.3 210.21 cv
cp
501.53 203.35 mo
501.52 202.24 501.7 201.12 502.06 200.03 cv
502.18 199.68 502.78 199.44 503.4 199.51 cv
503.64 199.54 503.84 199.6 504 199.69 cv
504.26 199.85 504.39 200.07 504.32 200.29 cv
503.98 201.3 503.81 202.32 503.82 203.35 cv
503.82 203.72 503.31 204.01 502.68 204.01 cv
502.36 204.02 502.07 203.94 501.86 203.82 cv
501.66 203.7 501.53 203.53 501.53 203.35 cv
cp
508.3 194.64 mo
507.33 195.49 506.49 196.41 505.83 197.35 cv
505.59 197.69 504.92 197.85 504.33 197.71 cv
504.18 197.68 504.06 197.63 503.95 197.57 cv
503.63 197.38 503.52 197.1 503.7 196.85 cv
504.42 195.82 505.33 194.83 506.39 193.9 cv
506.74 193.6 507.45 193.52 507.98 193.72 cv
508.16 193.8 li
508.54 194.02 508.61 194.38 508.3 194.64 cv
cp
514.44 189.21 mo
514.9 189.03 515.51 189.07 515.89 189.29 cv
516.03 189.39 li
516.28 189.6 516.29 189.86 516.1 190.07 cv
516.02 190.17 515.89 190.25 515.73 190.31 cv
514.28 190.88 512.92 191.53 511.68 192.25 cv
511.65 192.27 li
511.21 192.52 510.51 192.53 510.07 192.29 cv
510.03 192.27 li
509.61 192.03 509.57 191.67 509.91 191.41 cv
510.02 191.33 li
510.06 191.31 li
510.44 191.09 510.83 190.87 511.24 190.66 cv
512.25 190.13 513.32 189.65 514.44 189.21 cv
cp
519.5 187.63 mo
521.27 187.21 523.11 186.88 524.99 186.66 cv
525.39 186.62 525.77 186.69 526.03 186.84 cv
526.19 186.93 526.3 187.05 526.35 187.18 cv
526.48 187.54 526.07 187.89 525.45 187.97 cv
523.72 188.17 522.02 188.47 520.39 188.86 cv
519.95 188.97 519.45 188.9 519.13 188.72 cv
519.03 188.66 518.94 188.58 518.88 188.5 cv
518.64 188.16 518.91 187.77 519.5 187.63 cv
cp
530.71 186.33 mo
532.63 186.33 534.56 186.43 536.44 186.65 cv
536.67 186.67 536.87 186.74 537.03 186.83 cv
537.29 186.98 537.43 187.2 537.35 187.43 cv
537.23 187.79 536.63 188.02 536 187.95 cv
534.49 187.78 532.95 187.69 531.41 187.67 cv
531.39 187.67 li
531.17 187.66 530.95 187.66 530.73 187.66 cv
530.41 187.66 530.12 187.59 529.91 187.47 cv
529.7 187.35 529.57 187.18 529.57 187 cv
529.57 186.74 529.83 186.51 530.21 186.4 cv
530.36 186.35 530.53 186.33 530.71 186.33 cv
cp
541.95 187.6 mo
543.73 188.03 545.44 188.55 547.04 189.17 cv
547.22 189.25 li
547.6 189.47 547.67 189.82 547.36 190.09 cv
547.23 190.21 547.04 190.3 546.83 190.34 cv
546.52 190.41 546.17 190.41 545.87 190.3 cv
545.77 190.28 li
544.85 189.92 543.88 189.6 542.88 189.31 cv
542.3 189.13 541.7 188.98 541.09 188.83 cv
540.94 188.8 540.82 188.75 540.71 188.69 cv
540.39 188.51 540.28 188.22 540.46 187.97 cv
540.63 187.73 541.03 187.57 541.45 187.55 cv
541.62 187.55 541.79 187.56 541.95 187.6 cv
cp
551.5 191.28 mo
551.54 191.3 li
552.9 192.09 554.12 192.94 555.18 193.84 cv
555.53 194.15 555.4 194.56 554.87 194.77 cv
554.41 194.95 553.8 194.91 553.42 194.69 cv
553.28 194.59 li
552.66 194.06 551.99 193.56 551.27 193.08 cv
550.85 192.79 550.4 192.52 549.94 192.25 cv
549.89 192.22 li
549.46 191.97 549.43 191.59 549.81 191.33 cv
549.88 191.28 li
550.33 191.02 551.05 191.02 551.5 191.28 cv
cp
557.76 206.94 mo
557.5 206.79 557.36 206.56 557.44 206.34 cv
557.57 205.95 557.67 205.55 557.74 205.15 cv
557.87 204.53 557.93 203.91 557.92 203.28 cv
557.92 202.91 558.43 202.62 559.07 202.61 cv
559.38 202.61 559.67 202.69 559.88 202.81 cv
560.09 202.93 560.22 203.09 560.22 203.28 cv
560.23 203.94 560.17 204.61 560.03 205.27 cv
559.95 205.71 559.84 206.15 559.69 206.59 cv
559.58 206.95 558.97 207.19 558.35 207.12 cv
558.12 207.09 557.91 207.03 557.76 206.94 cv
cp
555.81 197.29 mo
555.56 196.95 555.83 196.56 556.42 196.42 cv
556.86 196.31 557.35 196.38 557.67 196.56 cv
557.78 196.62 557.86 196.69 557.92 196.78 cv
558.15 197.09 558.36 197.4 558.55 197.72 cv
559 198.45 559.36 199.2 559.62 199.96 cv
559.73 200.27 559.45 200.58 558.96 200.7 cv
558.73 200.75 li
558.34 200.79 557.95 200.72 557.69 200.56 cv
557.53 200.47 557.42 200.36 557.37 200.23 cv
557.24 199.86 557.09 199.49 556.9 199.13 cv
556.65 198.58 556.33 198.04 555.96 197.51 cv
555.81 197.29 li
cp
553.61 212.83 mo
553.23 212.61 553.16 212.26 553.47 211.99 cv
554.44 211.14 555.27 210.23 555.94 209.28 cv
556.18 208.94 556.84 208.78 557.43 208.92 cv
557.58 208.95 557.7 209 557.81 209.06 cv
558.13 209.24 558.24 209.53 558.07 209.78 cv
557.34 210.81 556.44 211.8 555.39 212.73 cv
555.04 213.03 554.32 213.12 553.79 212.91 cv
553.61 212.83 li
cp
564.86 197.74 mo
564.27 196.54 563.49 195.37 562.52 194.25 cv
562.16 193.82 561.77 193.4 561.35 192.99 cv
559.84 191.51 557.99 190.12 555.79 188.85 cv
554.26 187.97 552.63 187.18 550.92 186.5 cv
549.52 185.94 548.07 185.44 546.57 185.01 cv
543.45 184.1 540.16 183.48 536.79 183.15 cv
535.93 183.06 535.07 183 534.2 182.94 cv
532.1 182.83 529.99 182.82 527.89 182.92 cv
527.88 182.92 li
527.42 182.94 526.95 182.97 526.49 183 cv
520.63 183.41 514.92 184.67 509.95 186.78 cv
508.5 187.4 507.1 188.09 505.79 188.85 cv
503.35 190.27 501.35 191.84 499.78 193.51 cv
495.82 197.72 494.62 202.58 496.17 207.19 cv
496.28 207.51 496.4 207.83 496.53 208.15 cv
496.54 208.16 li
497.01 209.28 497.66 210.39 498.46 211.46 cv
498.46 211.47 li
498.93 212.08 499.45 212.68 500.01 213.27 cv
500.01 213.28 li
500.3 213.56 500.59 213.85 500.9 214.15 cv
502.31 215.45 503.99 216.68 505.95 217.81 cv
519.81 225.81 542.19 225.81 555.96 217.81 cv
557.24 217.07 558.4 216.28 559.45 215.45 cv
559.8 215.17 560.13 214.89 560.45 214.61 cv
560.46 214.61 li
562.05 213.21 563.32 211.71 564.25 210.16 cv
564.6 209.57 564.91 208.98 565.17 208.39 cv
565.24 208.24 li
565.25 208.19 li
565.37 207.91 565.47 207.63 565.57 207.35 cv
565.59 207.29 li
565.69 206.98 565.78 206.67 565.86 206.35 cv
565.87 206.32 li
565.95 206.01 566.01 205.7 566.06 205.38 cv
566.1 205.16 li
566.13 204.95 566.15 204.74 566.17 204.54 cv
566.19 204.29 li
566.22 204.02 566.23 203.74 566.23 203.47 cv
566.23 203.43 li
566.24 201.52 565.78 199.6 564.86 197.74 cv
cp
.992157 .945098 .501961 rgb
f
546.622 195.808 mo
547.188 196.134 547.19 196.669 546.626 196.998 cv
544.89 198.006 li
546.163 198.971 547.017 199.929 547.431 200.864 cv
548.073 202.321 547.579 203.777 545.962 205.195 cv
545.854 205.289 li
545.697 205.427 545.435 205.522 545.143 205.546 cv
544.88 205.573 544.581 205.529 544.353 205.424 cv
540.447 203.659 li
540.102 203.458 540.044 203.142 540.306 202.905 cv
540.398 202.824 li
540.939 202.343 541.074 201.824 540.808 201.238 cv
540.657 200.901 540.371 200.551 539.957 200.193 cv
539.569 199.855 539.065 199.503 538.455 199.151 cv
537.972 198.872 537.5 198.629 537.046 198.424 cv
536.211 198.047 535.467 197.813 534.826 197.73 cv
533.99 197.625 533.336 197.751 532.648 198.15 cv
532.256 198.379 532.032 198.618 531.986 198.858 cv
531.936 199.149 532.043 199.501 532.308 199.904 cv
532.443 200.1 532.696 200.402 533.088 200.82 cv
533.531 201.299 534.143 201.905 534.95 202.668 cv
535.068 202.783 li
535.183 202.894 535.292 203 535.395 203.106 cv
536.573 204.27 537.376 205.199 537.78 205.864 cv
538.249 206.638 538.483 207.351 538.481 207.977 cv
538.474 208.62 538.261 209.246 537.834 209.837 cv
537.411 210.433 536.736 211.005 535.83 211.531 cv
533.576 212.842 530.929 213.361 527.961 213.082 cv
525.94 212.891 523.874 212.329 521.814 211.417 cv
519.993 212.475 li
519.429 212.803 518.508 212.801 517.942 212.475 cv
515.878 211.283 li
515.31 210.955 515.307 210.423 515.871 210.094 cv
517.628 209.074 li
515.885 207.872 514.765 206.706 514.294 205.604 cv
513.651 204.099 514.116 202.596 515.678 201.131 cv
515.771 201.043 li
515.922 200.904 516.161 200.806 516.436 200.772 cv
516.716 200.739 516.999 200.771 517.236 200.864 cv
521.211 202.413 li
521.366 202.485 li
521.697 202.677 521.767 202.977 521.531 203.212 cv
521.45 203.293 li
520.802 203.945 520.633 204.603 520.952 205.253 cv
521.198 205.752 521.724 206.292 522.517 206.861 cv
522.865 207.117 523.271 207.374 523.751 207.652 cv
524.39 208.021 525.006 208.332 525.58 208.58 cv
526.427 208.94 527.19 209.165 527.857 209.243 cv
528.819 209.356 529.637 209.194 530.435 208.73 cv
531.015 208.393 531.278 208.022 531.24 207.596 cv
531.2 207.137 530.837 206.546 530.167 205.835 cv
530.088 205.752 530.008 205.666 529.917 205.58 cv
527.857 203.543 li
526.429 202.128 525.522 201.004 525.155 200.206 cv
524.759 199.325 524.69 198.479 524.954 197.69 cv
525.228 196.866 525.974 196.092 527.174 195.395 cv
529.361 194.123 531.869 193.604 534.632 193.849 cv
536.623 194.027 538.701 194.616 540.814 195.599 cv
542.504 194.618 li
543.068 194.289 543.989 194.288 544.558 194.616 cv
546.622 195.808 li
cp
.980392 .760784 .25098 rgb
f
518.883 188.501 mo
518.641 188.163 518.914 187.774 519.497 187.632 cv
521.266 187.205 523.114 186.878 524.994 186.662 cv
525.386 186.616 525.771 186.692 526.033 186.844 cv
526.188 186.933 526.302 187.05 526.348 187.183 cv
526.476 187.543 526.071 187.894 525.452 187.965 cv
523.72 188.167 522.016 188.468 520.387 188.86 cv
519.946 188.967 519.452 188.901 519.132 188.717 cv
519.029 188.657 518.944 188.584 518.883 188.501 cv
cp
f
540.711 188.689 mo
540.395 188.507 540.275 188.222 540.458 187.967 cv
540.696 187.628 541.367 187.466 541.953 187.604 cv
543.729 188.026 545.441 188.552 547.041 189.168 cv
547.217 189.252 li
547.597 189.471 547.673 189.822 547.364 190.091 cv
547.016 190.396 546.303 190.48 545.772 190.275 cv
544.3 189.708 542.725 189.225 541.089 188.833 cv
540.942 188.799 540.816 188.75 540.711 188.689 cv
cp
f
511.647 192.268 mo
511.202 192.527 510.475 192.529 510.025 192.27 cv
509.574 192.009 509.574 191.587 510.021 191.329 cv
510.056 191.308 li
511.398 190.528 512.873 189.82 514.438 189.209 cv
514.902 189.029 515.51 189.07 515.889 189.29 cv
516.032 189.391 li
516.391 189.695 516.253 190.108 515.728 190.314 cv
514.284 190.878 512.921 191.528 511.683 192.248 cv
511.647 192.268 li
cp
f
549.887 192.219 mo
549.438 191.96 549.433 191.538 549.878 191.279 cv
550.327 191.019 551.055 191.021 551.503 191.279 cv
551.538 191.3 li
552.904 192.088 554.122 192.94 555.18 193.844 cv
555.534 194.147 555.399 194.562 554.875 194.768 cv
554.414 194.948 553.803 194.905 553.422 194.685 cv
553.281 194.587 li
552.304 193.752 551.18 192.965 549.939 192.25 cv
549.887 192.219 li
cp
f
508.303 194.643 mo
507.326 195.493 506.492 196.405 505.825 197.353 cv
505.588 197.692 504.917 197.854 504.328 197.714 cv
504.185 197.678 504.059 197.629 503.953 197.568 cv
503.634 197.384 503.519 197.101 503.701 196.845 cv
504.423 195.818 505.329 194.829 506.388 193.905 cv
506.739 193.599 507.452 193.518 507.979 193.721 cv
508.155 193.804 li
508.537 194.024 508.609 194.375 508.303 194.643 cv
cp
f
555.807 197.291 mo
555.563 196.95 555.835 196.561 556.421 196.42 cv
556.862 196.313 557.354 196.377 557.674 196.562 cv
557.777 196.622 557.862 196.694 557.923 196.777 cv
558.668 197.801 559.237 198.873 559.624 199.963 cv
559.751 200.324 559.347 200.674 558.726 200.747 cv
558.337 200.792 557.953 200.716 557.689 200.564 cv
557.534 200.474 557.42 200.357 557.372 200.226 cv
557.019 199.222 556.493 198.233 555.807 197.291 cv
cp
f
557.438 206.338 mo
557.769 205.334 557.933 204.305 557.924 203.281 cv
557.919 202.914 558.432 202.616 559.065 202.614 cv
559.383 202.614 559.672 202.689 559.881 202.81 cv
560.089 202.93 560.219 203.095 560.221 203.277 cv
560.233 204.388 560.056 205.503 559.693 206.594 cv
559.575 206.954 558.975 207.188 558.352 207.118 cv
558.118 207.091 557.913 207.027 557.758 206.937 cv
557.497 206.787 557.364 206.565 557.438 206.338 cv
cp
f
505.919 209.343 mo
506.167 209.682 505.889 210.071 505.302 210.211 cv
504.861 210.318 504.373 210.252 504.053 210.067 cv
503.947 210.006 503.859 209.936 503.804 209.853 cv
503.064 208.828 502.494 207.757 502.111 206.665 cv
501.983 206.304 502.388 205.954 503.007 205.883 cv
503.397 205.837 503.782 205.913 504.045 206.065 cv
504.2 206.155 504.313 206.271 504.359 206.404 cv
504.713 207.412 505.239 208.4 505.919 209.343 cv
cp
f
553.467 211.992 mo
554.44 211.14 555.271 210.226 555.936 209.28 cv
556.176 208.94 556.845 208.779 557.433 208.916 cv
557.578 208.951 557.704 209 557.809 209.061 cv
558.128 209.245 558.242 209.528 558.065 209.785 cv
557.341 210.813 556.44 211.802 555.385 212.728 cv
555.036 213.033 554.32 213.116 553.793 212.913 cv
553.614 212.83 li
553.233 212.61 553.161 212.257 553.467 211.992 cv
cp
f
551.753 214.367 mo
552.204 214.627 552.207 215.047 551.758 215.308 cv
551.7 215.342 li
550.334 216.136 548.845 216.848 547.261 217.463 cv
546.801 217.642 546.192 217.602 545.812 217.381 cv
545.67 217.28 li
545.315 216.977 545.453 216.564 545.978 216.357 cv
547.438 215.791 548.812 215.135 550.064 214.407 cv
550.131 214.369 li
550.58 214.108 551.305 214.108 551.753 214.367 cv
cp
f
520.986 217.955 mo
521.307 218.139 521.424 218.424 521.244 218.68 cv
521.004 219.02 520.329 219.181 519.747 219.041 cv
517.974 218.618 516.261 218.087 514.662 217.471 cv
514.489 217.389 li
514.108 217.168 514.033 216.818 514.341 216.547 cv
514.693 216.244 515.403 216.161 515.933 216.366 cv
517.403 216.935 518.981 217.42 520.617 217.812 cv
520.759 217.846 520.884 217.895 520.986 217.955 cv
cp
f
542.817 218.167 mo
543.062 218.507 542.786 218.895 542.2 219.036 cv
540.434 219.46 538.583 219.785 536.702 220.002 cv
536.311 220.046 535.928 219.97 535.664 219.817 cv
535.509 219.728 535.396 219.613 535.35 219.477 cv
535.225 219.118 535.629 218.768 536.248 218.697 cv
537.982 218.497 539.69 218.197 541.316 217.807 cv
541.758 217.701 542.248 217.766 542.566 217.95 cv
542.671 218.01 542.757 218.083 542.817 218.167 cv
cp
f
531.787 219.192 mo
531.995 219.313 532.124 219.479 532.127 219.662 cv
532.126 220.029 531.613 220.327 530.982 220.327 cv
529.063 220.329 527.136 220.219 525.255 220.004 cv
525.024 219.979 524.822 219.913 524.667 219.823 cv
524.403 219.67 524.271 219.449 524.348 219.224 cv
524.469 218.861 525.069 218.627 525.692 218.7 cv
527.429 218.896 529.204 218.997 530.972 218.998 cv
531.289 218.998 531.577 219.072 531.787 219.192 cv
cp
f
529.912 187.466 mo
529.703 187.346 529.574 187.18 529.573 186.997 cv
529.568 186.629 530.081 186.332 530.715 186.33 cv
532.632 186.327 534.559 186.433 536.438 186.648 cv
536.672 186.674 536.875 186.739 537.031 186.83 cv
537.293 186.981 537.426 187.203 537.352 187.428 cv
537.231 187.787 536.628 188.022 536.005 187.953 cv
534.273 187.757 532.496 187.659 530.729 187.66 cv
530.406 187.66 530.12 187.586 529.912 187.466 cv
cp
f
504.316 200.292 mo
503.98 201.295 503.813 202.323 503.819 203.349 cv
503.824 203.716 503.312 204.014 502.681 204.014 cv
502.362 204.016 502.072 203.939 501.864 203.819 cv
501.656 203.699 501.526 203.533 501.525 203.351 cv
501.517 202.238 501.697 201.125 502.059 200.035 cv
502.18 199.676 502.783 199.44 503.403 199.511 cv
503.638 199.538 503.841 199.604 503.997 199.694 cv
504.259 199.845 504.391 200.066 504.316 200.292 cv
cp
f
511.808 214.409 mo
512.256 214.668 512.267 215.093 511.821 215.352 cv
511.373 215.613 510.657 215.618 510.205 215.357 cv
510.19 215.349 li
508.83 214.563 507.601 213.702 506.538 212.788 cv
506.183 212.485 506.32 212.072 506.846 211.865 cv
507.308 211.686 507.918 211.728 508.299 211.948 cv
508.439 212.046 li
509.42 212.889 510.553 213.685 511.808 214.409 cv
cp
f
566.232 203.429 mo
566.211 210.916 li
566.196 216.124 562.773 221.323 555.936 225.296 cv
542.173 233.295 519.784 233.296 505.931 225.298 cv
498.96 221.273 495.479 215.99 495.493 210.714 cv
495.515 203.228 li
495.5 208.503 498.981 213.787 505.952 217.812 cv
519.806 225.81 542.194 225.808 555.957 217.81 cv
562.795 213.836 566.217 208.637 566.232 203.429 cv
cp
f
gsave
444.328 334.206 mo
444.149 334.186 443.97 334.168 443.79 334.15 cv
442.93 334.06 442.07 334 441.2 333.94 cv
440.074 333.881 438.946 333.851 437.817 333.851 cv
436.841 333.851 435.864 333.874 434.89 333.92 cv
434.88 333.92 li
434.42 333.94 433.95 333.97 433.49 334 cv
433.51 328.26 li
433.51 328.36 433.51 328.47 433.519 328.57 cv
433.51 328.28 433.519 328 433.53 327.71 cv
433.54 327.53 433.55 327.34 433.57 327.16 cv
433.59 326.97 433.61 326.79 433.63 326.61 cv
433.66 326.42 433.69 326.24 433.72 326.059 cv
433.76 325.87 433.79 325.69 433.84 325.51 cv
433.9 325.24 li
433.92 325.14 433.95 325.05 433.98 324.96 cv
434.03 324.78 434.08 324.6 434.14 324.41 cv
434.151 324.375 434.163 324.34 434.175 324.305 cv
449.114 315.68 li
449.156 315.673 449.198 315.667 449.24 315.66 cv
449.25 315.66 li
450.85 315.41 452.46 315.21 454.1 315.07 cv
456.296 314.879 458.509 314.78 460.723 314.78 cv
461.522 314.78 462.322 314.793 463.12 314.819 cv
460.992 315.678 458.965 316.658 457.07 317.76 cv
449.194 322.333 444.948 328.215 444.328 334.206 cv
434.898 322.582 mo
434.988 322.401 435.081 322.22 435.18 322.04 cv
435.29 321.84 435.41 321.64 435.53 321.43 cv
435.78 321.03 436.05 320.64 436.33 320.25 cv
436.47 320.05 436.62 319.86 436.78 319.66 cv
436.91 319.5 437.04 319.34 437.17 319.19 cv
437.36 318.96 437.57 318.729 437.78 318.51 cv
440.345 317.6 443.036 316.858 445.81 316.281 cv
434.898 322.582 li
clp
433.49 314.78 mo
463.12 314.78 li
463.12 334.206 li
433.49 334.206 li
cp
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.698039 .529412 .184314 ]
/C1 [.698039 .529412 .184314 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.698039 .529412 .184314 ]
/C1 [.678431 .482353 .188235 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@8YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5
YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
~>
<~L5(G;L5(G;L5(G;L5(G;L5(G;L5(D9KnY57KnY57KnY57KnY57KnY56KS5#3KS5#3KS5#3KS5#3KS5#3
K7ef/K7ef/K7ef/K7ef/K7ef/K7ec-JqAT+JqAT+JqAT+JqAT+JqAT*JUrB'JUrB'JUrB'JUrB'JUrB'
J:N0#J:N0#J:N0#J:N0#J:N0#J:N-!It)rtIt)rtIt)rtIt)rtIt)rsIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
I=6NlI=6NlI=6NlI=6NlI=6NlI=6KjI!g<hI!g<hI!g<hI!g<hI!g<gH[C*dH[C*dH[C*dH[C*dH[C*d
~>
<~/h\k20/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
grestore
434.175 324.305 mo
434.295 323.951 434.425 323.605 434.58 323.25 cv
434.684 323.025 434.789 322.803 434.898 322.582 cv
445.81 316.281 li
446.899 316.055 448.002 315.855 449.114 315.68 cv
434.175 324.305 li
.839216 .607843 .2 rgb
f
473.1 356.16 mo
473.1 356.16 li
473.13 355.95 473.15 355.74 473.17 355.54 cv
473.19 355.29 li
473.22 355.019 473.23 354.74 473.23 354.47 cv
473.23 354.43 li
473.24 352.52 472.78 350.6 471.86 348.74 cv
471.27 347.54 470.49 346.37 469.52 345.25 cv
469.16 344.82 468.77 344.4 468.35 343.99 cv
466.84 342.51 464.99 341.12 462.79 339.85 cv
461.26 338.97 459.63 338.18 457.92 337.5 cv
456.52 336.94 455.07 336.44 453.57 336.01 cv
450.616 335.148 447.51 334.546 444.328 334.206 cv
444.948 328.215 449.194 322.333 457.07 317.76 cv
458.965 316.658 460.992 315.678 463.12 314.819 cv
463.13 314.82 463.14 314.82 463.15 314.82 cv
463.606 314.83 464.052 314.849 464.507 314.879 cv
461.683 318.27 460.573 322.02 461.172 325.698 cv
461.065 325.043 461.013 324.385 461.015 323.728 cv
460.993 331.214 li
460.978 336.49 464.46 341.773 471.431 345.798 cv
477.087 349.064 484.166 350.996 491.5 351.595 cv
491.497 351.596 491.494 351.598 491.49 351.6 cv
486.14 354.17 479.78 355.69 473.23 356.15 cv
473.227 356.151 li
473.232 354.43 li
473.231 355.007 473.187 355.584 473.101 356.16 cv
473.1 356.16 li
496.486 344.309 mo
496.484 344.309 496.482 344.309 496.48 344.309 cv
496.482 344.309 496.484 344.309 496.486 344.309 cv
496.486 344.309 li
496.492 344.309 mo
498.074 344.309 499.657 344.248 501.226 344.125 cv
501.226 344.126 li
499.657 344.248 498.074 344.309 496.492 344.309 cv
496.433 340.827 mo
496.429 340.827 496.425 340.827 496.422 340.827 cv
496.425 340.827 496.429 340.827 496.433 340.827 cv
496.433 340.827 li
491.057 340.538 mo
491.035 340.535 491.013 340.533 490.992 340.53 cv
491.013 340.533 491.035 340.535 491.057 340.538 cv
501.981 340.514 mo
501.979 340.514 501.976 340.514 501.974 340.514 cv
501.976 340.514 501.979 340.514 501.981 340.514 cv
501.981 340.514 li
501.983 340.514 mo
502.042 340.514 502.101 340.512 502.16 340.506 cv
502.101 340.512 502.042 340.514 501.983 340.514 cv
502.163 340.506 mo
502.176 340.505 502.189 340.503 502.202 340.502 cv
502.189 340.503 502.176 340.505 502.163 340.506 cv
502.29 340.492 mo
502.644 340.45 502.996 340.405 503.347 340.356 cv
503.347 340.356 li
502.996 340.405 502.644 340.45 502.29 340.492 cv
501.226 340.351 mo
501.226 340.351 501.226 340.351 501.226 340.35 cv
501.226 340.351 501.226 340.351 501.226 340.351 cv
501.211 340.343 mo
501.195 340.335 501.179 340.326 501.164 340.317 cv
501.179 340.326 501.195 340.335 501.211 340.343 cv
497.627 340.162 mo
497.624 339.978 497.495 339.813 497.287 339.692 cv
497.271 339.683 497.254 339.674 497.236 339.665 cv
497.254 339.674 497.271 339.683 497.287 339.692 cv
497.495 339.813 497.624 339.978 497.627 340.162 cv
497.627 340.162 li
489.826 339.849 mo
489.826 339.808 489.833 339.766 489.848 339.724 cv
489.85 339.717 489.852 339.711 489.855 339.704 cv
489.852 339.711 489.85 339.717 489.848 339.724 cv
489.833 339.766 489.826 339.808 489.826 339.849 cv
489.857 339.698 mo
489.979 339.395 490.44 339.189 490.959 339.187 cv
490.44 339.189 489.979 339.395 489.857 339.698 cv
485.683 339.591 mo
485.682 339.591 485.681 339.591 485.68 339.591 cv
485.681 339.591 485.682 339.591 485.683 339.591 cv
485.683 339.591 li
485.689 339.591 mo
486.124 339.59 486.539 339.445 486.728 339.201 cv
486.539 339.445 486.124 339.59 485.689 339.591 cv
496.493 339.498 mo
496.488 339.498 496.483 339.498 496.478 339.498 cv
496.478 339.498 li
496.483 339.498 496.488 339.498 496.493 339.498 cv
496.472 339.498 mo
494.704 339.496 492.929 339.396 491.192 339.2 cv
491.188 339.2 491.183 339.199 491.178 339.199 cv
491.183 339.199 491.188 339.2 491.192 339.2 cv
492.929 339.396 494.704 339.496 496.472 339.498 cv
496.472 339.498 li
496.472 339.498 li
486.733 339.195 mo
486.737 339.19 486.741 339.185 486.744 339.18 cv
486.741 339.185 486.737 339.19 486.733 339.195 cv
490.966 339.187 mo
490.966 339.187 490.965 339.187 490.965 339.187 cv
490.965 339.187 li
490.965 339.187 490.966 339.187 490.966 339.187 cv
486.829 338.929 mo
486.828 338.752 486.704 338.581 486.486 338.455 cv
486.384 338.396 486.259 338.346 486.117 338.312 cv
484.481 337.921 482.903 337.435 481.433 336.866 cv
481.428 336.864 481.423 336.862 481.418 336.861 cv
481.423 336.862 481.428 336.864 481.433 336.866 cv
482.903 337.435 484.481 337.921 486.117 338.312 cv
486.259 338.346 486.384 338.396 486.486 338.455 cv
486.704 338.581 486.828 338.752 486.829 338.929 cv
471.577 338.384 mo
471.572 338.381 471.567 338.378 471.562 338.375 cv
471.567 338.378 471.572 338.381 471.577 338.384 cv
471.452 338.312 mo
471.452 338.312 li
469.626 337.257 468.039 336.116 466.692 334.912 cv
468.039 336.116 469.626 337.257 471.452 338.312 cv
471.452 338.312 li
479.65 337.417 mo
479.649 337.29 479.711 337.161 479.841 337.047 cv
480.061 336.858 480.421 336.754 480.79 336.753 cv
480.421 336.754 480.061 336.858 479.841 337.047 cv
479.711 337.161 479.649 337.29 479.65 337.417 cv
481.41 336.858 mo
481.405 336.856 481.401 336.854 481.397 336.853 cv
481.401 336.854 481.405 336.856 481.41 336.858 cv
480.797 336.753 mo
480.796 336.753 480.795 336.753 480.794 336.753 cv
480.794 336.753 li
480.795 336.753 480.796 336.753 480.797 336.753 cv
476.506 336.051 mo
476.505 336.051 476.503 336.05 476.502 336.05 cv
476.503 336.05 476.505 336.051 476.506 336.051 cv
476.506 336.051 li
476.513 336.05 mo
476.782 336.05 477.051 335.993 477.267 335.882 cv
477.051 335.993 476.782 336.05 476.513 336.05 cv
477.269 335.881 mo
477.287 335.872 477.304 335.862 477.321 335.852 cv
477.304 335.862 477.287 335.872 477.269 335.881 cv
475.716 335.864 mo
475.713 335.862 475.709 335.86 475.705 335.857 cv
475.709 335.86 475.713 335.862 475.716 335.864 cv
477.65 335.388 mo
477.65 335.215 477.535 335.041 477.308 334.909 cv
476.053 334.185 474.92 333.39 473.939 332.546 cv
473.799 332.448 li
473.579 332.321 473.283 332.253 472.982 332.253 cv
472.983 332.253 472.983 332.253 472.983 332.253 cv
473.283 332.253 473.579 332.321 473.799 332.448 cv
473.939 332.546 li
474.92 333.39 476.053 334.185 477.308 334.909 cv
477.535 335.041 477.65 335.215 477.65 335.388 cv
466.691 334.911 mo
466.682 334.903 466.672 334.894 466.662 334.885 cv
466.672 334.894 466.682 334.902 466.691 334.911 cv
466.659 334.883 mo
466.65 334.874 466.642 334.867 466.632 334.858 cv
466.642 334.867 466.65 334.874 466.659 334.883 cv
466.63 334.856 mo
466.621 334.848 466.612 334.84 466.603 334.832 cv
466.613 334.841 466.621 334.848 466.63 334.856 cv
466.597 334.826 mo
466.589 334.819 466.581 334.812 466.573 334.805 cv
466.581 334.812 466.589 334.819 466.597 334.826 cv
466.567 334.8 mo
466.56 334.793 466.552 334.786 466.544 334.779 cv
466.552 334.785 466.56 334.793 466.567 334.8 cv
466.532 334.768 mo
466.526 334.762 466.521 334.757 466.515 334.752 cv
466.521 334.757 466.527 334.763 466.532 334.768 cv
466.501 334.739 mo
466.496 334.734 466.491 334.73 466.486 334.725 cv
466.491 334.73 466.496 334.735 466.501 334.739 cv
466.47 334.711 mo
466.466 334.707 466.461 334.703 466.456 334.698 cv
466.461 334.702 466.466 334.707 466.47 334.711 cv
466.436 334.68 mo
466.433 334.677 466.431 334.675 466.428 334.672 cv
466.431 334.675 466.433 334.677 466.436 334.68 cv
466.401 334.647 mo
466.4 334.646 466.399 334.646 466.399 334.645 cv
466.399 334.646 466.4 334.646 466.401 334.647 cv
494.989 333.655 mo
494.988 333.655 494.987 333.655 494.986 333.655 cv
494.987 333.655 494.988 333.655 494.989 333.655 cv
494.989 333.655 li
494.995 333.655 mo
497.264 333.654 499.322 333.149 501.132 332.144 cv
499.322 333.149 497.264 333.654 494.995 333.655 cv
484.47 333.22 mo
484.468 333.22 484.466 333.22 484.464 333.22 cv
484.466 333.22 484.468 333.22 484.47 333.22 cv
484.47 333.22 li
484.476 333.22 mo
484.836 333.219 485.196 333.141 485.474 332.986 cv
485.196 333.141 484.836 333.219 484.476 333.22 cv
483.464 332.987 mo
483.456 332.983 483.449 332.979 483.442 332.975 cv
483.449 332.979 483.456 332.983 483.464 332.987 cv
501.135 332.142 mo
501.159 332.129 501.183 332.116 501.207 332.102 cv
501.183 332.116 501.159 332.129 501.135 332.142 cv
501.273 332.064 mo
501.282 332.059 501.29 332.054 501.298 332.05 cv
501.29 332.054 501.282 332.059 501.273 332.064 cv
470.363 330.763 mo
470.361 330.763 470.359 330.763 470.356 330.763 cv
470.359 330.763 470.361 330.763 470.363 330.763 cv
470.363 330.763 li
470.368 330.763 mo
470.513 330.762 470.66 330.746 470.802 330.711 cv
470.66 330.746 470.513 330.762 470.368 330.763 cv
469.58 330.582 mo
469.571 330.577 469.562 330.572 469.553 330.567 cv
469.562 330.572 469.571 330.577 469.58 330.582 cv
471.51 330.102 mo
471.51 330.015 471.481 329.927 471.419 329.843 cv
470.739 328.9 470.213 327.911 469.859 326.904 cv
469.813 326.77 469.7 326.654 469.545 326.565 cv
469.538 326.56 469.53 326.556 469.523 326.552 cv
469.53 326.556 469.538 326.56 469.545 326.565 cv
469.7 326.654 469.813 326.77 469.859 326.904 cv
470.213 327.911 470.739 328.9 471.419 329.843 cv
471.481 329.927 471.51 330.015 471.51 330.102 cv
493.927 329.778 mo
493.858 329.778 493.788 329.776 493.717 329.773 cv
493.788 329.776 493.857 329.778 493.927 329.778 cv
494.651 329.778 495.299 329.599 495.935 329.23 cv
496.478 328.915 496.744 328.569 496.744 328.175 cv
496.744 328.569 496.478 328.915 495.935 329.23 cv
495.299 329.599 494.651 329.778 493.927 329.778 cv
493.705 329.772 mo
493.703 329.772 493.701 329.772 493.699 329.772 cv
493.701 329.772 493.703 329.772 493.705 329.772 cv
467.588 327.031 mo
467.588 326.721 467.965 326.445 468.507 326.383 cv
468.516 326.382 468.525 326.381 468.533 326.38 cv
468.525 326.381 468.516 326.382 468.507 326.383 cv
467.965 326.445 467.588 326.721 467.588 327.031 cv
468.535 326.38 mo
468.601 326.373 468.667 326.37 468.731 326.37 cv
468.667 326.37 468.601 326.373 468.535 326.38 cv
468.749 326.37 mo
468.744 326.37 468.739 326.37 468.734 326.37 cv
468.734 326.37 li
468.739 326.37 468.744 326.37 468.749 326.37 cv
461.205 325.889 mo
461.205 325.889 461.205 325.889 461.205 325.888 cv
461.205 325.889 461.205 325.889 461.205 325.889 cv
461.2 325.862 mo
461.2 325.861 461.199 325.859 461.199 325.857 cv
461.199 325.859 461.2 325.861 461.2 325.862 cv
461.195 325.833 mo
461.194 325.831 461.194 325.828 461.194 325.826 cv
461.194 325.828 461.194 325.831 461.195 325.833 cv
461.19 325.807 mo
461.19 325.803 461.189 325.798 461.188 325.794 cv
461.189 325.798 461.19 325.803 461.19 325.807 cv
461.186 325.781 mo
461.185 325.775 461.184 325.769 461.183 325.763 cv
461.184 325.768 461.185 325.775 461.186 325.781 cv
461.181 325.754 mo
461.18 325.746 461.179 325.739 461.178 325.731 cv
461.179 325.739 461.18 325.746 461.181 325.754 cv
461.177 325.726 mo
461.175 325.717 461.174 325.709 461.172 325.7 cv
461.174 325.709 461.175 325.717 461.177 325.726 cv
479.514 324.8 mo
479.512 323.733 480.068 322.672 481.178 321.631 cv
481.27 321.543 li
481.422 321.404 481.661 321.307 481.936 321.273 cv
481.972 321.268 482.008 321.265 482.044 321.263 cv
482.008 321.265 481.972 321.268 481.936 321.273 cv
481.661 321.307 481.422 321.404 481.27 321.543 cv
481.178 321.631 li
480.068 322.672 479.512 323.733 479.514 324.8 cv
468.169 324.514 mo
468.166 324.514 468.164 324.514 468.161 324.514 cv
468.164 324.514 468.166 324.514 468.169 324.514 cv
468.169 324.514 li
467.424 324.352 mo
467.42 324.35 467.416 324.348 467.412 324.346 cv
467.416 324.348 467.42 324.35 467.424 324.352 cv
467.401 324.34 mo
467.392 324.335 467.383 324.33 467.374 324.325 cv
467.383 324.33 467.392 324.335 467.401 324.34 cv
482.713 321.355 mo
482.712 321.355 482.711 321.354 482.71 321.354 cv
482.711 321.354 482.712 321.355 482.713 321.355 cv
482.052 321.262 mo
482.085 321.26 482.118 321.259 482.151 321.259 cv
482.118 321.259 482.085 321.26 482.052 321.262 cv
482.159 321.259 mo
482.157 321.259 482.156 321.259 482.154 321.259 cv
482.154 321.259 li
482.156 321.259 482.157 321.259 482.159 321.259 cv
469.837 320.666 mo
469.837 320.486 469.71 320.316 469.497 320.194 cv
469.341 320.104 469.138 320.038 468.903 320.012 cv
468.899 320.011 468.894 320.011 468.889 320.01 cv
468.894 320.011 468.899 320.011 468.903 320.012 cv
469.138 320.038 469.341 320.104 469.497 320.193 cv
469.71 320.316 469.837 320.486 469.837 320.666 cv
467.568 320.509 mo
467.57 320.504 467.572 320.5 467.574 320.495 cv
467.572 320.5 467.57 320.504 467.568 320.509 cv
467.58 320.483 mo
467.717 320.198 468.167 320.002 468.668 319.999 cv
468.167 320.002 467.717 320.198 467.58 320.483 cv
468.888 320.01 mo
468.877 320.009 468.866 320.008 468.855 320.007 cv
468.866 320.008 468.877 320.009 468.888 320.01 cv
468.682 319.999 mo
468.682 319.999 468.681 319.999 468.68 319.999 cv
468.68 319.999 li
468.681 319.999 468.682 319.999 468.682 319.999 cv
470.266 318.264 mo
470.265 318.264 470.264 318.264 470.263 318.264 cv
470.264 318.264 470.265 318.264 470.266 318.264 cv
470.266 318.264 li
470.277 318.264 mo
470.71 318.262 471.119 318.117 471.306 317.879 cv
471.119 318.117 470.71 318.262 470.277 318.264 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.686274 .490196 .164706 ]
/C1 [.686274 .490196 .164706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.686274 .490196 .164706 ]
/C1 [.682353 .478431 .164706 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
174 <~I!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<hI!g<h
I!g<hI!g<hI!g<hI!g<hI!g<hI!g9fH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*d
H[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*cH?sm`H?sm`H?sm`H?sm`H?sm`
H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`
~>
41 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
496.486 344.309 mo
496.484 344.309 496.482 344.309 496.48 344.309 cv
487.488 344.308 478.486 342.333 471.577 338.384 cv
471.572 338.381 471.567 338.378 471.562 338.375 cv
471.525 338.354 471.488 338.333 471.452 338.312 cv
471.452 338.312 li
469.626 337.257 468.039 336.116 466.692 334.912 cv
466.692 334.912 466.692 334.912 466.691 334.911 cv
466.682 334.902 466.672 334.894 466.662 334.885 cv
466.661 334.885 466.66 334.883 466.659 334.883 cv
466.65 334.874 466.642 334.867 466.632 334.858 cv
466.632 334.858 466.631 334.857 466.63 334.856 cv
466.621 334.848 466.613 334.841 466.603 334.832 cv
466.601 334.83 466.599 334.828 466.597 334.826 cv
466.589 334.819 466.581 334.812 466.573 334.805 cv
466.571 334.803 466.569 334.802 466.567 334.8 cv
466.56 334.793 466.552 334.785 466.544 334.779 cv
466.54 334.775 466.536 334.771 466.532 334.768 cv
466.527 334.763 466.521 334.757 466.515 334.752 cv
466.51 334.748 466.505 334.743 466.501 334.739 cv
466.496 334.735 466.491 334.73 466.486 334.725 cv
466.481 334.721 466.475 334.716 466.47 334.711 cv
466.466 334.707 466.461 334.702 466.456 334.698 cv
466.45 334.692 466.443 334.686 466.436 334.68 cv
466.433 334.677 466.431 334.675 466.428 334.672 cv
466.419 334.664 466.409 334.655 466.401 334.647 cv
466.4 334.646 466.399 334.646 466.399 334.645 cv
463.484 331.949 461.753 328.947 461.205 325.889 cv
461.205 325.889 461.205 325.889 461.205 325.888 cv
461.203 325.88 461.202 325.871 461.2 325.862 cv
461.2 325.861 461.199 325.859 461.199 325.857 cv
461.198 325.849 461.196 325.841 461.195 325.833 cv
461.194 325.831 461.194 325.828 461.194 325.826 cv
461.192 325.819 461.191 325.813 461.19 325.807 cv
461.19 325.803 461.189 325.798 461.188 325.794 cv
461.187 325.789 461.187 325.786 461.186 325.781 cv
461.185 325.775 461.184 325.768 461.183 325.763 cv
461.182 325.76 461.182 325.757 461.181 325.754 cv
461.18 325.746 461.179 325.739 461.178 325.731 cv
461.177 325.729 461.177 325.728 461.177 325.726 cv
461.175 325.717 461.174 325.709 461.172 325.7 cv
461.172 325.7 461.172 325.699 461.172 325.698 cv
460.573 322.02 461.683 318.27 464.507 314.879 cv
464.511 314.879 464.515 314.88 464.52 314.88 cv
466.618 314.979 468.715 315.169 470.783 315.449 cv
470.188 316.061 469.657 316.695 469.201 317.346 cv
469.143 317.427 469.115 317.512 469.114 317.595 cv
469.113 317.772 469.236 317.943 469.453 318.068 cv
469.559 318.129 469.685 318.178 469.828 318.214 cv
469.971 318.248 470.118 318.264 470.263 318.264 cv
470.264 318.264 470.265 318.264 470.266 318.264 cv
470.266 318.264 li
470.266 318.264 li
470.27 318.264 470.273 318.264 470.277 318.264 cv
470.71 318.262 471.119 318.117 471.306 317.879 cv
471.313 317.87 471.319 317.862 471.325 317.853 cv
471.823 317.145 472.415 316.457 473.089 315.8 cv
473.089 315.8 473.09 315.8 473.09 315.8 cv
479.795 316.919 486.131 318.988 491.489 321.994 cv
491.955 322.587 492.579 323.272 493.357 324.044 cv
495.417 326.08 li
495.508 326.166 495.588 326.253 495.667 326.335 cv
496.337 327.046 496.7 327.637 496.74 328.096 cv
496.743 328.122 496.744 328.149 496.744 328.175 cv
496.744 328.569 496.478 328.915 495.935 329.23 cv
495.299 329.599 494.651 329.778 493.927 329.778 cv
493.857 329.778 493.788 329.776 493.717 329.773 cv
493.713 329.773 493.709 329.772 493.705 329.772 cv
493.703 329.772 493.701 329.772 493.699 329.772 cv
493.593 329.767 493.485 329.758 493.376 329.745 cv
493.37 329.745 493.363 329.744 493.357 329.743 cv
492.69 329.665 491.927 329.439 491.08 329.079 cv
490.506 328.832 489.89 328.521 489.251 328.151 cv
488.77 327.874 488.365 327.617 488.017 327.361 cv
488.004 327.352 487.992 327.344 487.98 327.335 cv
487.207 326.776 486.694 326.245 486.452 325.753 cv
486.452 325.753 li
486.347 325.54 486.295 325.326 486.295 325.111 cv
486.295 324.672 486.514 324.231 486.95 323.793 cv
487.031 323.712 li
487.125 323.618 487.17 323.514 487.17 323.411 cv
487.17 323.255 487.065 323.101 486.866 322.985 cv
486.711 322.913 li
482.736 321.364 li
482.736 321.364 li
482.729 321.361 482.721 321.358 482.713 321.355 cv
482.712 321.355 482.711 321.354 482.71 321.354 cv
482.542 321.292 482.353 321.26 482.159 321.259 cv
482.157 321.259 482.156 321.259 482.154 321.259 cv
482.154 321.259 li
482.154 321.259 li
482.153 321.259 482.152 321.259 482.151 321.259 cv
482.118 321.259 482.085 321.26 482.052 321.262 cv
482.049 321.262 482.047 321.262 482.044 321.263 cv
482.008 321.265 481.972 321.268 481.936 321.273 cv
481.661 321.307 481.422 321.404 481.27 321.543 cv
481.178 321.631 li
480.068 322.672 479.512 323.733 479.514 324.8 cv
479.515 325.234 479.608 325.668 479.794 326.103 cv
480.265 327.205 481.385 328.372 483.128 329.573 cv
481.371 330.595 li
481.091 330.757 480.951 330.97 480.95 331.184 cv
480.949 331.4 481.092 331.617 481.378 331.783 cv
483.442 332.975 li
483.442 332.975 li
483.449 332.979 483.456 332.983 483.464 332.987 cv
483.743 333.141 484.103 333.219 484.464 333.22 cv
484.466 333.22 484.468 333.22 484.47 333.22 cv
484.47 333.22 li
484.47 333.22 li
484.472 333.22 484.474 333.22 484.476 333.22 cv
484.836 333.219 485.196 333.141 485.474 332.986 cv
485.48 332.982 485.487 332.978 485.493 332.975 cv
487.314 331.916 li
489.374 332.829 491.44 333.391 493.461 333.582 cv
493.979 333.631 494.488 333.655 494.986 333.655 cv
494.987 333.655 494.988 333.655 494.989 333.655 cv
494.989 333.655 li
494.989 333.655 li
494.991 333.655 494.993 333.655 494.995 333.655 cv
497.264 333.654 499.322 333.149 501.132 332.144 cv
501.133 332.143 501.134 332.143 501.135 332.142 cv
501.159 332.129 501.183 332.116 501.207 332.102 cv
501.229 332.089 501.251 332.077 501.273 332.064 cv
501.282 332.059 501.29 332.054 501.298 332.05 cv
501.309 332.043 501.32 332.037 501.33 332.031 cv
501.649 331.846 501.939 331.655 502.2 331.459 cv
502.2 331.46 li
502.59 332.05 502.94 332.64 503.24 333.24 cv
503.63 334.019 503.95 334.81 504.21 335.6 cv
504.55 336.629 504.78 337.669 504.9 338.718 cv
503.868 338.914 502.813 339.074 501.748 339.197 cv
501.204 339.259 500.826 339.537 500.827 339.848 cv
500.827 339.891 500.834 339.934 500.85 339.978 cv
500.896 340.112 501.009 340.227 501.164 340.317 cv
501.164 340.317 li
501.179 340.326 501.195 340.335 501.211 340.343 cv
501.216 340.345 501.221 340.348 501.226 340.35 cv
501.226 340.351 501.226 340.351 501.226 340.351 cv
501.431 340.453 501.694 340.513 501.974 340.514 cv
501.976 340.514 501.979 340.514 501.981 340.514 cv
501.981 340.514 li
501.981 340.514 li
501.982 340.514 501.983 340.514 501.983 340.514 cv
502.042 340.514 502.101 340.512 502.16 340.506 cv
502.161 340.506 502.162 340.506 502.163 340.506 cv
502.176 340.505 502.189 340.503 502.202 340.502 cv
502.202 340.502 li
502.231 340.498 502.261 340.495 502.29 340.492 cv
502.644 340.45 502.996 340.405 503.347 340.356 cv
502.868 341.634 502.159 342.902 501.23 344.12 cv
501.229 344.122 501.228 344.124 501.226 344.125 cv
499.657 344.248 498.074 344.309 496.492 344.309 cv
496.49 344.309 496.488 344.309 496.486 344.309 cv
496.433 340.827 mo
496.433 340.827 li
496.449 340.827 496.466 340.827 496.482 340.827 cv
497.113 340.827 497.626 340.529 497.627 340.162 cv
497.627 340.162 li
497.627 340.162 li
497.624 339.978 497.495 339.813 497.287 339.692 cv
497.271 339.683 497.254 339.674 497.236 339.665 cv
497.037 339.563 496.777 339.5 496.493 339.498 cv
496.488 339.498 496.483 339.498 496.478 339.498 cv
496.478 339.498 li
496.478 339.498 li
496.476 339.498 496.474 339.498 496.472 339.498 cv
496.472 339.498 li
494.704 339.496 492.929 339.396 491.192 339.2 cv
491.188 339.2 491.183 339.199 491.178 339.199 cv
491.107 339.191 491.036 339.187 490.966 339.187 cv
490.966 339.187 490.965 339.187 490.965 339.187 cv
490.965 339.187 li
490.965 339.187 li
490.963 339.187 490.961 339.187 490.959 339.187 cv
490.44 339.189 489.979 339.395 489.857 339.698 cv
489.856 339.7 489.855 339.702 489.855 339.704 cv
489.852 339.711 489.85 339.717 489.848 339.724 cv
489.833 339.766 489.826 339.808 489.826 339.849 cv
489.825 340.029 489.953 340.199 490.167 340.322 cv
490.322 340.412 490.524 340.479 490.755 340.504 cv
490.834 340.513 490.913 340.522 490.992 340.53 cv
491.013 340.533 491.035 340.535 491.057 340.538 cv
492.822 340.728 494.624 340.827 496.422 340.827 cv
496.425 340.827 496.429 340.827 496.433 340.827 cv
496.433 340.827 li
485.683 339.591 mo
485.683 339.591 li
485.685 339.591 485.687 339.591 485.689 339.591 cv
486.124 339.59 486.539 339.445 486.728 339.201 cv
486.73 339.199 486.732 339.197 486.733 339.195 cv
486.737 339.19 486.741 339.185 486.744 339.18 cv
486.744 339.18 li
486.802 339.098 486.829 339.013 486.829 338.929 cv
486.828 338.752 486.704 338.581 486.486 338.455 cv
486.384 338.396 486.259 338.346 486.117 338.312 cv
484.481 337.921 482.903 337.435 481.433 336.866 cv
481.428 336.864 481.423 336.862 481.418 336.861 cv
481.415 336.86 481.412 336.859 481.41 336.858 cv
481.405 336.856 481.401 336.854 481.397 336.853 cv
481.21 336.786 481.003 336.754 480.797 336.753 cv
480.796 336.753 480.795 336.753 480.794 336.753 cv
480.794 336.753 li
480.794 336.753 li
480.792 336.753 480.791 336.753 480.79 336.753 cv
480.421 336.754 480.061 336.858 479.841 337.047 cv
479.711 337.161 479.649 337.29 479.65 337.417 cv
479.651 337.59 479.769 337.761 479.989 337.889 cv
480.162 337.972 li
481.761 338.588 483.474 339.117 485.247 339.541 cv
485.388 339.575 485.535 339.591 485.68 339.591 cv
485.681 339.591 485.682 339.591 485.683 339.591 cv
485.683 339.591 li
476.506 336.051 mo
476.506 336.051 li
476.509 336.051 476.511 336.05 476.513 336.05 cv
476.782 336.05 477.051 335.993 477.267 335.882 cv
477.267 335.882 477.268 335.882 477.269 335.881 cv
477.287 335.872 477.304 335.862 477.321 335.852 cv
477.321 335.852 li
477.54 335.725 477.649 335.557 477.65 335.388 cv
477.65 335.215 477.535 335.041 477.308 334.909 cv
476.053 334.185 474.92 333.39 473.939 332.546 cv
473.799 332.448 li
473.579 332.321 473.283 332.253 472.983 332.253 cv
472.983 332.253 472.983 332.253 472.982 332.253 cv
472.982 332.253 472.982 332.253 472.982 332.253 cv
472.763 332.253 472.541 332.289 472.346 332.365 cv
472.346 332.365 li
472.017 332.494 471.84 332.704 471.841 332.917 cv
471.841 333.045 471.905 333.174 472.038 333.288 cv
473.101 334.202 474.33 335.064 475.69 335.849 cv
475.705 335.857 li
475.705 335.857 li
475.709 335.86 475.713 335.862 475.716 335.864 cv
475.938 335.988 476.22 336.05 476.502 336.05 cv
476.503 336.05 476.505 336.051 476.506 336.051 cv
476.506 336.051 li
470.363 330.763 mo
470.363 330.763 li
470.365 330.763 470.366 330.763 470.368 330.763 cv
470.513 330.762 470.66 330.746 470.802 330.711 cv
470.802 330.711 li
471.242 330.605 471.509 330.36 471.51 330.102 cv
471.51 330.015 471.481 329.927 471.419 329.843 cv
470.739 328.9 470.213 327.911 469.859 326.904 cv
469.813 326.77 469.7 326.654 469.545 326.565 cv
469.538 326.56 469.53 326.556 469.523 326.552 cv
469.317 326.44 469.042 326.372 468.749 326.37 cv
468.744 326.37 468.739 326.37 468.734 326.37 cv
468.734 326.37 li
468.734 326.37 li
468.733 326.37 468.732 326.37 468.731 326.37 cv
468.667 326.37 468.601 326.373 468.535 326.38 cv
468.535 326.38 468.534 326.38 468.533 326.38 cv
468.525 326.381 468.516 326.382 468.507 326.383 cv
467.965 326.445 467.588 326.721 467.588 327.031 cv
467.588 327.075 467.595 327.12 467.611 327.165 cv
467.994 328.257 468.565 329.328 469.304 330.352 cv
469.359 330.436 469.447 330.507 469.553 330.567 cv
469.553 330.567 li
469.562 330.572 469.571 330.577 469.58 330.582 cv
469.791 330.697 470.069 330.761 470.356 330.763 cv
470.359 330.763 470.361 330.763 470.363 330.763 cv
470.363 330.763 li
468.169 324.514 mo
468.169 324.514 li
468.173 324.514 468.177 324.514 468.181 324.514 cv
468.809 324.514 469.32 324.218 469.319 323.853 cv
469.319 323.852 469.319 323.85 469.319 323.849 cv
469.319 323.833 469.319 323.817 469.319 323.801 cv
469.319 322.791 469.486 321.78 469.816 320.792 cv
469.83 320.75 469.837 320.708 469.837 320.666 cv
469.837 320.486 469.71 320.316 469.497 320.193 cv
469.341 320.104 469.138 320.038 468.903 320.012 cv
468.899 320.011 468.894 320.011 468.889 320.01 cv
468.889 320.01 468.888 320.01 468.888 320.01 cv
468.877 320.009 468.866 320.008 468.855 320.007 cv
468.797 320.002 468.739 319.999 468.682 319.999 cv
468.682 319.999 468.681 319.999 468.68 319.999 cv
468.68 319.999 li
468.68 319.999 li
468.676 319.999 468.672 319.999 468.668 319.999 cv
468.167 320.002 467.717 320.198 467.58 320.483 cv
467.578 320.487 467.576 320.491 467.574 320.495 cv
467.572 320.5 467.57 320.504 467.568 320.509 cv
467.566 320.515 467.563 320.521 467.561 320.527 cv
467.56 320.529 467.559 320.532 467.559 320.534 cv
467.206 321.599 467.025 322.686 467.025 323.772 cv
467.025 323.798 467.025 323.825 467.025 323.851 cv
467.026 324.033 467.156 324.199 467.364 324.319 cv
467.368 324.321 467.371 324.323 467.374 324.325 cv
467.383 324.33 467.392 324.335 467.401 324.34 cv
467.405 324.342 467.409 324.344 467.412 324.346 cv
467.416 324.348 467.42 324.35 467.424 324.352 cv
467.622 324.451 467.88 324.513 468.161 324.514 cv
468.164 324.514 468.166 324.514 468.169 324.514 cv
468.169 324.514 li
.839216 .596078 .101961 rgb
f
466.533 350.717 mo
466.296 350.095 466 349.48 465.645 348.877 cv
466.004 349.479 466.302 350.094 466.533 350.717 cv
463.917 350.134 mo
463.909 350.129 463.903 350.124 463.896 350.119 cv
463.646 349.573 463.328 349.037 462.96 348.51 cv
462.864 348.369 li
463.275 348.943 463.627 349.534 463.917 350.134 cv
465.484 348.611 mo
465.39 348.458 465.291 348.307 465.189 348.157 cv
465.292 348.307 465.391 348.458 465.484 348.611 cv
462.721 348.089 mo
462.676 347.809 462.944 347.533 463.42 347.42 cv
463.564 347.384 463.713 347.367 463.859 347.367 cv
463.929 347.367 463.999 347.371 464.068 347.378 cv
464.001 347.371 463.933 347.368 463.865 347.368 cv
463.717 347.368 463.566 347.385 463.421 347.42 cv
462.948 347.533 462.68 347.809 462.721 348.089 cv
464.857 347.7 mo
464.808 347.651 464.749 347.607 464.683 347.567 cv
464.752 347.606 464.809 347.65 464.857 347.7 cv
461.23 345.883 mo
460.932 345.883 460.638 345.816 460.42 345.69 cv
460.28 345.59 li
459.66 345.06 458.99 344.56 458.269 344.08 cv
457.85 343.79 457.4 343.519 456.94 343.25 cv
456.928 343.243 li
456.939 343.249 li
458.18 343.965 459.304 344.752 460.281 345.587 cv
460.422 345.686 li
460.642 345.813 460.939 345.88 461.239 345.88 cv
461.421 345.88 461.603 345.855 461.771 345.804 cv
461.601 345.858 461.414 345.883 461.23 345.883 cv
462.289 344.96 mo
462.26 344.92 462.223 344.881 462.18 344.844 cv
461.904 344.608 461.617 344.375 461.319 344.147 cv
461.616 344.374 461.904 344.605 462.18 344.84 cv
462.223 344.879 462.26 344.919 462.289 344.96 cv
456.639 343.007 mo
456.534 342.867 456.517 342.713 456.587 342.57 cv
456.52 342.714 456.537 342.868 456.639 343.007 cv
458.951 342.543 mo
458.815 342.461 458.677 342.38 458.538 342.3 cv
458.528 342.294 li
458.54 342.3 li
458.678 342.38 458.816 342.461 458.951 342.543 cv
453.401 341.388 mo
453.318 341.388 453.235 341.383 453.153 341.371 cv
453.238 341.382 453.323 341.387 453.409 341.387 cv
453.461 341.387 453.513 341.385 453.565 341.381 cv
453.51 341.386 453.456 341.388 453.401 341.388 cv
453.869 341.332 mo
454.014 341.295 454.147 341.241 454.258 341.17 cv
454.148 341.243 454.014 341.3 453.869 341.332 cv
452.803 341.287 mo
452.769 341.28 li
451.85 340.92 450.88 340.6 449.88 340.31 cv
449.797 340.284 449.714 340.259 449.631 340.235 cv
450.717 340.541 451.768 340.889 452.772 341.275 cv
452.783 341.279 452.793 341.283 452.803 341.287 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
423.224 340.687 mo
423.21 340.62 423.179 340.554 423.129 340.49 cv
423.179 340.554 423.211 340.62 423.224 340.687 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
454.55 340.661 mo
454.525 340.509 454.41 340.363 454.217 340.252 cv
454.097 340.195 li
454.22 340.25 li
454.414 340.362 454.527 340.509 454.55 340.661 cv
503.678 340.309 mo
503.719 340.303 503.759 340.297 503.8 340.291 cv
503.798 340.291 503.796 340.291 503.795 340.291 cv
503.757 340.297 503.72 340.302 503.683 340.308 cv
503.681 340.308 503.68 340.308 503.678 340.309 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
503.683 340.308 mo
503.72 340.302 503.757 340.297 503.795 340.291 cv
503.758 340.297 503.72 340.303 503.683 340.308 cv
.839216 .596078 .101961 rgb
f
504.575 340.168 mo
504.713 340.145 504.852 340.121 504.99 340.097 cv
504.99 340.097 504.99 340.097 504.99 340.097 cv
504.853 340.121 504.715 340.145 504.577 340.168 cv
504.576 340.168 504.575 340.168 504.575 340.168 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
504.577 340.168 mo
504.715 340.145 504.853 340.121 504.99 340.097 cv
504.99 340.098 504.99 340.099 504.99 340.1 cv
504.852 340.125 504.715 340.147 504.577 340.168 cv
.839216 .596078 .101961 rgb
f
426.949 339.913 mo
426.643 339.913 426.346 339.842 426.13 339.72 cv
426.03 339.66 425.94 339.58 425.88 339.5 cv
425.64 339.16 425.91 338.769 426.5 338.63 cv
426.62 338.601 426.74 338.573 426.861 338.546 cv
426.739 338.574 426.618 338.603 426.497 338.632 cv
425.914 338.773 425.641 339.163 425.883 339.502 cv
425.944 339.585 426.029 339.657 426.132 339.717 cv
426.348 339.841 426.643 339.911 426.947 339.911 cv
427.094 339.911 427.243 339.895 427.387 339.86 cv
429.016 339.468 430.72 339.166 432.452 338.965 cv
432.59 338.949 432.717 338.919 432.83 338.879 cv
432.716 338.921 432.588 338.952 432.45 338.97 cv
430.72 339.17 429.02 339.47 427.39 339.86 cv
427.246 339.896 427.096 339.913 426.949 339.913 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
453.062 339.808 mo
451.75 339.345 450.371 338.941 448.953 338.604 cv
448.811 338.571 448.664 338.555 448.519 338.555 cv
448.357 338.555 448.198 338.575 448.052 338.612 cv
448.178 338.578 448.313 338.556 448.45 338.55 cv
448.62 338.55 448.79 338.56 448.95 338.6 cv
450.372 338.944 451.75 339.344 453.062 339.808 cv
447.778 339.725 mo
447.755 339.714 447.732 339.702 447.71 339.69 cv
447.549 339.6 447.442 339.482 447.397 339.355 cv
447.443 339.481 447.552 339.598 447.711 339.689 cv
447.732 339.702 447.755 339.714 447.778 339.725 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
441.504 338.808 mo
440.479 338.729 439.445 338.684 438.41 338.67 cv
438.39 338.67 li
438.17 338.66 437.95 338.66 437.73 338.66 cv
437.73 338.66 437.73 338.66 437.73 338.66 cv
437.747 338.66 437.763 338.66 437.779 338.66 cv
439.023 338.66 440.271 338.71 441.504 338.808 cv
443.973 338.804 mo
444.08 338.752 444.17 338.688 444.237 338.615 cv
444.17 338.688 444.08 338.752 443.973 338.804 cv
437.643 338.658 mo
437.642 338.658 437.641 338.658 437.641 338.658 cv
437.641 338.658 437.642 338.658 437.643 338.658 cv
437.635 338.658 mo
437.352 338.645 437.099 338.578 436.91 338.47 cv
436.7 338.35 436.57 338.18 436.57 338 cv
436.57 337.951 436.58 337.903 436.597 337.856 cv
436.581 337.901 436.573 337.949 436.573 337.997 cv
436.574 338.18 436.703 338.346 436.912 338.466 cv
437.1 338.574 437.351 338.645 437.635 338.658 cv
433.287 338.565 mo
433.37 338.448 433.395 338.316 433.348 338.183 cv
433.302 338.05 433.188 337.934 433.033 337.844 cv
432.915 337.775 432.773 337.723 432.617 337.689 cv
432.773 337.722 432.913 337.773 433.03 337.84 cv
433.19 337.93 433.3 338.05 433.35 338.18 cv
433.398 338.314 433.372 338.447 433.287 338.565 cv
444.372 338.322 mo
444.378 338.181 444.307 338.045 444.177 337.933 cv
444.307 338.044 444.38 338.179 444.372 338.322 cv
430.738 337.824 mo
431.153 337.764 431.571 337.709 431.99 337.66 cv
432.052 337.654 432.113 337.65 432.174 337.649 cv
432.114 337.651 432.054 337.655 431.994 337.662 cv
431.574 337.71 431.155 337.764 430.738 337.824 cv
443.775 337.718 mo
443.699 337.694 443.618 337.675 443.532 337.661 cv
443.618 337.674 443.699 337.693 443.775 337.718 cv
437.248 337.388 mo
437.389 337.346 437.545 337.33 437.71 337.33 cv
437.711 337.33 437.713 337.33 437.714 337.33 cv
437.548 337.33 437.39 337.351 437.248 337.388 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
494.989 333.655 mo
494.989 333.655 li
494.988 333.655 494.987 333.655 494.986 333.655 cv
494.488 333.655 493.979 333.631 493.461 333.582 cv
491.44 333.391 489.374 332.829 487.314 331.916 cv
485.493 332.975 li
485.487 332.978 485.48 332.982 485.474 332.986 cv
485.196 333.141 484.836 333.219 484.476 333.22 cv
484.474 333.22 484.472 333.22 484.47 333.22 cv
484.47 333.22 li
484.468 333.22 484.466 333.22 484.464 333.22 cv
484.103 333.219 483.743 333.141 483.464 332.987 cv
483.456 332.983 483.449 332.979 483.442 332.975 cv
483.442 332.975 li
481.378 331.783 li
481.092 331.617 480.949 331.4 480.95 331.184 cv
480.951 330.97 481.091 330.757 481.371 330.595 cv
483.128 329.573 li
483.128 329.573 li
481.385 328.372 480.265 327.205 479.794 326.103 cv
479.608 325.668 479.515 325.234 479.514 324.8 cv
479.512 323.733 480.068 322.672 481.178 321.631 cv
481.27 321.543 li
481.422 321.404 481.661 321.307 481.936 321.273 cv
481.972 321.268 482.008 321.265 482.044 321.263 cv
482.047 321.262 482.049 321.262 482.052 321.262 cv
482.085 321.26 482.118 321.259 482.151 321.259 cv
482.152 321.259 482.153 321.259 482.154 321.259 cv
482.154 321.259 li
482.156 321.259 482.157 321.259 482.159 321.259 cv
482.353 321.26 482.542 321.292 482.71 321.354 cv
482.711 321.354 482.712 321.355 482.713 321.355 cv
482.721 321.358 482.729 321.361 482.736 321.364 cv
482.736 321.364 li
486.711 322.913 li
486.866 322.985 li
487.065 323.101 487.17 323.255 487.17 323.411 cv
487.17 323.514 487.125 323.618 487.031 323.712 cv
486.95 323.793 li
486.514 324.231 486.295 324.672 486.295 325.111 cv
486.295 325.326 486.347 325.54 486.452 325.753 cv
486.452 325.753 li
486.694 326.245 487.207 326.776 487.98 327.335 cv
487.992 327.344 488.004 327.352 488.017 327.361 cv
488.365 327.617 488.77 327.874 489.251 328.151 cv
489.89 328.521 490.506 328.832 491.08 329.079 cv
491.927 329.439 492.69 329.665 493.357 329.743 cv
493.363 329.744 493.37 329.745 493.376 329.745 cv
493.485 329.758 493.593 329.767 493.699 329.772 cv
493.701 329.772 493.703 329.772 493.705 329.772 cv
493.709 329.772 493.713 329.773 493.717 329.773 cv
493.788 329.776 493.858 329.778 493.927 329.778 cv
494.651 329.778 495.299 329.599 495.935 329.23 cv
496.478 328.915 496.744 328.569 496.744 328.175 cv
496.744 328.149 496.743 328.122 496.74 328.096 cv
496.7 327.637 496.337 327.046 495.667 326.335 cv
495.588 326.253 495.508 326.166 495.417 326.08 cv
493.357 324.044 li
492.579 323.272 491.955 322.587 491.489 321.994 cv
491.493 321.996 491.496 321.998 491.5 322 cv
491.66 322.08 491.81 322.17 491.97 322.26 cv
493.01 322.86 493.99 323.479 494.9 324.13 cv
495.63 324.63 496.32 325.16 496.96 325.7 cv
499.16 327.5 500.91 329.44 502.2 331.45 cv
502.2 331.459 li
501.939 331.655 501.649 331.846 501.33 332.031 cv
501.32 332.037 501.309 332.043 501.298 332.05 cv
501.29 332.054 501.282 332.059 501.273 332.064 cv
501.251 332.077 501.229 332.089 501.207 332.102 cv
501.183 332.116 501.159 332.129 501.135 332.142 cv
501.134 332.143 501.133 332.143 501.132 332.144 cv
499.322 333.149 497.264 333.654 494.995 333.655 cv
494.993 333.655 494.991 333.655 494.989 333.655 cv
.835294 .560784 .0509804 rgb
f
470.266 318.264 mo
470.266 318.264 li
470.265 318.264 470.264 318.264 470.263 318.264 cv
470.118 318.264 469.971 318.248 469.828 318.214 cv
469.685 318.178 469.559 318.129 469.453 318.068 cv
469.236 317.943 469.113 317.772 469.114 317.595 cv
469.115 317.512 469.143 317.427 469.201 317.346 cv
469.657 316.695 470.188 316.061 470.783 315.449 cv
470.786 315.45 470.788 315.45 470.79 315.45 cv
471.559 315.55 472.329 315.67 473.089 315.8 cv
472.415 316.457 471.823 317.145 471.325 317.853 cv
471.319 317.862 471.313 317.87 471.306 317.879 cv
471.119 318.117 470.71 318.262 470.277 318.264 cv
470.273 318.264 470.27 318.264 470.266 318.264 cv
f
470.363 330.763 mo
470.363 330.763 li
470.361 330.763 470.359 330.763 470.356 330.763 cv
470.069 330.761 469.791 330.697 469.58 330.582 cv
469.571 330.577 469.562 330.572 469.553 330.567 cv
469.553 330.567 li
469.447 330.507 469.359 330.436 469.304 330.352 cv
468.565 329.328 467.994 328.257 467.611 327.165 cv
467.595 327.12 467.588 327.075 467.588 327.031 cv
467.588 326.721 467.965 326.445 468.507 326.383 cv
468.516 326.382 468.525 326.381 468.533 326.38 cv
468.534 326.38 468.535 326.38 468.535 326.38 cv
468.601 326.373 468.667 326.37 468.731 326.37 cv
468.732 326.37 468.733 326.37 468.734 326.37 cv
468.734 326.37 li
468.739 326.37 468.744 326.37 468.749 326.37 cv
469.042 326.372 469.317 326.44 469.523 326.552 cv
469.53 326.556 469.538 326.56 469.545 326.565 cv
469.7 326.654 469.813 326.77 469.859 326.904 cv
470.213 327.911 470.739 328.9 471.419 329.843 cv
471.481 329.927 471.51 330.015 471.51 330.102 cv
471.509 330.36 471.242 330.605 470.802 330.711 cv
470.802 330.711 li
470.66 330.746 470.513 330.762 470.368 330.763 cv
470.366 330.763 470.365 330.763 470.363 330.763 cv
f
485.683 339.591 mo
485.683 339.591 li
485.682 339.591 485.681 339.591 485.68 339.591 cv
485.535 339.591 485.388 339.575 485.247 339.541 cv
483.474 339.117 481.761 338.588 480.162 337.972 cv
479.989 337.889 li
479.769 337.761 479.651 337.59 479.65 337.417 cv
479.649 337.29 479.711 337.161 479.841 337.047 cv
480.061 336.858 480.421 336.754 480.79 336.753 cv
480.791 336.753 480.792 336.753 480.794 336.753 cv
480.794 336.753 li
480.795 336.753 480.796 336.753 480.797 336.753 cv
481.003 336.754 481.21 336.786 481.397 336.853 cv
481.401 336.854 481.405 336.856 481.41 336.858 cv
481.412 336.859 481.415 336.86 481.418 336.861 cv
481.423 336.862 481.428 336.864 481.433 336.866 cv
482.903 337.435 484.481 337.921 486.117 338.312 cv
486.259 338.346 486.384 338.396 486.486 338.455 cv
486.704 338.581 486.828 338.752 486.829 338.929 cv
486.829 339.013 486.802 339.098 486.744 339.18 cv
486.744 339.18 li
486.741 339.185 486.737 339.19 486.733 339.195 cv
486.732 339.197 486.73 339.199 486.728 339.201 cv
486.539 339.445 486.124 339.59 485.689 339.591 cv
485.687 339.591 485.685 339.591 485.683 339.591 cv
f
501.981 340.514 mo
501.981 340.514 li
501.979 340.514 501.976 340.514 501.974 340.514 cv
501.694 340.513 501.431 340.453 501.226 340.351 cv
501.226 340.351 501.226 340.351 501.226 340.35 cv
501.221 340.348 501.216 340.345 501.211 340.343 cv
501.195 340.335 501.179 340.326 501.164 340.317 cv
501.164 340.317 li
501.009 340.227 500.896 340.112 500.85 339.978 cv
500.834 339.934 500.827 339.891 500.827 339.848 cv
500.826 339.537 501.204 339.259 501.748 339.197 cv
502.813 339.074 503.868 338.914 504.9 338.718 cv
504.9 338.719 504.9 338.719 504.9 338.72 cv
504.95 339.179 504.99 339.638 504.99 340.097 cv
504.852 340.121 504.713 340.145 504.575 340.168 cv
504.433 340.19 504.292 340.21 504.15 340.23 cv
504.035 340.252 503.918 340.272 503.8 340.291 cv
503.759 340.297 503.719 340.303 503.678 340.309 cv
503.569 340.324 503.459 340.338 503.35 340.35 cv
503.349 340.352 503.348 340.354 503.347 340.356 cv
502.996 340.405 502.644 340.45 502.29 340.492 cv
502.261 340.495 502.231 340.498 502.202 340.502 cv
502.202 340.502 li
502.189 340.503 502.176 340.505 502.163 340.506 cv
502.162 340.506 502.161 340.506 502.16 340.506 cv
502.101 340.512 502.042 340.514 501.983 340.514 cv
501.983 340.514 501.982 340.514 501.981 340.514 cv
f
496.433 340.827 mo
496.433 340.827 li
496.429 340.827 496.425 340.827 496.422 340.827 cv
494.624 340.827 492.822 340.728 491.057 340.538 cv
491.035 340.535 491.013 340.533 490.992 340.53 cv
490.913 340.522 490.834 340.513 490.755 340.504 cv
490.524 340.479 490.322 340.412 490.167 340.322 cv
489.953 340.199 489.825 340.029 489.826 339.849 cv
489.826 339.808 489.833 339.766 489.848 339.724 cv
489.85 339.717 489.852 339.711 489.855 339.704 cv
489.855 339.702 489.856 339.7 489.857 339.698 cv
489.979 339.395 490.44 339.189 490.959 339.187 cv
490.961 339.187 490.963 339.187 490.965 339.187 cv
490.965 339.187 li
490.965 339.187 490.966 339.187 490.966 339.187 cv
491.036 339.187 491.107 339.191 491.178 339.199 cv
491.183 339.199 491.188 339.2 491.192 339.2 cv
492.929 339.396 494.704 339.496 496.472 339.498 cv
496.472 339.498 li
496.474 339.498 496.476 339.498 496.478 339.498 cv
496.478 339.498 li
496.483 339.498 496.488 339.498 496.493 339.498 cv
496.777 339.5 497.037 339.563 497.236 339.665 cv
497.254 339.674 497.271 339.683 497.287 339.692 cv
497.495 339.813 497.624 339.978 497.627 340.162 cv
497.627 340.162 li
497.626 340.529 497.113 340.827 496.482 340.827 cv
496.466 340.827 496.449 340.827 496.433 340.827 cv
f
468.169 324.514 mo
468.169 324.514 li
468.166 324.514 468.164 324.514 468.161 324.514 cv
467.88 324.513 467.622 324.451 467.424 324.352 cv
467.42 324.35 467.416 324.348 467.412 324.346 cv
467.409 324.344 467.405 324.342 467.401 324.34 cv
467.392 324.335 467.383 324.33 467.374 324.325 cv
467.371 324.323 467.368 324.321 467.364 324.319 cv
467.156 324.199 467.026 324.033 467.025 323.851 cv
467.025 323.825 467.025 323.798 467.025 323.772 cv
467.025 322.686 467.206 321.599 467.559 320.534 cv
467.559 320.532 467.56 320.529 467.561 320.527 cv
467.563 320.521 467.566 320.515 467.568 320.509 cv
467.57 320.504 467.572 320.5 467.574 320.495 cv
467.576 320.491 467.578 320.487 467.58 320.483 cv
467.717 320.198 468.167 320.002 468.668 319.999 cv
468.672 319.999 468.676 319.999 468.68 319.999 cv
468.68 319.999 li
468.681 319.999 468.682 319.999 468.682 319.999 cv
468.739 319.999 468.797 320.002 468.855 320.007 cv
468.866 320.008 468.877 320.009 468.888 320.01 cv
468.888 320.01 468.889 320.01 468.889 320.01 cv
468.894 320.011 468.899 320.011 468.903 320.012 cv
469.138 320.038 469.341 320.104 469.497 320.194 cv
469.71 320.316 469.837 320.486 469.837 320.666 cv
469.837 320.708 469.83 320.75 469.816 320.792 cv
469.486 321.78 469.319 322.791 469.319 323.801 cv
469.319 323.817 469.319 323.833 469.319 323.849 cv
469.319 323.85 469.319 323.852 469.319 323.853 cv
469.32 324.218 468.809 324.514 468.181 324.514 cv
468.177 324.514 468.173 324.514 468.169 324.514 cv
f
476.506 336.051 mo
476.506 336.051 li
476.505 336.051 476.503 336.05 476.502 336.05 cv
476.22 336.05 475.938 335.988 475.716 335.864 cv
475.713 335.862 475.709 335.86 475.705 335.857 cv
475.705 335.857 li
475.69 335.849 li
474.33 335.064 473.101 334.202 472.038 333.288 cv
471.905 333.174 471.841 333.045 471.841 332.917 cv
471.84 332.704 472.017 332.494 472.346 332.365 cv
472.346 332.365 li
472.541 332.289 472.763 332.253 472.982 332.253 cv
472.982 332.253 472.982 332.253 472.982 332.253 cv
473.283 332.253 473.579 332.321 473.799 332.448 cv
473.939 332.546 li
474.92 333.39 476.053 334.185 477.308 334.909 cv
477.535 335.041 477.65 335.215 477.65 335.388 cv
477.649 335.557 477.54 335.725 477.321 335.852 cv
477.321 335.852 li
477.304 335.862 477.287 335.872 477.269 335.881 cv
477.268 335.882 477.267 335.882 477.267 335.882 cv
477.051 335.993 476.782 336.05 476.513 336.05 cv
476.511 336.05 476.509 336.051 476.506 336.051 cv
f
491.5 351.595 mo
484.166 350.996 477.087 349.064 471.431 345.798 cv
464.46 341.773 460.978 336.49 460.993 331.214 cv
461.015 323.728 li
461.013 324.385 461.065 325.043 461.172 325.698 cv
461.172 325.699 461.172 325.7 461.172 325.7 cv
461.174 325.709 461.175 325.717 461.177 325.726 cv
461.177 325.728 461.177 325.729 461.178 325.731 cv
461.179 325.739 461.18 325.746 461.181 325.754 cv
461.182 325.757 461.182 325.76 461.183 325.763 cv
461.184 325.769 461.185 325.775 461.186 325.781 cv
461.187 325.786 461.187 325.789 461.188 325.794 cv
461.189 325.798 461.19 325.803 461.19 325.807 cv
461.191 325.813 461.192 325.819 461.194 325.826 cv
461.194 325.828 461.194 325.831 461.195 325.833 cv
461.196 325.841 461.198 325.849 461.199 325.857 cv
461.199 325.859 461.2 325.861 461.2 325.862 cv
461.202 325.871 461.203 325.88 461.205 325.888 cv
461.205 325.889 461.205 325.889 461.205 325.889 cv
461.753 328.947 463.484 331.949 466.399 334.645 cv
466.399 334.646 466.4 334.646 466.401 334.647 cv
466.409 334.655 466.419 334.664 466.428 334.672 cv
466.431 334.675 466.433 334.677 466.436 334.68 cv
466.443 334.686 466.45 334.692 466.456 334.698 cv
466.461 334.703 466.466 334.707 466.47 334.711 cv
466.475 334.716 466.481 334.721 466.486 334.725 cv
466.491 334.73 466.496 334.734 466.501 334.739 cv
466.505 334.743 466.51 334.748 466.515 334.752 cv
466.521 334.757 466.526 334.762 466.532 334.768 cv
466.536 334.771 466.54 334.775 466.544 334.779 cv
466.552 334.786 466.56 334.793 466.567 334.8 cv
466.569 334.802 466.571 334.803 466.573 334.805 cv
466.581 334.812 466.589 334.819 466.597 334.826 cv
466.599 334.828 466.601 334.83 466.603 334.832 cv
466.612 334.84 466.621 334.848 466.63 334.856 cv
466.631 334.857 466.632 334.858 466.632 334.858 cv
466.642 334.867 466.65 334.874 466.659 334.883 cv
466.66 334.883 466.661 334.885 466.662 334.885 cv
466.672 334.894 466.682 334.903 466.691 334.911 cv
466.692 334.912 466.692 334.912 466.692 334.912 cv
468.039 336.116 469.626 337.257 471.452 338.312 cv
471.452 338.312 li
471.488 338.333 471.525 338.354 471.562 338.375 cv
471.567 338.378 471.572 338.381 471.577 338.384 cv
478.486 342.333 487.488 344.308 496.48 344.309 cv
496.482 344.309 496.484 344.309 496.486 344.309 cv
496.486 344.309 li
496.488 344.309 496.49 344.309 496.492 344.309 cv
498.074 344.309 499.657 344.248 501.226 344.126 cv
499.526 346.364 497.097 348.461 493.94 350.3 cv
493.154 350.758 492.337 351.187 491.5 351.595 cv
f
456.473 365.741 mo
456.472 365.74 456.471 365.74 456.47 365.74 cv
456.47 365.74 li
456.47 365.74 li
456.654 365.639 456.838 365.537 457.014 365.436 cv
456.836 365.539 456.656 365.641 456.473 365.741 cv
461.429 364.025 mo
461.349 364.025 461.269 364.02 461.19 364.01 cv
461.269 364.02 461.349 364.024 461.428 364.024 cv
461.8 364.024 462.165 363.92 462.385 363.729 cv
462.725 363.43 463.049 363.125 463.356 362.814 cv
463.05 363.125 462.728 363.43 462.39 363.729 cv
462.17 363.919 461.803 364.025 461.429 364.025 cv
460.703 363.871 mo
460.61 363.83 li
460.345 363.677 460.231 363.46 460.291 363.251 cv
460.233 363.458 460.349 363.676 460.614 363.83 cv
460.703 363.871 li
441.42 363.229 mo
441.419 363.229 441.418 363.229 441.416 363.229 cv
441.544 363.176 441.67 363.122 441.795 363.065 cv
441.671 363.122 441.546 363.177 441.42 363.229 cv
441.42 363.229 li
443.074 362.385 mo
443.375 362.199 443.647 362.007 443.89 361.811 cv
443.649 362.011 443.375 362.2 443.074 362.385 cv
444.451 361.299 mo
444.461 361.288 444.471 361.277 444.482 361.267 cv
444.478 361.271 444.474 361.276 444.47 361.28 cv
444.464 361.286 444.457 361.293 444.451 361.299 cv
464.768 361.192 mo
464.87 361.057 464.969 360.921 465.065 360.784 cv
465.242 360.528 465.128 360.245 464.809 360.061 cv
464.783 360.046 464.756 360.032 464.728 360.018 cv
464.756 360.031 464.783 360.045 464.81 360.06 cv
465.13 360.24 465.24 360.53 465.07 360.78 cv
464.972 360.918 464.871 361.055 464.768 361.192 cv
471.25 361.16 mo
471.25 361.16 li
471.341 361.006 471.43 360.852 471.516 360.698 cv
471.431 360.852 471.343 361.006 471.25 361.16 cv
471.25 361.16 li
471.725 360.311 mo
471.74 360.281 471.756 360.251 471.772 360.221 cv
471.757 360.251 471.741 360.281 471.725 360.311 cv
435.427 360.278 mo
435.242 360.278 435.053 360.266 434.857 360.243 cv
434.736 360.229 434.612 360.21 434.485 360.186 cv
434.613 360.209 434.738 360.227 434.86 360.24 cv
435.059 360.265 435.252 360.278 435.439 360.278 cv
435.466 360.278 435.493 360.277 435.52 360.277 cv
435.489 360.277 435.458 360.278 435.427 360.278 cv
436.271 360.19 mo
436.672 360.102 437.054 359.949 437.43 359.729 cv
437.864 359.475 438.125 359.204 438.211 358.907 cv
438.126 359.207 437.869 359.478 437.435 359.731 cv
437.056 359.95 436.672 360.103 436.271 360.19 cv
472.008 359.745 mo
472.028 359.701 472.049 359.658 472.069 359.614 cv
472.049 359.658 472.029 359.701 472.008 359.745 cv
432.454 359.524 mo
431.916 359.286 431.343 358.994 430.751 358.651 cv
430.271 358.374 429.865 358.117 429.517 357.861 cv
428.748 357.311 428.231 356.787 427.976 356.3 cv
428.235 356.786 428.746 357.309 429.519 357.86 cv
429.87 358.12 430.269 358.37 430.75 358.65 cv
431.343 358.993 431.919 359.284 432.454 359.524 cv
438.243 358.637 mo
438.242 358.625 438.241 358.612 438.24 358.6 cv
438.2 358.14 437.84 357.55 437.17 356.84 cv
436.958 356.62 li
437.033 356.693 437.1 356.766 437.167 356.835 cv
437.837 357.546 438.2 358.137 438.24 358.596 cv
438.241 358.61 438.242 358.623 438.243 358.637 cv
465.567 358.132 mo
465.495 358.132 465.422 358.128 465.35 358.12 cv
465.12 358.09 464.91 358.03 464.76 357.94 cv
464.652 357.878 464.565 357.802 464.506 357.719 cv
464.564 357.801 464.65 357.875 464.758 357.938 cv
464.913 358.027 465.118 358.091 465.352 358.118 cv
465.426 358.126 465.499 358.13 465.572 358.13 cv
465.735 358.13 465.892 358.11 466.036 358.073 cv
465.891 358.111 465.731 358.132 465.567 358.132 cv
464.456 357.633 mo
464.43 357.577 464.417 357.518 464.418 357.46 cv
464.417 357.519 464.431 357.577 464.456 357.633 cv
445.158 357.588 mo
445.056 357.353 444.93 357.112 444.78 356.864 cv
444.596 356.561 444.329 356.203 443.981 355.793 cv
444.33 356.202 444.598 356.559 444.78 356.86 cv
444.931 357.11 445.057 357.352 445.158 357.588 cv
452.006 356.555 mo
451.962 356.555 451.918 356.553 451.873 356.55 cv
451.911 356.553 451.949 356.554 451.986 356.554 cv
452.039 356.554 452.092 356.551 452.143 356.546 cv
452.218 356.54 452.29 356.529 452.36 356.514 cv
452.289 356.53 452.215 356.542 452.14 356.55 cv
452.096 356.553 452.052 356.555 452.006 356.555 cv
452.635 356.426 mo
452.635 356.426 452.636 356.426 452.636 356.425 cv
452.636 356.426 452.635 356.426 452.635 356.426 cv
452.638 356.425 mo
452.675 356.408 452.71 356.39 452.742 356.37 cv
452.71 356.39 452.675 356.408 452.638 356.425 cv
452.905 356.245 mo
452.962 356.195 li
453.302 355.897 453.593 355.597 453.834 355.295 cv
453.593 355.599 453.301 355.901 452.96 356.2 cv
452.905 356.245 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
464.749 356.151 mo
464.746 356.151 464.743 356.151 464.74 356.15 cv
464.74 356.15 li
464.74 356.15 li
464.87 355.53 464.93 354.91 464.92 354.28 cv
464.92 354.1 465.041 353.938 465.24 353.819 cv
465.042 353.939 464.921 354.102 464.924 354.281 cv
464.929 354.905 464.87 355.53 464.749 356.151 cv
467.172 355.37 mo
467.201 355.078 467.218 354.784 467.221 354.492 cv
467.219 354.784 467.203 355.077 467.172 355.37 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.682353 .482353 .160784 ]
/C1 [.682353 .482353 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.682353 .482353 .160784 ]
/C1 [.682353 .478431 .160784 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
173 122 40 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
448.262 355.027 mo
447.45 354.66 li
447.193 354.513 447.092 354.301 447.164 354.108 cv
447.095 354.303 447.194 354.512 447.447 354.658 cv
448.262 355.027 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
467.208 354.181 mo
467.176 354.061 467.088 353.951 466.96 353.86 cv
467.089 353.95 467.177 354.058 467.208 354.181 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
428.605 354.121 mo
428.708 353.962 428.687 353.785 428.556 353.636 cv
428.69 353.785 428.711 353.963 428.605 354.121 cv
442.21 353.921 mo
442.164 353.876 442.117 353.83 442.068 353.783 cv
441.985 353.702 li
442.07 353.78 li
442.117 353.827 442.164 353.874 442.21 353.921 cv
447.382 353.839 mo
447.4 353.82 li
447.862 353.41 448.024 352.971 447.899 352.49 cv
448.026 352.974 447.861 353.413 447.398 353.824 cv
447.382 353.839 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
466.598 353.69 mo
466.439 353.641 466.257 353.614 466.065 353.614 cv
465.939 353.614 465.817 353.626 465.703 353.648 cv
465.818 353.626 465.942 353.612 466.07 353.61 cv
466.258 353.61 466.439 353.64 466.598 353.69 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
428.283 353.447 mo
428.211 353.413 li
424.236 351.864 li
424.061 351.795 423.86 351.759 423.654 351.759 cv
423.581 351.759 423.508 351.764 423.436 351.772 cv
423.161 351.807 422.922 351.904 422.771 352.043 cv
422.697 352.113 li
422.769 352.04 li
422.92 351.9 423.16 351.81 423.44 351.769 cv
423.51 351.762 423.579 351.759 423.648 351.759 cv
423.857 351.759 424.06 351.792 424.24 351.86 cv
428.21 353.41 li
428.283 353.447 li
440.318 352.064 mo
440.237 351.979 440.16 351.897 440.088 351.819 cv
439.696 351.401 439.443 351.101 439.308 350.904 cv
439.043 350.501 438.936 350.149 438.986 349.857 cv
439.032 349.617 439.256 349.379 439.648 349.15 cv
440.183 348.84 440.697 348.695 441.292 348.695 cv
441.455 348.695 441.624 348.706 441.801 348.727 cv
441.672 348.718 441.55 348.71 441.43 348.71 cv
441.371 348.707 441.314 348.706 441.258 348.706 cv
440.674 348.706 440.179 348.849 439.65 349.15 cv
439.26 349.38 439.03 349.62 438.99 349.86 cv
438.94 350.15 439.04 350.5 439.31 350.9 cv
439.44 351.1 439.7 351.4 440.09 351.82 cv
440.161 351.898 440.238 351.98 440.318 352.064 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
454.453 351.914 mo
454.445 351.897 454.438 351.88 454.431 351.863 cv
454.191 351.323 453.804 350.774 453.274 350.221 cv
453.805 350.774 454.192 351.322 454.43 351.86 cv
454.438 351.878 454.445 351.896 454.453 351.914 cv
465.515 351.761 mo
465.472 351.761 465.429 351.76 465.387 351.757 cv
465.424 351.759 465.462 351.76 465.499 351.76 cv
465.574 351.76 465.65 351.756 465.725 351.747 cv
465.741 351.745 465.757 351.743 465.772 351.741 cv
465.73 351.75 li
465.658 351.757 465.586 351.761 465.515 351.761 cv
464.51 351.431 mo
464.446 351.37 464.398 351.303 464.37 351.229 cv
464.24 350.86 464.09 350.49 463.9 350.13 cv
463.899 350.126 463.897 350.123 463.896 350.119 cv
463.903 350.124 463.909 350.129 463.917 350.134 cv
464.091 350.495 464.243 350.859 464.372 351.226 cv
464.399 351.299 464.446 351.368 464.51 351.431 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
431.8 349.799 mo
431.8 349.799 431.8 349.798 431.8 349.797 cv
431.8 349.798 431.8 349.798 431.8 349.799 cv
431.8 349.793 mo
431.783 349.415 431.833 349.047 431.95 348.69 cv
432.009 348.517 432.089 348.346 432.189 348.176 cv
432.09 348.345 432.012 348.516 431.954 348.69 cv
431.835 349.046 431.784 349.415 431.8 349.793 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
451.892 349.008 mo
451.891 349.008 451.89 349.007 451.89 349.007 cv
453.626 347.997 li
454.099 347.722 454.174 347.302 453.853 346.981 cv
454.176 347.299 454.1 347.723 453.63 348 cv
451.892 349.008 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
432.555 347.671 mo
432.941 347.222 433.479 346.793 434.17 346.39 cv
434.801 346.027 435.46 345.723 436.144 345.483 cv
435.462 345.724 434.805 346.028 434.174 346.395 cv
433.482 346.796 432.942 347.223 432.555 347.671 cv
447.814 346.6 mo
447.814 346.599 447.813 346.599 447.812 346.598 cv
448.217 346.363 li
448.218 346.365 li
447.814 346.6 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
448.218 346.365 mo
448.217 346.363 li
449.222 345.781 li
448.218 346.365 li
449.677 345.531 mo
449.72 345.51 li
449.959 345.416 450.238 345.37 450.518 345.37 cv
450.555 345.37 450.593 345.37 450.631 345.372 cv
450.598 345.371 450.565 345.37 450.532 345.37 cv
450.231 345.37 449.931 345.424 449.677 345.531 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
438.156 344.965 mo
438.754 344.863 439.368 344.807 439.997 344.793 cv
439.368 344.808 438.754 344.865 438.156 344.965 cv
417.833 343.464 mo
417.654 343.464 417.477 343.44 417.316 343.391 cv
417.479 343.439 417.658 343.463 417.836 343.463 cv
418.13 343.463 418.424 343.398 418.647 343.269 cv
418.683 343.248 li
419.384 342.84 420.126 342.454 420.9 342.094 cv
420.125 342.456 419.383 342.842 418.68 343.25 cv
418.65 343.27 li
418.423 343.399 418.127 343.464 417.833 343.464 cv
422.9 341.232 mo
422.96 341.197 423.012 341.159 423.056 341.118 cv
423.012 341.16 422.96 341.198 422.9 341.232 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
461.185 365.88 mo
460.488 365.88 459.79 365.87 459.093 365.85 cv
459.098 365.675 458.984 365.5 458.753 365.367 cv
458.529 365.237 458.236 365.172 457.943 365.172 cv
457.649 365.172 457.356 365.238 457.131 365.368 cv
457.064 365.407 li
457.048 365.417 457.031 365.427 457.014 365.436 cv
456.838 365.537 456.654 365.639 456.47 365.74 cv
456.47 365.74 li
456.46 365.74 li
451.28 365.44 446.19 364.6 441.42 363.229 cv
441.42 363.229 li
441.42 363.229 li
441.546 363.177 441.671 363.122 441.795 363.065 cv
442.148 362.905 442.494 362.727 442.83 362.531 cv
442.913 362.483 442.995 362.434 443.074 362.385 cv
443.375 362.2 443.649 362.011 443.89 361.811 cv
444.099 361.644 444.286 361.473 444.451 361.299 cv
444.457 361.293 444.464 361.286 444.47 361.28 cv
444.474 361.276 444.478 361.271 444.482 361.267 cv
444.614 361.125 444.731 360.982 444.834 360.837 cv
445.261 360.246 445.474 359.62 445.482 358.976 cv
445.483 358.551 445.375 358.085 445.158 357.588 cv
445.057 357.352 444.931 357.11 444.78 356.86 cv
444.598 356.559 444.33 356.202 443.981 355.793 cv
443.566 355.303 443.036 354.739 442.395 354.106 cv
442.335 354.045 442.274 353.983 442.21 353.921 cv
442.164 353.874 442.117 353.827 442.07 353.78 cv
441.985 353.702 li
441.95 353.668 li
441.274 353.03 440.736 352.501 440.318 352.064 cv
440.238 351.98 440.161 351.898 440.09 351.82 cv
439.7 351.4 439.44 351.1 439.31 350.9 cv
439.04 350.5 438.94 350.15 438.99 349.86 cv
439.03 349.62 439.26 349.38 439.65 349.15 cv
440.179 348.849 440.674 348.706 441.258 348.706 cv
441.314 348.706 441.371 348.707 441.43 348.71 cv
441.55 348.71 441.672 348.718 441.801 348.727 cv
441.809 348.728 441.818 348.729 441.826 348.73 cv
442.467 348.813 443.211 349.047 444.046 349.425 cv
444.5 349.629 444.972 349.871 445.455 350.15 cv
446.065 350.503 446.569 350.854 446.957 351.193 cv
447.371 351.551 447.657 351.901 447.808 352.238 cv
447.846 352.323 447.877 352.407 447.899 352.49 cv
448.024 352.971 447.862 353.41 447.4 353.82 cv
447.382 353.839 li
447.306 353.905 li
447.236 353.968 447.189 354.037 447.164 354.108 cv
447.092 354.301 447.193 354.513 447.45 354.66 cv
448.262 355.027 li
451.353 356.424 li
451.505 356.494 451.689 356.537 451.873 356.55 cv
451.918 356.553 451.962 356.555 452.006 356.555 cv
452.052 356.555 452.096 356.553 452.14 356.55 cv
452.215 356.542 452.289 356.53 452.36 356.514 cv
452.46 356.493 452.552 356.463 452.635 356.426 cv
452.635 356.426 452.636 356.426 452.636 356.425 cv
452.637 356.425 452.637 356.425 452.638 356.425 cv
452.675 356.408 452.71 356.39 452.742 356.37 cv
452.784 356.345 452.821 356.318 452.854 356.289 cv
452.905 356.245 li
452.96 356.2 li
453.301 355.901 453.593 355.599 453.834 355.295 cv
454.723 354.181 454.932 353.048 454.453 351.914 cv
454.445 351.896 454.438 351.878 454.43 351.86 cv
454.192 351.322 453.805 350.774 453.274 350.221 cv
452.888 349.819 452.427 349.414 451.892 349.008 cv
453.63 348 li
454.1 347.723 454.176 347.299 453.853 346.981 cv
453.79 346.919 453.714 346.86 453.622 346.808 cv
451.558 345.616 li
451.299 345.467 450.968 345.385 450.631 345.372 cv
450.593 345.37 450.555 345.37 450.518 345.37 cv
450.238 345.37 449.959 345.416 449.72 345.51 cv
449.677 345.531 li
449.617 345.557 449.559 345.585 449.504 345.617 cv
449.222 345.781 li
448.217 346.363 li
447.812 346.598 li
445.699 345.616 443.622 345.026 441.632 344.849 cv
441.188 344.809 440.752 344.79 440.322 344.79 cv
440.213 344.79 440.105 344.791 439.997 344.793 cv
439.368 344.807 438.754 344.863 438.156 344.965 cv
437.464 345.081 436.793 345.253 436.144 345.483 cv
435.46 345.723 434.801 346.027 434.17 346.39 cv
433.479 346.793 432.941 347.222 432.555 347.671 cv
432.412 347.837 432.29 348.005 432.189 348.176 cv
432.089 348.346 432.009 348.517 431.95 348.69 cv
431.833 349.047 431.783 349.415 431.8 349.793 cv
431.8 349.795 431.8 349.796 431.8 349.797 cv
431.8 349.798 431.8 349.799 431.8 349.799 cv
431.82 350.255 431.939 350.725 432.155 351.205 cv
432.523 352.004 433.429 353.128 434.857 354.544 cv
436.917 356.58 li
436.931 356.593 436.945 356.607 436.958 356.62 cv
437.17 356.84 li
437.84 357.55 438.2 358.14 438.24 358.6 cv
438.241 358.612 438.242 358.625 438.243 358.637 cv
438.247 358.73 438.237 358.82 438.211 358.907 cv
438.125 359.204 437.864 359.475 437.43 359.729 cv
437.054 359.949 436.672 360.102 436.271 360.19 cv
436.028 360.242 435.779 360.271 435.52 360.277 cv
435.493 360.277 435.466 360.278 435.439 360.278 cv
435.252 360.278 435.059 360.265 434.86 360.24 cv
434.738 360.227 434.613 360.209 434.485 360.186 cv
433.911 360.079 433.273 359.874 432.58 359.579 cv
432.538 359.561 432.496 359.543 432.454 359.524 cv
431.919 359.284 431.343 358.993 430.75 358.65 cv
430.269 358.37 429.87 358.12 429.519 357.86 cv
428.746 357.309 428.235 356.786 427.976 356.3 cv
427.968 356.284 427.96 356.269 427.952 356.253 cv
427.633 355.604 427.802 354.944 428.45 354.293 cv
428.531 354.212 li
428.561 354.182 428.585 354.152 428.605 354.121 cv
428.711 353.963 428.69 353.785 428.556 353.636 cv
428.507 353.581 428.444 353.53 428.366 353.485 cv
428.283 353.447 li
428.21 353.41 li
424.24 351.86 li
424.06 351.792 423.857 351.759 423.648 351.759 cv
423.579 351.759 423.51 351.762 423.44 351.769 cv
423.16 351.81 422.92 351.9 422.769 352.04 cv
422.697 352.113 li
422.678 352.131 li
422.514 352.284 422.363 352.438 422.223 352.592 cv
419.449 349.676 417.732 346.52 417.071 343.295 cv
417.147 343.334 417.229 343.366 417.316 343.391 cv
417.477 343.44 417.654 343.464 417.833 343.464 cv
418.127 343.464 418.423 343.399 418.65 343.27 cv
418.68 343.25 li
419.383 342.842 420.125 342.456 420.9 342.094 cv
421.492 341.819 422.102 341.559 422.728 341.314 cv
422.791 341.29 422.848 341.262 422.9 341.232 cv
422.96 341.198 423.012 341.16 423.056 341.118 cv
423.195 340.99 423.255 340.837 423.224 340.687 cv
423.211 340.62 423.179 340.554 423.129 340.49 cv
423.102 340.456 423.07 340.423 423.032 340.391 cv
422.889 340.289 li
422.671 340.163 422.377 340.096 422.079 340.096 cv
421.858 340.096 421.635 340.133 421.438 340.209 cv
419.873 340.82 418.398 341.528 417.056 342.309 cv
417.02 342.329 li
416.98 342.353 416.943 342.377 416.91 342.403 cv
416.91 342.4 li
416.88 342.23 416.86 342.06 416.84 341.89 cv
416.69 340.52 416.73 339.15 416.95 337.78 cv
421.92 335.67 427.63 334.41 433.49 334 cv
433.49 334 li
433.95 333.97 434.42 333.94 434.88 333.92 cv
434.89 333.92 li
435.864 333.874 436.841 333.851 437.817 333.851 cv
438.946 333.851 440.074 333.881 441.2 333.94 cv
442.07 334 442.93 334.06 443.79 334.15 cv
443.97 334.168 444.149 334.186 444.328 334.206 cv
447.51 334.546 450.616 335.148 453.57 336.01 cv
455.07 336.44 456.52 336.94 457.92 337.5 cv
459.63 338.18 461.26 338.97 462.79 339.85 cv
464.99 341.12 466.84 342.51 468.35 343.99 cv
468.77 344.4 469.16 344.82 469.52 345.25 cv
470.49 346.37 471.27 347.54 471.86 348.74 cv
472.78 350.6 473.24 352.52 473.23 354.43 cv
473.23 354.47 li
473.23 354.74 473.22 355.019 473.19 355.29 cv
473.17 355.54 li
473.15 355.74 473.13 355.95 473.1 356.16 cv
473.1 356.16 li
473.09 356.16 li
472.19 356.22 471.3 356.26 470.4 356.28 cv
469.93 356.292 469.462 356.298 468.994 356.298 cv
468.342 356.298 467.691 356.287 467.04 356.27 cv
467.098 355.971 467.142 355.671 467.172 355.37 cv
467.203 355.077 467.219 354.784 467.221 354.492 cv
467.221 354.42 467.221 354.349 467.221 354.277 cv
467.22 354.245 467.216 354.213 467.208 354.181 cv
467.177 354.058 467.089 353.95 466.96 353.86 cv
466.935 353.843 466.909 353.826 466.881 353.81 cv
466.798 353.762 466.703 353.721 466.598 353.69 cv
466.439 353.64 466.258 353.61 466.07 353.61 cv
465.942 353.612 465.818 353.626 465.703 353.648 cv
465.525 353.683 465.367 353.742 465.24 353.819 cv
465.041 353.938 464.92 354.1 464.92 354.28 cv
464.93 354.91 464.87 355.53 464.74 356.15 cv
464.74 356.15 li
463.44 356.059 462.14 355.93 460.86 355.75 cv
460.86 355.75 li
460.86 355.75 li
462.02 356.29 463.23 356.8 464.46 357.26 cv
464.461 357.26 464.462 357.261 464.463 357.261 cv
464.455 357.287 464.447 357.312 464.438 357.338 cv
464.425 357.379 464.418 357.419 464.418 357.46 cv
464.417 357.518 464.43 357.577 464.456 357.633 cv
464.469 357.662 464.486 357.691 464.506 357.719 cv
464.565 357.802 464.652 357.878 464.76 357.94 cv
464.91 358.03 465.12 358.09 465.35 358.12 cv
465.422 358.128 465.495 358.132 465.567 358.132 cv
465.731 358.132 465.891 358.111 466.036 358.073 cv
466.161 358.041 466.275 357.997 466.372 357.941 cv
468.221 358.56 470.131 359.1 472.09 359.54 cv
472.1 359.54 li
472.09 359.565 472.079 359.59 472.069 359.614 cv
472.049 359.658 472.028 359.701 472.008 359.745 cv
471.967 359.826 471.924 359.908 471.88 359.99 cv
471.845 360.067 471.81 360.144 471.772 360.221 cv
471.756 360.251 471.74 360.281 471.725 360.311 cv
471.723 360.314 471.721 360.317 471.72 360.32 cv
471.652 360.446 471.585 360.572 471.516 360.698 cv
471.43 360.852 471.341 361.006 471.25 361.16 cv
471.25 361.16 li
471.06 361.47 470.86 361.78 470.65 362.08 cv
470.495 362.304 470.333 362.527 470.164 362.747 cv
469.402 363.733 468.499 364.691 467.454 365.61 cv
467.45 365.61 li
467.45 365.61 li
465.373 365.79 463.279 365.88 461.185 365.88 cv
461.19 364.01 mo
461.269 364.02 461.349 364.025 461.429 364.025 cv
461.803 364.025 462.17 363.919 462.39 363.729 cv
462.728 363.43 463.05 363.125 463.356 362.814 cv
463.876 362.289 464.347 361.747 464.768 361.192 cv
464.871 361.055 464.972 360.918 465.07 360.78 cv
465.24 360.53 465.13 360.24 464.81 360.06 cv
464.783 360.045 464.756 360.031 464.728 360.018 cv
464.641 359.977 464.542 359.943 464.433 359.916 cv
464.29 359.883 464.144 359.867 463.999 359.867 cv
463.546 359.867 463.118 360.022 462.936 360.28 cv
462.271 361.227 461.44 362.141 460.467 362.992 cv
460.374 363.073 460.317 363.161 460.291 363.251 cv
460.231 363.46 460.345 363.677 460.61 363.83 cv
460.703 363.871 li
460.793 363.913 li
460.917 363.961 461.052 363.993 461.19 364.01 cv
465.387 351.757 mo
465.429 351.76 465.472 351.761 465.515 351.761 cv
465.586 351.761 465.658 351.757 465.73 351.75 cv
465.772 351.741 li
466.367 351.656 466.748 351.314 466.624 350.963 cv
466.595 350.881 466.565 350.799 466.533 350.717 cv
466.302 350.094 466.004 349.479 465.645 348.877 cv
465.593 348.788 465.539 348.699 465.484 348.611 cv
465.391 348.458 465.292 348.307 465.189 348.157 cv
465.103 348.03 465.014 347.903 464.923 347.777 cv
464.903 347.751 464.881 347.725 464.857 347.7 cv
464.809 347.65 464.752 347.606 464.683 347.567 cv
464.68 347.565 464.677 347.563 464.674 347.561 cv
464.508 347.466 464.295 347.402 464.068 347.378 cv
463.999 347.371 463.929 347.367 463.859 347.367 cv
463.713 347.367 463.564 347.384 463.42 347.42 cv
462.944 347.533 462.676 347.809 462.721 348.089 cv
462.731 348.157 462.759 348.224 462.807 348.29 cv
462.826 348.316 462.845 348.343 462.864 348.369 cv
462.96 348.51 li
463.328 349.037 463.646 349.573 463.896 350.119 cv
463.897 350.123 463.899 350.126 463.9 350.13 cv
464.09 350.49 464.24 350.86 464.37 351.229 cv
464.398 351.303 464.446 351.37 464.51 351.431 cv
464.561 351.48 464.621 351.525 464.689 351.564 cv
464.876 351.672 465.121 351.742 465.387 351.757 cv
456.928 343.243 mo
456.94 343.25 li
457.4 343.519 457.85 343.79 458.269 344.08 cv
458.99 344.56 459.66 345.06 460.28 345.59 cv
460.42 345.69 li
460.638 345.816 460.932 345.883 461.23 345.883 cv
461.414 345.883 461.601 345.858 461.771 345.804 cv
461.807 345.793 461.841 345.782 461.875 345.768 cv
462.335 345.587 462.495 345.245 462.289 344.96 cv
462.26 344.919 462.223 344.879 462.18 344.84 cv
461.904 344.605 461.616 344.374 461.319 344.147 cv
460.592 343.589 459.802 343.054 458.951 342.543 cv
458.816 342.461 458.678 342.38 458.54 342.3 cv
458.528 342.294 li
458.503 342.279 li
458.278 342.15 457.984 342.084 457.689 342.084 cv
457.396 342.084 457.102 342.149 456.878 342.279 cv
456.734 342.363 456.637 342.464 456.587 342.57 cv
456.517 342.713 456.534 342.867 456.639 343.007 cv
456.695 343.084 456.778 343.156 456.887 343.219 cv
456.928 343.243 li
453.153 341.371 mo
453.235 341.383 453.318 341.388 453.401 341.388 cv
453.456 341.388 453.51 341.386 453.565 341.381 cv
453.669 341.373 453.772 341.356 453.869 341.332 cv
454.014 341.3 454.148 341.243 454.258 341.17 cv
454.296 341.146 454.332 341.119 454.364 341.091 cv
454.516 340.959 454.574 340.807 454.55 340.661 cv
454.527 340.509 454.414 340.362 454.22 340.25 cv
454.097 340.195 li
454.041 340.169 li
453.719 340.045 453.393 339.925 453.062 339.808 cv
451.75 339.344 450.372 338.944 448.95 338.6 cv
448.79 338.56 448.62 338.55 448.45 338.55 cv
448.313 338.556 448.178 338.578 448.052 338.612 cv
447.792 338.679 447.574 338.802 447.458 338.967 cv
447.367 339.094 447.351 339.229 447.397 339.355 cv
447.442 339.482 447.549 339.6 447.71 339.69 cv
447.732 339.702 447.755 339.714 447.778 339.725 cv
447.869 339.77 447.972 339.807 448.089 339.833 cv
448.609 339.958 449.124 340.092 449.631 340.235 cv
449.714 340.259 449.797 340.284 449.88 340.31 cv
450.88 340.6 451.85 340.92 452.769 341.28 cv
452.803 341.287 li
452.914 341.327 453.032 341.355 453.153 341.371 cv
426.861 338.546 mo
426.74 338.573 426.62 338.601 426.5 338.63 cv
425.91 338.769 425.64 339.16 425.88 339.5 cv
425.94 339.58 426.03 339.66 426.13 339.72 cv
426.346 339.842 426.643 339.913 426.949 339.913 cv
427.096 339.913 427.246 339.896 427.39 339.86 cv
429.02 339.47 430.72 339.17 432.45 338.97 cv
432.588 338.952 432.716 338.921 432.83 338.879 cv
433.037 338.805 433.197 338.694 433.287 338.565 cv
433.372 338.447 433.398 338.314 433.35 338.18 cv
433.3 338.05 433.19 337.93 433.03 337.84 cv
432.913 337.773 432.773 337.722 432.617 337.689 cv
432.493 337.663 432.36 337.649 432.223 337.649 cv
432.207 337.649 432.19 337.649 432.174 337.649 cv
432.113 337.65 432.052 337.654 431.99 337.66 cv
431.571 337.709 431.153 337.764 430.738 337.824 cv
429.418 338.011 428.12 338.253 426.861 338.546 cv
441.504 338.808 mo
442.007 338.849 442.508 338.897 443.005 338.953 cv
443.078 338.961 443.152 338.965 443.224 338.965 cv
443.504 338.965 443.769 338.906 443.973 338.804 cv
444.08 338.752 444.17 338.688 444.237 338.615 cv
444.29 338.558 444.329 338.495 444.352 338.429 cv
444.363 338.393 444.37 338.357 444.372 338.322 cv
444.38 338.179 444.307 338.044 444.177 337.933 cv
444.134 337.896 444.085 337.861 444.031 337.83 cv
443.956 337.786 443.87 337.749 443.775 337.718 cv
443.699 337.693 443.618 337.674 443.532 337.661 cv
443.502 337.656 443.47 337.652 443.438 337.648 cv
441.591 337.436 439.699 337.33 437.815 337.33 cv
437.782 337.33 437.748 337.33 437.715 337.33 cv
437.715 337.33 437.714 337.33 437.714 337.33 cv
437.713 337.33 437.711 337.33 437.71 337.33 cv
437.545 337.33 437.389 337.346 437.248 337.388 cv
436.919 337.474 436.673 337.647 436.597 337.856 cv
436.58 337.903 436.57 337.951 436.57 338 cv
436.57 338.18 436.7 338.35 436.91 338.47 cv
437.099 338.578 437.352 338.645 437.635 338.658 cv
437.637 338.658 437.639 338.658 437.641 338.658 cv
437.641 338.658 437.642 338.658 437.643 338.658 cv
437.671 338.66 437.7 338.66 437.728 338.66 cv
437.729 338.66 437.73 338.66 437.73 338.66 cv
437.73 338.66 437.73 338.66 437.73 338.66 cv
437.95 338.66 438.17 338.66 438.39 338.67 cv
438.41 338.67 li
439.445 338.684 440.479 338.729 441.504 338.808 cv
.839216 .596078 .101961 rgb
f
441.416 363.229 mo
437.218 362.029 433.279 360.419 429.77 358.4 cv
426.72 356.64 424.2 354.68 422.23 352.6 cv
422.228 352.597 422.226 352.595 422.223 352.592 cv
422.363 352.438 422.514 352.284 422.678 352.131 cv
422.697 352.113 li
422.771 352.043 li
422.922 351.904 423.161 351.807 423.436 351.772 cv
423.508 351.764 423.581 351.759 423.654 351.759 cv
423.86 351.759 424.061 351.795 424.236 351.864 cv
428.211 353.413 li
428.283 353.447 li
428.366 353.485 li
428.444 353.53 428.507 353.581 428.556 353.636 cv
428.687 353.785 428.708 353.962 428.605 354.121 cv
428.585 354.152 428.561 354.182 428.531 354.212 cv
428.45 354.293 li
427.802 354.944 427.633 355.604 427.952 356.253 cv
427.96 356.269 427.968 356.284 427.976 356.3 cv
428.231 356.787 428.748 357.311 429.517 357.861 cv
429.865 358.117 430.271 358.374 430.751 358.651 cv
431.343 358.994 431.916 359.286 432.454 359.524 cv
432.496 359.543 432.538 359.561 432.58 359.579 cv
433.273 359.874 433.911 360.079 434.485 360.186 cv
434.612 360.21 434.736 360.229 434.857 360.243 cv
435.053 360.266 435.242 360.278 435.427 360.278 cv
435.458 360.278 435.489 360.277 435.52 360.277 cv
435.779 360.271 436.028 360.242 436.271 360.19 cv
436.672 360.103 437.056 359.95 437.435 359.731 cv
437.869 359.478 438.126 359.207 438.211 358.907 cv
438.237 358.82 438.247 358.73 438.243 358.637 cv
438.242 358.623 438.241 358.61 438.24 358.596 cv
438.2 358.137 437.837 357.546 437.167 356.835 cv
437.1 356.766 437.033 356.693 436.958 356.62 cv
436.945 356.607 436.931 356.593 436.917 356.58 cv
434.857 354.544 li
433.429 353.128 432.523 352.004 432.155 351.205 cv
431.939 350.725 431.82 350.255 431.8 349.799 cv
431.8 349.798 431.8 349.798 431.8 349.797 cv
431.8 349.796 431.8 349.795 431.8 349.793 cv
431.784 349.415 431.835 349.046 431.954 348.69 cv
432.012 348.516 432.09 348.345 432.189 348.176 cv
432.29 348.005 432.412 347.837 432.555 347.671 cv
432.942 347.223 433.482 346.796 434.174 346.395 cv
434.805 346.028 435.462 345.724 436.144 345.483 cv
436.793 345.253 437.464 345.081 438.156 344.965 cv
438.754 344.865 439.368 344.808 439.997 344.793 cv
440.105 344.791 440.213 344.79 440.322 344.79 cv
440.752 344.79 441.188 344.809 441.632 344.849 cv
443.622 345.026 445.699 345.616 447.812 346.598 cv
447.813 346.599 447.814 346.599 447.814 346.6 cv
448.218 346.365 li
449.222 345.781 li
449.504 345.617 li
449.559 345.585 449.617 345.557 449.677 345.531 cv
449.931 345.424 450.231 345.37 450.532 345.37 cv
450.565 345.37 450.598 345.371 450.631 345.372 cv
450.968 345.385 451.299 345.467 451.558 345.616 cv
453.622 346.808 li
453.714 346.86 453.79 346.919 453.853 346.981 cv
454.174 347.302 454.099 347.722 453.626 347.997 cv
451.89 349.007 li
451.89 349.007 451.891 349.008 451.892 349.008 cv
452.427 349.414 452.888 349.819 453.274 350.221 cv
453.804 350.774 454.191 351.323 454.431 351.863 cv
454.438 351.88 454.445 351.897 454.453 351.914 cv
454.932 353.048 454.723 354.181 453.834 355.295 cv
453.593 355.597 453.302 355.897 452.962 356.195 cv
452.905 356.245 li
452.854 356.289 li
452.821 356.318 452.784 356.345 452.742 356.37 cv
452.71 356.39 452.675 356.408 452.638 356.425 cv
452.637 356.425 452.637 356.425 452.636 356.425 cv
452.636 356.426 452.635 356.426 452.635 356.426 cv
452.552 356.463 452.46 356.493 452.36 356.514 cv
452.29 356.529 452.218 356.54 452.143 356.546 cv
452.092 356.551 452.039 356.554 451.986 356.554 cv
451.949 356.554 451.911 356.553 451.873 356.55 cv
451.689 356.537 451.505 356.494 451.353 356.424 cv
448.262 355.027 li
447.447 354.658 li
447.194 354.512 447.095 354.303 447.164 354.108 cv
447.189 354.037 447.236 353.968 447.306 353.905 cv
447.382 353.839 li
447.398 353.824 li
447.861 353.413 448.026 352.974 447.899 352.49 cv
447.877 352.407 447.846 352.323 447.808 352.238 cv
447.657 351.901 447.371 351.551 446.957 351.193 cv
446.569 350.854 446.065 350.503 445.455 350.15 cv
444.972 349.871 444.5 349.629 444.046 349.425 cv
443.211 349.047 442.467 348.813 441.826 348.73 cv
441.818 348.729 441.809 348.728 441.801 348.727 cv
441.624 348.706 441.455 348.695 441.292 348.695 cv
440.697 348.695 440.183 348.84 439.648 349.15 cv
439.256 349.379 439.032 349.617 438.986 349.857 cv
438.936 350.149 439.043 350.501 439.308 350.904 cv
439.443 351.101 439.696 351.401 440.088 351.819 cv
440.16 351.897 440.237 351.979 440.318 352.064 cv
440.736 352.501 441.274 353.03 441.95 353.668 cv
441.985 353.702 li
442.068 353.783 li
442.117 353.83 442.164 353.876 442.21 353.921 cv
442.274 353.983 442.335 354.045 442.395 354.106 cv
443.036 354.739 443.566 355.303 443.981 355.793 cv
444.329 356.203 444.596 356.561 444.78 356.864 cv
444.93 357.112 445.056 357.353 445.158 357.588 cv
445.375 358.085 445.483 358.551 445.482 358.976 cv
445.474 359.62 445.261 360.246 444.834 360.837 cv
444.731 360.982 444.614 361.125 444.482 361.267 cv
444.471 361.277 444.461 361.288 444.451 361.299 cv
444.286 361.473 444.099 361.644 443.89 361.811 cv
443.647 362.007 443.375 362.199 443.074 362.385 cv
442.995 362.434 442.913 362.483 442.83 362.531 cv
442.494 362.727 442.148 362.905 441.795 363.065 cv
441.67 363.122 441.544 363.176 441.416 363.229 cv
.835294 .560784 .0509804 rgb
f
426.947 339.911 mo
426.643 339.911 426.348 339.841 426.132 339.717 cv
426.029 339.657 425.944 339.585 425.883 339.502 cv
425.641 339.163 425.914 338.773 426.497 338.632 cv
426.618 338.603 426.739 338.574 426.861 338.546 cv
428.12 338.253 429.418 338.011 430.738 337.824 cv
431.155 337.764 431.574 337.71 431.994 337.662 cv
432.054 337.655 432.114 337.651 432.174 337.649 cv
432.19 337.649 432.207 337.649 432.223 337.649 cv
432.36 337.649 432.493 337.663 432.617 337.689 cv
432.773 337.723 432.915 337.775 433.033 337.844 cv
433.188 337.934 433.302 338.05 433.348 338.183 cv
433.395 338.316 433.37 338.448 433.287 338.565 cv
433.197 338.694 433.037 338.805 432.83 338.879 cv
432.717 338.919 432.59 338.949 432.452 338.965 cv
430.72 339.166 429.016 339.468 427.387 339.86 cv
427.243 339.895 427.094 339.911 426.947 339.911 cv
f
453.409 341.387 mo
453.323 341.387 453.238 341.382 453.153 341.371 cv
453.032 341.355 452.914 341.327 452.803 341.287 cv
452.793 341.283 452.783 341.279 452.772 341.275 cv
451.768 340.889 450.717 340.541 449.631 340.235 cv
449.124 340.092 448.609 339.958 448.089 339.833 cv
447.972 339.807 447.869 339.77 447.778 339.725 cv
447.755 339.714 447.732 339.702 447.711 339.689 cv
447.552 339.598 447.443 339.481 447.397 339.355 cv
447.351 339.229 447.367 339.094 447.458 338.967 cv
447.574 338.802 447.792 338.679 448.052 338.612 cv
448.198 338.575 448.357 338.555 448.519 338.555 cv
448.664 338.555 448.811 338.571 448.953 338.604 cv
450.371 338.941 451.75 339.345 453.062 339.808 cv
453.393 339.925 453.719 340.045 454.041 340.169 cv
454.097 340.195 li
454.217 340.252 li
454.41 340.363 454.525 340.509 454.55 340.661 cv
454.574 340.807 454.516 340.959 454.364 341.091 cv
454.332 341.119 454.296 341.146 454.258 341.17 cv
454.147 341.241 454.014 341.295 453.869 341.332 cv
453.772 341.356 453.669 341.373 453.565 341.381 cv
453.513 341.385 453.461 341.387 453.409 341.387 cv
f
417.836 343.463 mo
417.658 343.463 417.479 343.439 417.316 343.391 cv
417.229 343.366 417.147 343.334 417.071 343.295 cv
417.071 343.293 417.071 343.292 417.07 343.29 cv
417 343 416.95 342.7 416.91 342.41 cv
416.91 342.403 li
416.943 342.377 416.98 342.353 417.02 342.329 cv
417.056 342.309 li
418.398 341.528 419.873 340.82 421.438 340.209 cv
421.635 340.133 421.858 340.096 422.079 340.096 cv
422.377 340.096 422.671 340.163 422.889 340.289 cv
423.032 340.391 li
423.07 340.423 423.102 340.456 423.129 340.49 cv
423.179 340.554 423.21 340.62 423.224 340.687 cv
423.255 340.837 423.195 340.99 423.056 341.118 cv
423.012 341.159 422.96 341.197 422.9 341.232 cv
422.848 341.262 422.791 341.29 422.728 341.314 cv
422.102 341.559 421.492 341.819 420.9 342.094 cv
420.126 342.454 419.384 342.84 418.683 343.248 cv
418.647 343.269 li
418.424 343.398 418.13 343.463 417.836 343.463 cv
f
461.239 345.88 mo
460.939 345.88 460.642 345.813 460.422 345.686 cv
460.281 345.587 li
459.304 344.752 458.18 343.965 456.939 343.249 cv
456.928 343.243 li
456.887 343.219 li
456.778 343.156 456.695 343.084 456.639 343.007 cv
456.537 342.868 456.52 342.714 456.587 342.57 cv
456.637 342.464 456.734 342.363 456.878 342.279 cv
457.102 342.149 457.396 342.084 457.689 342.084 cv
457.984 342.084 458.278 342.15 458.503 342.279 cv
458.528 342.294 li
458.538 342.3 li
458.677 342.38 458.815 342.461 458.951 342.543 cv
459.802 343.054 460.592 343.589 461.319 344.147 cv
461.617 344.375 461.904 344.608 462.18 344.844 cv
462.223 344.881 462.26 344.92 462.289 344.96 cv
462.495 345.245 462.335 345.587 461.875 345.768 cv
461.841 345.782 461.807 345.793 461.771 345.804 cv
461.603 345.855 461.421 345.88 461.239 345.88 cv
f
465.499 351.76 mo
465.462 351.76 465.424 351.759 465.387 351.757 cv
465.121 351.742 464.876 351.672 464.689 351.564 cv
464.621 351.525 464.561 351.48 464.51 351.431 cv
464.446 351.368 464.399 351.299 464.372 351.226 cv
464.243 350.859 464.091 350.495 463.917 350.134 cv
463.627 349.534 463.275 348.943 462.864 348.369 cv
462.845 348.343 462.826 348.316 462.807 348.29 cv
462.759 348.224 462.731 348.157 462.721 348.089 cv
462.68 347.809 462.948 347.533 463.421 347.42 cv
463.566 347.385 463.717 347.368 463.865 347.368 cv
463.933 347.368 464.001 347.371 464.068 347.378 cv
464.295 347.402 464.508 347.466 464.674 347.561 cv
464.677 347.563 464.68 347.565 464.683 347.567 cv
464.749 347.607 464.808 347.651 464.857 347.7 cv
464.881 347.725 464.903 347.751 464.923 347.777 cv
465.014 347.903 465.103 348.03 465.189 348.157 cv
465.291 348.307 465.39 348.458 465.484 348.611 cv
465.539 348.699 465.593 348.788 465.645 348.877 cv
466 349.48 466.296 350.095 466.533 350.717 cv
466.565 350.799 466.595 350.881 466.624 350.963 cv
466.748 351.314 466.367 351.656 465.772 351.741 cv
465.757 351.743 465.741 351.745 465.725 351.747 cv
465.65 351.756 465.574 351.76 465.499 351.76 cv
f
465.572 358.13 mo
465.499 358.13 465.426 358.126 465.352 358.118 cv
465.118 358.091 464.913 358.027 464.758 357.938 cv
464.65 357.875 464.564 357.801 464.506 357.719 cv
464.486 357.691 464.469 357.662 464.456 357.633 cv
464.431 357.577 464.417 357.519 464.418 357.46 cv
464.418 357.419 464.425 357.379 464.438 357.338 cv
464.447 357.312 464.455 357.287 464.463 357.261 cv
465.092 357.501 465.721 357.72 466.37 357.94 cv
466.371 357.941 466.372 357.941 466.372 357.941 cv
466.275 357.997 466.161 358.041 466.036 358.073 cv
465.892 358.11 465.735 358.13 465.572 358.13 cv
467.04 356.27 mo
467.037 356.27 467.034 356.27 467.03 356.27 cv
466.272 356.25 465.506 356.21 464.749 356.151 cv
464.87 355.53 464.929 354.905 464.924 354.281 cv
464.921 354.102 465.042 353.939 465.24 353.819 cv
465.367 353.742 465.525 353.683 465.703 353.648 cv
465.817 353.626 465.939 353.614 466.065 353.614 cv
466.257 353.614 466.439 353.641 466.598 353.69 cv
466.703 353.721 466.798 353.762 466.881 353.81 cv
466.909 353.826 466.935 353.843 466.96 353.86 cv
467.088 353.951 467.176 354.061 467.208 354.181 cv
467.216 354.213 467.22 354.245 467.221 354.277 cv
467.221 354.349 467.221 354.42 467.221 354.492 cv
467.218 354.784 467.201 355.078 467.172 355.37 cv
467.142 355.671 467.098 355.971 467.04 356.27 cv
f
461.428 364.024 mo
461.349 364.024 461.269 364.02 461.19 364.01 cv
461.052 363.993 460.917 363.961 460.793 363.913 cv
460.703 363.871 li
460.614 363.83 li
460.349 363.676 460.233 363.458 460.291 363.251 cv
460.317 363.161 460.374 363.073 460.467 362.992 cv
461.44 362.141 462.271 361.227 462.936 360.28 cv
463.118 360.022 463.546 359.867 463.999 359.867 cv
464.144 359.867 464.29 359.883 464.433 359.916 cv
464.542 359.943 464.641 359.977 464.728 360.018 cv
464.756 360.032 464.783 360.046 464.809 360.061 cv
465.128 360.245 465.242 360.528 465.065 360.784 cv
464.969 360.921 464.87 361.057 464.768 361.192 cv
464.347 361.747 463.876 362.289 463.356 362.814 cv
463.049 363.125 462.725 363.43 462.385 363.729 cv
462.165 363.92 461.8 364.024 461.428 364.024 cv
f
459.093 365.85 mo
459.092 365.85 459.091 365.85 459.09 365.85 cv
458.221 365.83 457.342 365.8 456.473 365.741 cv
456.656 365.641 456.836 365.539 457.014 365.436 cv
457.031 365.427 457.048 365.417 457.064 365.407 cv
457.131 365.368 li
457.356 365.238 457.649 365.172 457.943 365.172 cv
458.236 365.172 458.529 365.237 458.753 365.367 cv
458.984 365.5 459.098 365.675 459.093 365.85 cv
f
443.224 338.965 mo
443.152 338.965 443.078 338.961 443.005 338.953 cv
442.508 338.897 442.007 338.849 441.504 338.808 cv
440.271 338.71 439.023 338.66 437.779 338.66 cv
437.763 338.66 437.747 338.66 437.73 338.66 cv
437.73 338.66 437.729 338.66 437.728 338.66 cv
437.7 338.66 437.671 338.66 437.643 338.658 cv
437.642 338.658 437.641 338.658 437.641 338.658 cv
437.639 338.658 437.637 338.658 437.635 338.658 cv
437.351 338.645 437.1 338.574 436.912 338.466 cv
436.703 338.346 436.574 338.18 436.573 337.997 cv
436.573 337.949 436.581 337.901 436.597 337.856 cv
436.673 337.647 436.919 337.474 437.248 337.388 cv
437.39 337.351 437.548 337.33 437.714 337.33 cv
437.714 337.33 437.715 337.33 437.715 337.33 cv
437.748 337.33 437.782 337.33 437.815 337.33 cv
439.699 337.33 441.591 337.436 443.438 337.648 cv
443.47 337.652 443.502 337.656 443.532 337.661 cv
443.618 337.675 443.699 337.694 443.775 337.718 cv
443.87 337.749 443.956 337.786 444.031 337.83 cv
444.085 337.861 444.134 337.896 444.177 337.933 cv
444.307 338.045 444.378 338.181 444.372 338.322 cv
444.37 338.357 444.363 338.393 444.352 338.429 cv
444.329 338.495 444.29 338.558 444.237 338.615 cv
444.17 338.688 444.08 338.752 443.973 338.804 cv
443.769 338.906 443.504 338.965 443.224 338.965 cv
f
467.46 365.61 mo
467.454 365.61 li
467.454 365.61 li
468.499 364.691 469.402 363.733 470.164 362.747 cv
469.403 363.738 468.499 364.694 467.46 365.61 cv
473.101 356.16 mo
473.187 355.584 473.231 355.007 473.232 354.43 cv
473.227 356.151 li
473.101 356.16 li
f
473.214 360.838 mo
473.217 359.81 li
473.218 359.811 473.218 359.811 473.22 359.811 cv
473.214 360.838 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
473.22 359.811 mo
473.218 359.811 473.218 359.811 473.217 359.81 cv
473.217 359.79 li
473.218 359.79 473.219 359.79 473.22 359.79 cv
473.22 359.811 li
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
473.21 361.6 mo
473 360.93 472.73 360.27 472.42 359.62 cv
472.69 359.69 472.948 359.75 473.217 359.79 cv
473.217 359.81 li
473.214 360.838 li
473.21 361.6 li
.835294 .560784 .0509804 rgb
f
470.491 362.31 mo
470.58 362.187 470.666 362.064 470.75 361.941 cv
470.837 361.815 470.921 361.688 471.002 361.56 cv
471.087 361.427 471.17 361.294 471.25 361.16 cv
471.25 361.16 li
471.418 360.883 471.577 360.605 471.715 360.329 cv
471.718 360.323 471.721 360.317 471.725 360.311 cv
471.741 360.281 471.757 360.251 471.772 360.221 cv
471.854 360.062 471.932 359.903 472.008 359.745 cv
472.029 359.701 472.049 359.658 472.069 359.614 cv
472.077 359.596 472.085 359.579 472.093 359.561 cv
472.094 359.561 li
471.675 360.493 471.141 361.412 470.491 362.31 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
472.094 359.561 mo
472.093 359.561 li
472.096 359.554 472.099 359.547 472.102 359.541 cv
472.102 359.541 472.102 359.541 472.103 359.541 cv
472.1 359.547 472.097 359.554 472.094 359.561 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
470.164 362.747 mo
470.333 362.527 470.495 362.304 470.65 362.08 cv
470.684 362.034 470.717 361.988 470.75 361.941 cv
470.666 362.064 470.58 362.187 470.491 362.31 cv
470.385 362.456 470.276 362.602 470.164 362.747 cv
471.002 361.56 mo
471.086 361.427 471.168 361.294 471.25 361.16 cv
471.17 361.294 471.087 361.427 471.002 361.56 cv
471.715 360.329 mo
471.717 360.326 471.718 360.323 471.72 360.32 cv
471.721 360.317 471.723 360.314 471.725 360.311 cv
471.721 360.317 471.718 360.323 471.715 360.329 cv
471.772 360.221 mo
471.81 360.144 471.845 360.067 471.88 359.99 cv
471.924 359.908 471.967 359.826 472.008 359.745 cv
471.932 359.903 471.854 360.062 471.772 360.221 cv
472.069 359.614 mo
472.079 359.59 472.09 359.565 472.1 359.54 cv
472.1 359.54 li
472.1 359.54 472.101 359.541 472.102 359.541 cv
472.099 359.547 472.096 359.554 472.093 359.561 cv
472.085 359.579 472.077 359.596 472.069 359.614 cv
.839216 .596078 .101961 rgb
f
467.46 365.61 mo
468.499 364.694 469.403 363.738 470.164 362.747 cv
470.276 362.602 470.385 362.456 470.491 362.31 cv
471.141 361.412 471.675 360.493 472.094 359.561 cv
472.097 359.554 472.1 359.547 472.103 359.541 cv
472.202 359.571 472.311 359.6 472.42 359.62 cv
472.42 359.62 li
472.42 359.62 li
472.42 359.62 li
472.42 359.62 li
472.73 360.27 473 360.93 473.21 361.6 cv
473.21 361.92 li
473.21 362.93 473.07 363.94 472.809 364.95 cv
471.05 365.24 469.26 365.46 467.46 365.61 cv
.835294 .560784 .0509804 rgb
f
473.909 364.77 mo
473.897 364.658 473.883 364.546 473.868 364.435 cv
473.884 364.546 473.897 364.658 473.91 364.77 cv
473.91 364.77 473.91 364.77 473.909 364.77 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
472.814 364.95 mo
473.076 363.945 473.208 362.93 473.211 361.916 cv
473.212 361.605 li
473.524 362.544 473.74 363.489 473.868 364.435 cv
473.883 364.546 473.897 364.658 473.909 364.77 cv
473.541 364.84 473.183 364.9 472.814 364.95 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .364706 .8 ]
/C1 [.211765 .364706 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .364706 .8 ]
/C1 [.207843 .352941 .803922 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
53 <~>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=
>[1N=>[1N=>[1N=>[1N=>[1N=>[1K;>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<8>$>*5>$>*5>$>*5>$>*5>$>*5
>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5
~>
<~bKS2Sbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
472.809 364.95 mo
473.07 363.94 473.21 362.93 473.21 361.92 cv
473.21 361.6 li
473.21 361.6 li
473.211 361.602 473.211 361.604 473.212 361.605 cv
473.211 361.916 li
473.208 362.93 473.076 363.945 472.814 364.95 cv
472.813 364.95 472.811 364.95 472.809 364.95 cv
.360784 .435294 .686274 rgb
f
473.91 364.77 mo
473.91 364.77 li
473.91 364.77 li
473.897 364.658 473.884 364.546 473.868 364.435 cv
473.742 363.481 473.523 362.53 473.212 361.588 cv
473.214 360.838 li
473.22 359.811 li
477.381 360.698 481.726 361.211 486.096 361.35 cv
482.303 362.875 478.191 364.011 473.91 364.77 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
486.096 361.35 mo
481.726 361.211 477.381 360.698 473.22 359.811 cv
473.22 359.79 li
473.22 359.79 li
473.22 359.79 li
477.39 360.69 481.74 361.2 486.12 361.34 cv
486.112 361.343 486.104 361.346 486.096 361.35 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
473.868 364.435 mo
473.74 363.489 473.524 362.544 473.212 361.605 cv
473.212 361.588 li
473.523 362.53 473.742 363.481 473.868 364.435 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
473.212 361.605 mo
473.211 361.604 473.211 361.602 473.21 361.6 cv
473.214 360.838 li
473.212 361.588 li
473.212 361.605 li
.360784 .435294 .686274 rgb
f
473.22 359.79 mo
473.22 359.79 li
473.22 359.79 li
473.219 359.79 473.218 359.79 473.217 359.79 cv
473.227 356.151 li
473.23 356.15 li
473.22 359.79 li
472.268 359.156 mo
472.27 359.15 li
472.279 359.121 li
472.328 359.005 472.373 358.888 472.417 358.772 cv
472.442 358.707 472.467 358.643 472.49 358.578 cv
472.421 358.771 472.347 358.964 472.268 359.156 cv
472.587 358.298 mo
472.59 358.29 li
472.59 358.29 li
472.59 358.289 472.59 358.289 472.591 358.288 cv
472.589 358.292 472.588 358.295 472.587 358.298 cv
472.815 357.541 mo
472.831 357.477 472.846 357.413 472.86 357.35 cv
472.86 357.35 li
472.87 357.32 li
472.95 357.01 473.01 356.7 473.06 356.38 cv
473.1 356.16 li
473.101 356.16 li
473.033 356.622 472.937 357.082 472.815 357.541 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
472.279 359.121 mo
472.3 359.06 li
472.34 358.963 472.379 358.867 472.417 358.772 cv
472.373 358.888 472.328 359.005 472.279 359.121 cv
.839216 .596078 .101961 rgb
f
473.217 359.79 mo
472.948 359.75 472.69 359.69 472.42 359.62 cv
472.42 359.62 li
472.42 359.62 li
472.42 359.62 li
472.42 359.62 li
472.36 359.49 472.3 359.37 472.24 359.24 cv
472.268 359.156 li
472.347 358.964 472.421 358.771 472.49 358.578 cv
472.518 358.502 472.545 358.426 472.57 358.35 cv
472.587 358.298 li
472.588 358.295 472.589 358.292 472.591 358.288 cv
472.678 358.042 472.753 357.79 472.815 357.541 cv
472.937 357.082 473.033 356.622 473.101 356.16 cv
473.227 356.151 li
473.217 359.79 li
.835294 .560784 .0509804 rgb
f
472.247 359.207 mo
472.25 359.19 li
472.26 359.167 472.27 359.144 472.279 359.121 cv
472.27 359.15 li
472.268 359.156 li
472.261 359.173 472.254 359.19 472.247 359.207 cv
472.417 358.772 mo
472.467 358.637 472.516 358.502 472.564 358.367 cv
472.54 358.438 472.516 358.508 472.49 358.578 cv
472.467 358.643 472.442 358.707 472.417 358.772 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
472.103 359.541 mo
472.102 359.541 472.102 359.541 472.102 359.541 cv
472.109 359.525 472.117 359.509 472.124 359.493 cv
472.117 359.51 472.11 359.525 472.103 359.541 cv
464.621 356.715 mo
464.667 356.527 464.707 356.339 464.74 356.15 cv
464.74 356.15 li
464.743 356.151 464.746 356.151 464.749 356.151 cv
464.712 356.34 464.669 356.528 464.621 356.715 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
472.102 359.541 mo
472.101 359.541 472.1 359.54 472.1 359.54 cv
472.1 359.54 li
472.1 359.54 li
472.09 359.54 li
470.131 359.1 468.221 358.56 466.372 357.941 cv
466.533 357.85 466.648 357.731 466.693 357.594 cv
466.839 357.156 466.955 356.714 467.04 356.27 cv
467.691 356.287 468.342 356.298 468.994 356.298 cv
469.462 356.298 469.93 356.292 470.4 356.28 cv
471.3 356.26 472.19 356.22 473.09 356.16 cv
473.1 356.16 li
473.06 356.38 li
473.01 356.7 472.95 357.01 472.87 357.32 cv
472.86 357.35 li
472.78 357.67 472.69 357.98 472.59 358.29 cv
472.587 358.298 li
472.58 358.321 472.572 358.344 472.564 358.367 cv
472.516 358.502 472.467 358.637 472.417 358.772 cv
472.379 358.867 472.34 358.963 472.3 359.06 cv
472.279 359.121 li
472.27 359.144 472.26 359.167 472.25 359.19 cv
472.247 359.207 li
472.207 359.302 472.166 359.398 472.124 359.493 cv
472.117 359.509 472.109 359.525 472.102 359.541 cv
464.463 357.261 mo
464.462 357.261 464.461 357.26 464.46 357.26 cv
463.23 356.8 462.02 356.29 460.86 355.75 cv
462.14 355.93 463.44 356.059 464.74 356.15 cv
464.707 356.339 464.667 356.527 464.621 356.715 cv
464.574 356.898 464.521 357.08 464.463 357.261 cv
.839216 .596078 .101961 rgb
f
466.372 357.941 mo
466.372 357.941 466.371 357.941 466.37 357.94 cv
465.721 357.72 465.092 357.501 464.463 357.261 cv
464.521 357.08 464.574 356.898 464.621 356.715 cv
464.669 356.528 464.712 356.34 464.749 356.151 cv
465.506 356.21 466.272 356.25 467.03 356.27 cv
467.034 356.27 467.037 356.27 467.04 356.27 cv
466.955 356.714 466.839 357.156 466.693 357.594 cv
466.648 357.731 466.533 357.85 466.372 357.941 cv
.835294 .560784 .0509804 rgb
f
472.42 359.62 mo
472.311 359.6 472.202 359.571 472.103 359.541 cv
472.11 359.525 472.117 359.51 472.124 359.493 cv
472.166 359.398 472.207 359.302 472.247 359.207 cv
472.254 359.19 472.261 359.173 472.268 359.156 cv
472.24 359.24 li
472.24 359.24 li
472.3 359.37 472.36 359.49 472.42 359.62 cv
472.49 358.578 mo
472.516 358.508 472.54 358.438 472.564 358.367 cv
472.572 358.344 472.58 358.321 472.587 358.298 cv
472.587 358.298 li
472.57 358.35 li
472.545 358.426 472.518 358.502 472.49 358.578 cv
f
486.12 361.34 mo
486.12 361.34 li
486.12 361.34 li
481.74 361.2 477.39 360.69 473.22 359.79 cv
473.23 356.15 li
479.78 355.69 486.14 354.17 491.49 351.6 cv
491.49 351.6 li
491.49 351.6 li
493.121 351.731 494.76 351.796 496.4 351.796 cv
496.402 351.796 496.404 351.796 496.406 351.796 cv
496.406 351.796 li
496.406 351.796 li
496.408 351.796 496.41 351.796 496.412 351.796 cv
496.473 351.796 496.535 351.796 496.596 351.796 cv
497.898 351.793 499.202 351.749 500.497 351.663 cv
498.438 354.092 495.659 356.371 492.18 358.4 cv
490.28 359.51 488.25 360.479 486.12 361.34 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
496.596 351.796 mo
497.834 351.792 499.071 351.751 500.306 351.673 cv
500.309 351.673 500.311 351.672 500.313 351.672 cv
500.376 351.668 500.438 351.664 500.5 351.66 cv
500.5 351.66 li
500.499 351.661 500.498 351.662 500.497 351.663 cv
499.202 351.749 497.898 351.793 496.596 351.796 cv
.360784 .435294 .686274 rgb
f
502.15 344.046 mo
502.796 343.986 503.438 343.915 504.079 343.834 cv
504.068 343.835 504.058 343.836 504.048 343.838 cv
503.425 343.917 502.8 343.985 502.172 344.044 cv
502.164 344.045 502.157 344.046 502.15 344.046 cv
503.347 340.356 mo
503.347 340.356 li
503.458 340.341 503.568 340.325 503.678 340.309 cv
503.68 340.308 503.681 340.308 503.683 340.308 cv
503.571 340.324 503.459 340.34 503.347 340.356 cv
503.795 340.291 mo
503.796 340.291 503.798 340.291 503.8 340.291 cv
504.059 340.252 504.317 340.211 504.575 340.168 cv
504.575 340.168 504.576 340.168 504.577 340.168 cv
504.317 340.211 504.056 340.252 503.795 340.291 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
501.23 344.12 mo
502.159 342.902 502.868 341.634 503.347 340.356 cv
503.459 340.34 503.571 340.324 503.683 340.308 cv
503.72 340.303 503.758 340.297 503.795 340.291 cv
504.056 340.252 504.317 340.211 504.577 340.168 cv
504.715 340.147 504.852 340.125 504.99 340.1 cv
505.02 341.32 504.89 342.54 504.62 343.76 cv
504.44 343.785 504.259 343.81 504.079 343.834 cv
503.438 343.915 502.796 343.986 502.15 344.046 cv
501.843 344.074 501.536 344.098 501.23 344.12 cv
.839216 .596078 .101961 rgb
f
503.347 340.356 mo
503.348 340.354 503.349 340.352 503.35 340.35 cv
503.459 340.338 503.569 340.324 503.678 340.309 cv
503.568 340.325 503.458 340.341 503.347 340.356 cv
503.8 340.291 mo
503.918 340.272 504.035 340.252 504.15 340.23 cv
504.292 340.21 504.433 340.19 504.575 340.168 cv
504.317 340.211 504.059 340.252 503.8 340.291 cv
.835294 .560784 .0509804 rgb
f
502.172 344.044 mo
502.8 343.985 503.425 343.917 504.048 343.838 cv
503.425 343.919 502.798 343.988 502.172 344.044 cv
f
496.406 351.796 mo
496.404 351.796 496.402 351.796 496.4 351.796 cv
494.76 351.796 493.121 351.731 491.49 351.6 cv
491.494 351.598 491.497 351.596 491.5 351.595 cv
493.147 351.729 494.805 351.796 496.465 351.796 cv
496.508 351.796 496.551 351.796 496.594 351.796 cv
496.534 351.796 496.472 351.796 496.412 351.796 cv
496.41 351.796 496.408 351.796 496.406 351.796 cv
501.226 344.126 mo
501.226 344.125 li
501.534 344.101 501.843 344.075 502.15 344.046 cv
502.157 344.046 502.164 344.045 502.172 344.044 cv
501.857 344.074 501.542 344.101 501.226 344.126 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
501.226 344.125 mo
501.228 344.124 501.229 344.122 501.23 344.12 cv
501.536 344.098 501.843 344.074 502.15 344.046 cv
501.843 344.075 501.534 344.101 501.226 344.125 cv
.364706 .470588 .737255 rgb
f
504.048 343.838 mo
504.058 343.836 504.068 343.835 504.079 343.834 cv
504.259 343.811 504.439 343.787 504.619 343.763 cv
504.619 343.763 li
504.429 343.789 504.239 343.814 504.048 343.838 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
504.079 343.834 mo
504.259 343.81 504.44 343.785 504.62 343.76 cv
504.62 343.761 504.62 343.762 504.619 343.763 cv
504.439 343.787 504.259 343.811 504.079 343.834 cv
.364706 .470588 .737255 rgb
f
496.465 351.796 mo
494.805 351.796 493.147 351.729 491.5 351.595 cv
492.337 351.187 493.154 350.758 493.94 350.3 cv
497.097 348.461 499.526 346.364 501.226 344.126 cv
501.542 344.101 501.857 344.074 502.172 344.044 cv
502.798 343.988 503.425 343.919 504.048 343.838 cv
504.239 343.814 504.429 343.789 504.619 343.763 cv
504.009 346.481 502.629 349.151 500.5 351.66 cv
500.5 351.66 li
500.5 351.66 li
500.5 351.66 li
500.438 351.664 500.376 351.668 500.313 351.672 cv
500.311 351.672 500.309 351.673 500.306 351.673 cv
499.071 351.751 497.832 351.792 496.594 351.796 cv
496.551 351.796 496.508 351.796 496.465 351.796 cv
.360784 .435294 .686274 rgb
f
496.406 351.796 mo
496.406 351.796 li
496.408 351.796 496.41 351.796 496.412 351.796 cv
496.41 351.796 496.408 351.796 496.406 351.796 cv
496.4 351.796 mo
494.76 351.796 493.121 351.731 491.49 351.6 cv
491.49 351.6 li
493.121 351.731 494.76 351.796 496.4 351.796 cv
level3{
gsave
clp
[414 285 -285 414 190.539 140.227 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.207843 .356863 .796078 ]
/C1 [.207843 .356863 .796078 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.207843 .356863 .796078 ]
/C1 [.207843 .352941 .796078 ]
/N 1 
>>
]
/Bounds [2.1e-07 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[414 285 -285 414 190.539 140.227 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
52 90 202 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
497.69 331.59 mo
497.58 331.95 496.97 332.19 496.35 332.12 cv
496.12 332.09 495.91 332.03 495.76 331.94 cv
495.5 331.79 495.36 331.56 495.44 331.34 cv
495.77 330.33 495.93 329.31 495.92 328.28 cv
495.92 327.91 496.43 327.62 497.07 327.61 cv
497.38 327.61 497.67 327.69 497.88 327.81 cv
498.09 327.93 498.22 328.09 498.22 328.28 cv
498.23 329.39 498.06 330.5 497.69 331.59 cv
cp
496.07 334.78 mo
495.34 335.81 494.44 336.8 493.39 337.729 cv
493.04 338.03 492.32 338.12 491.79 337.91 cv
491.61 337.83 li
491.23 337.61 491.16 337.26 491.47 336.99 cv
492.44 336.14 493.27 335.229 493.94 334.28 cv
494.18 333.94 494.84 333.78 495.43 333.92 cv
495.58 333.95 495.7 334 495.81 334.06 cv
496.13 334.24 496.24 334.53 496.07 334.78 cv
cp
489.76 340.31 mo
489.7 340.34 li
488.33 341.14 486.84 341.85 485.26 342.46 cv
484.8 342.64 484.19 342.6 483.81 342.38 cv
483.67 342.28 li
483.32 341.979 483.45 341.56 483.98 341.36 cv
485.44 340.79 486.81 340.14 488.06 339.41 cv
488.13 339.37 li
488.58 339.11 489.3 339.11 489.75 339.37 cv
490.2 339.63 490.21 340.05 489.76 340.31 cv
cp
482.35 330.42 mo
478.45 328.66 li
478.1 328.46 478.04 328.14 478.31 327.91 cv
478.4 327.82 li
478.94 327.34 479.07 326.82 478.81 326.24 cv
478.66 325.9 478.37 325.55 477.96 325.19 cv
477.57 324.85 477.07 324.5 476.46 324.15 cv
475.97 323.87 475.5 323.63 475.05 323.42 cv
474.21 323.05 473.47 322.81 472.83 322.729 cv
471.99 322.63 471.34 322.75 470.65 323.15 cv
470.26 323.38 470.03 323.62 469.99 323.86 cv
469.94 324.15 470.04 324.5 470.31 324.9 cv
470.44 325.1 470.7 325.4 471.09 325.82 cv
471.53 326.3 472.14 326.9 472.95 327.67 cv
473.07 327.78 li
473.18 327.89 473.29 328 473.39 328.11 cv
474.57 329.27 475.38 330.2 475.78 330.86 cv
476.25 331.64 476.48 332.35 476.48 332.979 cv
476.47 333.62 476.26 334.25 475.83 334.84 cv
475.72 334.99 475.6 335.13 475.47 335.28 cv
475.33 335.42 475.18 335.57 475.01 335.71 cv
474.68 336 474.28 336.27 473.83 336.53 cv
471.58 337.84 468.93 338.36 465.96 338.08 cv
463.94 337.89 461.87 337.33 459.81 336.42 cv
457.99 337.47 li
457.92 337.5 li
457.36 337.8 456.49 337.79 455.94 337.47 cv
453.88 336.28 li
453.74 336.2 453.63 336.11 453.57 336.01 cv
453.34 335.7 453.45 335.34 453.87 335.09 cv
455.63 334.07 li
453.89 332.87 452.77 331.71 452.29 330.6 cv
451.65 329.1 452.12 327.6 453.68 326.13 cv
453.77 326.04 li
453.92 325.9 454.16 325.81 454.44 325.77 cv
454.72 325.74 455 325.77 455.24 325.86 cv
459.21 327.41 li
459.37 327.49 li
459.7 327.68 459.77 327.979 459.53 328.21 cv
459.45 328.29 li
458.8 328.94 458.63 329.6 458.95 330.25 cv
459.2 330.75 459.72 331.29 460.52 331.86 cv
460.87 332.12 461.27 332.37 461.75 332.65 cv
462.39 333.02 463.01 333.33 463.58 333.58 cv
464.43 333.94 465.19 334.17 465.86 334.24 cv
466.82 334.36 467.64 334.19 468.43 333.729 cv
469.01 333.39 469.28 333.02 469.24 332.6 cv
469.2 332.14 468.84 331.55 468.17 330.84 cv
467.92 330.58 li
465.86 328.54 li
464.43 327.13 463.52 326 463.16 325.21 cv
462.76 324.33 462.69 323.479 462.95 322.69 cv
463.23 321.87 463.97 321.09 465.17 320.39 cv
467.36 319.12 469.87 318.6 472.63 318.85 cv
474.62 319.03 476.7 319.62 478.81 320.6 cv
480.5 319.62 li
481.07 319.29 481.99 319.29 482.56 319.62 cv
484.62 320.81 li
485.19 321.13 485.19 321.67 484.63 322 cv
482.89 323.01 li
484.16 323.97 485.02 324.93 485.43 325.86 cv
486.07 327.32 485.58 328.78 483.96 330.2 cv
483.85 330.29 li
483.7 330.43 483.43 330.52 483.14 330.55 cv
482.88 330.57 482.58 330.53 482.35 330.42 cv
cp
480.2 344.04 mo
478.43 344.46 476.58 344.79 474.7 345 cv
474.31 345.05 473.93 344.97 473.66 344.82 cv
473.51 344.729 473.4 344.61 473.35 344.479 cv
473.22 344.12 473.63 343.77 474.25 343.7 cv
475.98 343.5 477.69 343.2 479.32 342.81 cv
479.76 342.7 480.25 342.77 480.57 342.95 cv
480.67 343.01 480.76 343.08 480.82 343.17 cv
481.06 343.51 480.79 343.89 480.2 344.04 cv
cp
468.98 345.33 mo
467.06 345.33 465.14 345.22 463.26 345 cv
463.02 344.979 462.82 344.91 462.67 344.82 cv
462.4 344.67 462.27 344.45 462.35 344.22 cv
462.47 343.86 463.07 343.63 463.69 343.7 cv
465.23 343.88 466.79 343.979 468.35 343.99 cv
468.56 344 468.76 344 468.97 344 cv
469.29 344 469.58 344.07 469.79 344.19 cv
469.99 344.31 470.12 344.479 470.13 344.66 cv
470.13 344.92 469.88 345.14 469.52 345.25 cv
469.36 345.3 469.17 345.33 468.98 345.33 cv
cp
441.7 321.85 mo
442.42 320.82 443.33 319.83 444.39 318.9 cv
444.74 318.6 445.45 318.52 445.98 318.72 cv
446.16 318.8 li
446.54 319.02 446.61 319.38 446.3 319.64 cv
445.33 320.49 444.49 321.41 443.83 322.35 cv
443.59 322.69 442.92 322.85 442.33 322.71 cv
442.18 322.68 442.06 322.63 441.95 322.57 cv
441.63 322.38 441.52 322.1 441.7 321.85 cv
cp
442 324.69 mo
442.26 324.85 442.39 325.07 442.32 325.29 cv
441.98 326.3 441.81 327.32 441.82 328.35 cv
441.82 328.72 441.31 329.01 440.68 329.01 cv
440.36 329.02 440.07 328.94 439.86 328.82 cv
439.66 328.7 439.53 328.53 439.53 328.35 cv
439.52 327.24 439.7 326.12 440.06 325.03 cv
440.18 324.68 440.78 324.44 441.4 324.51 cv
441.64 324.54 441.84 324.6 442 324.69 cv
cp
443.92 334.34 mo
444.17 334.68 443.89 335.07 443.3 335.21 cv
442.86 335.32 442.37 335.25 442.05 335.07 cv
441.95 335.01 441.86 334.94 441.8 334.85 cv
441.58 334.55 441.38 334.25 441.2 333.94 cv
440.74 333.2 440.38 332.44 440.11 331.66 cv
439.98 331.3 440.39 330.95 441.01 330.88 cv
441.4 330.84 441.78 330.91 442.05 331.06 cv
442.2 331.15 442.31 331.27 442.36 331.4 cv
442.69 332.34 443.17 333.27 443.79 334.15 cv
443.92 334.34 li
cp
444.85 336.87 mo
445.31 336.69 445.92 336.729 446.3 336.95 cv
446.44 337.05 li
447.05 337.58 447.72 338.08 448.45 338.55 cv
448.88 338.85 449.34 339.14 449.81 339.41 cv
450.24 339.66 450.27 340.05 449.88 340.31 cv
449.82 340.35 li
449.37 340.61 448.66 340.62 448.21 340.36 cv
448.19 340.35 li
446.83 339.56 445.6 338.7 444.54 337.79 cv
444.18 337.479 444.32 337.07 444.85 336.87 cv
cp
458.62 342.81 mo
458.76 342.85 458.88 342.9 458.99 342.95 cv
459.31 343.14 459.42 343.42 459.24 343.68 cv
459.07 343.92 458.68 344.07 458.27 344.08 cv
458.1 344.1 457.92 344.08 457.75 344.04 cv
455.97 343.62 454.26 343.09 452.66 342.47 cv
452.49 342.39 li
452.11 342.17 452.03 341.82 452.34 341.55 cv
452.47 341.43 452.66 341.35 452.87 341.3 cv
453.17 341.229 453.52 341.24 453.83 341.34 cv
453.93 341.37 li
454.85 341.72 455.81 342.04 456.81 342.33 cv
457.4 342.5 458.01 342.66 458.62 342.81 cv
cp
452.44 314.21 mo
452.9 314.03 453.51 314.07 453.89 314.29 cv
454.03 314.39 li
454.28 314.6 454.29 314.86 454.1 315.07 cv
454.02 315.17 453.89 315.25 453.73 315.31 cv
452.28 315.88 450.92 316.53 449.68 317.25 cv
449.65 317.27 li
449.2 317.53 448.47 317.53 448.03 317.27 cv
447.57 317.01 447.57 316.59 448.02 316.33 cv
448.06 316.31 li
448.44 316.09 448.83 315.87 449.24 315.66 cv
450.25 315.13 451.32 314.65 452.44 314.21 cv
cp
457.5 312.63 mo
459.27 312.21 461.11 311.88 462.99 311.66 cv
463.39 311.62 463.77 311.69 464.03 311.84 cv
464.19 311.93 464.3 312.05 464.35 312.18 cv
464.48 312.54 464.07 312.89 463.45 312.97 cv
461.72 313.17 460.02 313.47 458.39 313.86 cv
457.95 313.97 457.45 313.9 457.13 313.72 cv
457.03 313.66 456.94 313.58 456.88 313.5 cv
456.64 313.16 456.91 312.77 457.5 312.63 cv
cp
468.71 311.33 mo
470.63 311.33 472.56 311.43 474.44 311.65 cv
474.67 311.67 474.87 311.74 475.03 311.83 cv
475.29 311.979 475.43 312.2 475.35 312.43 cv
475.23 312.79 474.63 313.02 474 312.95 cv
472.27 312.76 470.5 312.66 468.73 312.66 cv
468.41 312.66 468.12 312.59 467.91 312.47 cv
467.7 312.35 467.57 312.18 467.57 312 cv
467.57 311.63 468.08 311.33 468.71 311.33 cv
cp
478.46 312.97 mo
478.7 312.63 479.37 312.47 479.95 312.6 cv
481.73 313.03 483.44 313.55 485.04 314.17 cv
485.22 314.25 li
485.6 314.47 485.67 314.82 485.36 315.09 cv
485.02 315.4 484.3 315.479 483.77 315.28 cv
482.3 314.71 480.72 314.22 479.09 313.83 cv
478.94 313.8 478.82 313.75 478.71 313.69 cv
478.39 313.51 478.28 313.22 478.46 312.97 cv
cp
487.88 316.28 mo
488.33 316.02 489.05 316.02 489.5 316.28 cv
489.54 316.3 li
490.9 317.09 492.12 317.94 493.18 318.84 cv
493.53 319.15 493.4 319.56 492.87 319.77 cv
492.41 319.95 491.8 319.91 491.42 319.69 cv
491.28 319.59 li
490.3 318.75 489.18 317.97 487.94 317.25 cv
487.89 317.22 li
487.44 316.96 487.43 316.54 487.88 316.28 cv
cp
494.42 321.42 mo
494.86 321.31 495.35 321.38 495.67 321.56 cv
495.78 321.62 495.86 321.69 495.92 321.78 cv
496.67 322.8 497.24 323.87 497.62 324.96 cv
497.73 325.27 497.45 325.58 496.96 325.7 cv
496.73 325.75 li
496.34 325.79 495.95 325.72 495.69 325.56 cv
495.53 325.47 495.42 325.36 495.37 325.229 cv
495.24 324.86 495.09 324.49 494.9 324.13 cv
494.61 323.5 494.24 322.89 493.81 322.29 cv
493.56 321.95 493.83 321.56 494.42 321.42 cv
cp
493.79 313.85 mo
479.94 305.85 457.55 305.85 443.79 313.85 cv
441.35 315.27 439.35 316.84 437.78 318.51 cv
433.82 322.72 432.62 327.58 434.17 332.19 cv
434.28 332.51 434.4 332.83 434.53 333.15 cv
434.54 333.16 li
434.65 333.41 434.76 333.66 434.89 333.92 cv
435.31 334.78 435.84 335.63 436.46 336.46 cv
436.46 336.47 li
436.71 336.78 436.95 337.09 437.21 337.4 cv
437.47 337.69 437.73 337.979 438.01 338.27 cv
438.01 338.28 li
438.14 338.41 438.28 338.54 438.41 338.67 cv
438.57 338.83 438.73 338.99 438.9 339.15 cv
439.92 340.09 441.08 340.99 442.39 341.85 cv
442.4 341.85 li
442.89 342.18 443.41 342.5 443.95 342.81 cv
445.74 343.84 447.68 344.75 449.72 345.51 cv
450.95 345.97 452.21 346.39 453.51 346.75 cv
455.92 347.43 458.43 347.94 461 348.28 cv
461.65 348.37 462.3 348.45 462.96 348.51 cv
463.82 348.6 464.68 348.66 465.55 348.72 cv
467.65 348.83 469.76 348.84 471.86 348.74 cv
479.93 348.36 487.81 346.39 493.96 342.81 cv
495.24 342.07 496.4 341.28 497.45 340.45 cv
497.89 340.1 498.31 339.75 498.7 339.39 cv
500.18 338.05 501.37 336.63 502.25 335.16 cv
502.6 334.57 502.91 333.979 503.17 333.39 cv
503.24 333.24 li
503.25 333.19 li
503.37 332.91 503.47 332.63 503.57 332.35 cv
503.59 332.29 li
503.69 331.979 503.78 331.67 503.86 331.35 cv
503.87 331.32 li
503.95 331.01 504.01 330.7 504.06 330.38 cv
504.11 330.1 504.15 329.82 504.17 329.54 cv
504.19 329.29 li
504.22 329.02 504.23 328.74 504.23 328.47 cv
504.23 328.43 li
504.25 323.16 500.77 317.87 493.79 313.85 cv
cp
.992157 .945098 .501961 rgb
f
484.622 320.808 mo
485.188 321.134 485.19 321.669 484.626 321.997 cv
482.89 323.007 li
484.163 323.972 485.017 324.93 485.431 325.863 cv
486.073 327.321 485.579 328.777 483.962 330.195 cv
483.854 330.289 li
483.697 330.428 483.435 330.522 483.143 330.546 cv
482.88 330.573 482.581 330.529 482.353 330.424 cv
478.447 328.658 li
478.102 328.459 478.044 328.143 478.306 327.905 cv
478.398 327.824 li
478.939 327.343 479.074 326.823 478.808 326.238 cv
478.657 325.901 478.371 325.551 477.957 325.193 cv
477.569 324.854 477.065 324.503 476.455 324.15 cv
475.972 323.871 475.5 323.629 475.046 323.425 cv
474.211 323.047 473.467 322.813 472.826 322.73 cv
471.99 322.626 471.336 322.751 470.648 323.15 cv
470.256 323.379 470.032 323.617 469.986 323.857 cv
469.936 324.149 470.043 324.501 470.308 324.904 cv
470.443 325.101 470.696 325.401 471.088 325.819 cv
471.531 326.299 472.143 326.905 472.95 327.668 cv
473.068 327.783 li
473.183 327.894 473.292 328 473.395 328.106 cv
474.573 329.27 475.376 330.199 475.78 330.864 cv
476.249 331.638 476.483 332.351 476.481 332.977 cv
476.474 333.62 476.261 334.246 475.834 334.837 cv
475.411 335.433 474.736 336.005 473.83 336.531 cv
471.576 337.842 468.929 338.361 465.961 338.082 cv
463.94 337.891 461.874 337.329 459.814 336.416 cv
457.993 337.475 li
457.429 337.803 456.508 337.801 455.942 337.475 cv
453.878 336.283 li
453.31 335.954 453.307 335.423 453.871 335.095 cv
455.628 334.073 li
453.885 332.872 452.765 331.705 452.294 330.604 cv
451.651 329.099 452.116 327.596 453.678 326.131 cv
453.771 326.043 li
453.922 325.904 454.161 325.807 454.436 325.772 cv
454.716 325.738 454.999 325.771 455.236 325.864 cv
459.211 327.413 li
459.366 327.485 li
459.697 327.677 459.767 327.977 459.531 328.212 cv
459.45 328.293 li
458.802 328.944 458.633 329.604 458.952 330.253 cv
459.198 330.753 459.724 331.293 460.517 331.861 cv
460.865 332.117 461.271 332.374 461.751 332.651 cv
462.39 333.021 463.006 333.332 463.58 333.579 cv
464.427 333.939 465.19 334.165 465.857 334.243 cv
466.819 334.356 467.637 334.193 468.435 333.73 cv
469.015 333.394 469.278 333.022 469.24 332.596 cv
469.2 332.137 468.837 331.546 468.167 330.835 cv
468.088 330.753 468.008 330.666 467.917 330.58 cv
465.857 328.544 li
464.429 327.128 463.522 326.004 463.155 325.205 cv
462.759 324.325 462.69 323.479 462.954 322.689 cv
463.228 321.865 463.974 321.092 465.174 320.395 cv
467.361 319.123 469.869 318.604 472.632 318.849 cv
474.623 319.026 476.701 319.616 478.814 320.6 cv
480.504 319.617 li
481.068 319.289 481.989 319.287 482.558 319.616 cv
484.622 320.808 li
cp
.980392 .760784 .25098 rgb
f
456.883 313.502 mo
456.641 313.163 456.914 312.773 457.497 312.632 cv
459.266 312.205 461.114 311.878 462.994 311.662 cv
463.386 311.616 463.771 311.691 464.033 311.844 cv
464.188 311.934 464.302 312.05 464.348 312.183 cv
464.476 312.544 464.071 312.894 463.452 312.965 cv
461.72 313.166 460.016 313.468 458.387 313.86 cv
457.946 313.967 457.452 313.901 457.132 313.717 cv
457.029 313.657 456.944 313.585 456.883 313.502 cv
cp
f
478.711 313.689 mo
478.395 313.507 478.275 313.223 478.458 312.967 cv
478.696 312.628 479.367 312.466 479.953 312.604 cv
481.729 313.026 483.441 313.553 485.041 314.169 cv
485.217 314.252 li
485.597 314.471 485.673 314.822 485.364 315.091 cv
485.016 315.396 484.303 315.48 483.772 315.275 cv
482.3 314.708 480.725 314.225 479.089 313.833 cv
478.942 313.8 478.816 313.75 478.711 313.689 cv
cp
f
449.647 317.269 mo
449.202 317.527 448.475 317.528 448.025 317.27 cv
447.574 317.009 447.574 316.588 448.021 316.329 cv
448.056 316.309 li
449.398 315.528 450.873 314.82 452.438 314.209 cv
452.902 314.029 453.51 314.07 453.889 314.289 cv
454.032 314.391 li
454.391 314.695 454.253 315.108 453.728 315.314 cv
452.284 315.878 450.921 316.528 449.683 317.248 cv
449.647 317.269 li
cp
f
487.887 317.219 mo
487.438 316.96 487.433 316.538 487.878 316.279 cv
488.327 316.019 489.055 316.021 489.503 316.279 cv
489.538 316.3 li
490.904 317.089 492.122 317.939 493.18 318.844 cv
493.534 319.146 493.399 319.562 492.875 319.769 cv
492.414 319.947 491.803 319.905 491.422 319.686 cv
491.281 319.587 li
490.304 318.752 489.18 317.965 487.939 317.249 cv
487.887 317.219 li
cp
f
446.303 319.643 mo
445.326 320.493 444.492 321.405 443.825 322.354 cv
443.588 322.691 442.917 322.854 442.328 322.714 cv
442.185 322.678 442.059 322.629 441.953 322.568 cv
441.634 322.384 441.519 322.101 441.701 321.846 cv
442.423 320.817 443.329 319.829 444.388 318.905 cv
444.739 318.599 445.452 318.518 445.979 318.721 cv
446.155 318.804 li
446.537 319.024 446.609 319.375 446.303 319.643 cv
cp
f
493.807 322.29 mo
493.563 321.95 493.835 321.561 494.421 321.42 cv
494.862 321.313 495.354 321.377 495.674 321.562 cv
495.777 321.622 495.862 321.694 495.923 321.777 cv
496.668 322.802 497.237 323.873 497.624 324.963 cv
497.751 325.323 497.347 325.674 496.726 325.747 cv
496.337 325.793 495.953 325.717 495.689 325.564 cv
495.534 325.475 495.42 325.357 495.372 325.226 cv
495.019 324.222 494.493 323.233 493.807 322.29 cv
cp
f
495.438 331.338 mo
495.769 330.334 495.933 329.305 495.924 328.281 cv
495.919 327.913 496.432 327.615 497.065 327.614 cv
497.383 327.614 497.672 327.688 497.881 327.81 cv
498.089 327.93 498.219 328.095 498.221 328.277 cv
498.233 329.388 498.056 330.504 497.693 331.594 cv
497.575 331.954 496.975 332.188 496.352 332.118 cv
496.118 332.091 495.913 332.027 495.758 331.938 cv
495.497 331.786 495.364 331.564 495.438 331.338 cv
cp
f
443.919 334.343 mo
444.167 334.682 443.889 335.07 443.302 335.211 cv
442.861 335.318 442.373 335.252 442.053 335.067 cv
441.947 335.007 441.859 334.936 441.804 334.853 cv
441.064 333.828 440.494 332.757 440.111 331.665 cv
439.983 331.305 440.388 330.954 441.007 330.883 cv
441.397 330.837 441.782 330.913 442.045 331.064 cv
442.2 331.154 442.313 331.271 442.359 331.404 cv
442.713 332.411 443.239 333.4 443.919 334.343 cv
cp
f
491.467 336.992 mo
492.44 336.141 493.271 335.227 493.936 334.28 cv
494.176 333.939 494.845 333.779 495.433 333.916 cv
495.578 333.951 495.704 334 495.809 334.061 cv
496.128 334.245 496.242 334.528 496.065 334.784 cv
495.341 335.813 494.44 336.802 493.385 337.729 cv
493.036 338.033 492.32 338.116 491.793 337.913 cv
491.614 337.83 li
491.233 337.609 491.161 337.258 491.467 336.992 cv
cp
f
489.753 339.367 mo
490.204 339.627 490.207 340.047 489.758 340.308 cv
489.7 340.342 li
488.334 341.136 486.845 341.849 485.261 342.463 cv
484.801 342.643 484.192 342.602 483.812 342.382 cv
483.67 342.28 li
483.315 341.977 483.453 341.564 483.978 341.357 cv
485.438 340.79 486.812 340.136 488.064 339.407 cv
488.131 339.368 li
488.58 339.107 489.305 339.107 489.753 339.367 cv
cp
f
458.986 342.955 mo
459.307 343.14 459.424 343.424 459.244 343.68 cv
459.004 344.021 458.329 344.181 457.747 344.041 cv
455.974 343.617 454.261 343.088 452.662 342.472 cv
452.489 342.389 li
452.108 342.168 452.033 341.818 452.341 341.547 cv
452.693 341.244 453.403 341.161 453.933 341.366 cv
455.403 341.935 456.981 342.421 458.617 342.812 cv
458.759 342.846 458.884 342.896 458.986 342.955 cv
cp
f
480.817 343.167 mo
481.062 343.507 480.786 343.895 480.2 344.035 cv
478.434 344.46 476.583 344.785 474.702 345.002 cv
474.311 345.046 473.928 344.97 473.664 344.817 cv
473.509 344.728 473.396 344.612 473.35 344.478 cv
473.225 344.118 473.629 343.768 474.248 343.697 cv
475.982 343.497 477.69 343.197 479.316 342.807 cv
479.758 342.7 480.248 342.766 480.566 342.95 cv
480.671 343.01 480.757 343.083 480.817 343.167 cv
cp
f
469.787 344.192 mo
469.995 344.313 470.124 344.479 470.127 344.662 cv
470.126 345.029 469.613 345.327 468.982 345.327 cv
467.063 345.329 465.136 345.219 463.255 345.004 cv
463.024 344.979 462.822 344.912 462.667 344.822 cv
462.403 344.67 462.271 344.448 462.348 344.224 cv
462.469 343.861 463.069 343.628 463.692 343.7 cv
465.429 343.896 467.204 343.996 468.972 343.998 cv
469.289 343.997 469.577 344.071 469.787 344.192 cv
cp
f
467.912 312.466 mo
467.703 312.346 467.574 312.18 467.573 311.997 cv
467.568 311.63 468.081 311.331 468.715 311.33 cv
470.632 311.326 472.559 311.433 474.438 311.648 cv
474.672 311.674 474.875 311.739 475.031 311.83 cv
475.293 311.981 475.426 312.203 475.352 312.429 cv
475.231 312.787 474.628 313.022 474.005 312.953 cv
472.273 312.757 470.496 312.658 468.729 312.66 cv
468.406 312.66 468.12 312.586 467.912 312.466 cv
cp
f
442.316 325.292 mo
441.98 326.296 441.813 327.323 441.819 328.349 cv
441.824 328.716 441.312 329.014 440.681 329.014 cv
440.362 329.016 440.072 328.939 439.864 328.819 cv
439.656 328.699 439.526 328.533 439.525 328.351 cv
439.517 327.238 439.697 326.125 440.059 325.034 cv
440.18 324.676 440.783 324.44 441.403 324.512 cv
441.638 324.538 441.841 324.604 441.997 324.694 cv
442.259 324.845 442.391 325.066 442.316 325.292 cv
cp
f
449.808 339.409 mo
450.256 339.668 450.267 340.093 449.821 340.353 cv
449.373 340.613 448.657 340.618 448.205 340.357 cv
448.19 340.349 li
446.83 339.563 445.601 338.702 444.538 337.788 cv
444.183 337.484 444.32 337.071 444.846 336.865 cv
445.308 336.686 445.918 336.728 446.299 336.948 cv
446.439 337.046 li
447.42 337.89 448.553 338.685 449.808 339.409 cv
cp
f
504.23 328.47 mo
504.21 335.6 li
504.21 335.92 li
504.21 336.92 504.08 337.92 503.82 338.91 cv
503.7 339.39 503.54 339.87 503.35 340.35 cv
502.87 341.63 502.16 342.9 501.23 344.12 cv
499.53 346.36 497.1 348.46 493.94 350.3 cv
493.15 350.76 492.33 351.19 491.49 351.6 cv
486.14 354.17 479.78 355.69 473.23 356.15 cv
473.1 356.16 li
473.09 356.16 li
472.19 356.22 471.3 356.26 470.4 356.28 cv
469.27 356.31 468.15 356.3 467.03 356.27 cv
466.27 356.25 465.5 356.21 464.74 356.15 cv
463.44 356.06 462.14 355.93 460.86 355.75 cv
458.64 355.46 456.46 355.03 454.36 354.47 cv
452.07 353.88 449.88 353.14 447.81 352.24 cv
446.46 351.66 445.16 351.01 443.93 350.3 cv
443.04 349.79 442.21 349.25 441.43 348.71 cv
441.42 348.7 li
439.84 347.56 438.5 346.37 437.4 345.12 cv
436.21 343.78 435.29 342.38 434.64 340.95 cv
433.87 339.229 433.49 337.47 433.49 335.71 cv
433.49 334 li
433.51 328.26 li
433.51 328.36 433.51 328.47 433.52 328.57 cv
433.52 328.79 433.53 329.01 433.55 329.24 cv
433.56 329.34 li
433.58 329.59 433.62 329.84 433.66 330.1 cv
433.71 330.47 433.79 330.84 433.88 331.21 cv
433.96 331.54 434.06 331.86 434.17 332.19 cv
434.27 332.52 434.39 332.84 434.53 333.15 cv
434.54 333.16 li
434.64 333.42 434.75 333.67 434.88 333.92 cv
435.09 334.35 435.33 334.77 435.6 335.2 cv
435.72 335.41 435.86 335.62 436.01 335.83 cv
436.15 336.04 436.3 336.25 436.46 336.46 cv
436.46 336.47 li
436.69 336.78 436.94 337.09 437.21 337.4 cv
437.46 337.69 437.72 337.979 438.01 338.27 cv
438.01 338.28 li
438.13 338.41 438.26 338.54 438.39 338.67 cv
438.56 338.83 438.73 338.99 438.9 339.15 cv
439.92 340.09 441.08 340.99 442.39 341.85 cv
442.4 341.85 li
442.89 342.18 443.41 342.5 443.95 342.81 cv
444.85 343.33 445.79 343.82 446.76 344.27 cv
447.72 344.72 448.71 345.13 449.72 345.51 cv
449.73 345.51 li
450.96 345.97 452.21 346.39 453.51 346.75 cv
453.53 346.75 li
455.93 347.43 458.44 347.94 461 348.28 cv
461.01 348.28 li
461.66 348.37 462.3 348.45 462.96 348.51 cv
463.82 348.6 464.68 348.66 465.55 348.72 cv
467.65 348.83 469.76 348.84 471.86 348.74 cv
472.68 348.7 473.5 348.64 474.31 348.57 cv
474.38 348.56 li
474.55 348.55 474.72 348.54 474.88 348.52 cv
475.04 348.51 475.2 348.49 475.36 348.47 cv
475.51 348.45 li
475.92 348.41 476.32 348.36 476.72 348.31 cv
476.73 348.31 li
477.39 348.229 478.05 348.13 478.7 348.02 cv
479.03 347.96 479.36 347.91 479.68 347.85 cv
480.01 347.79 480.33 347.729 480.65 347.66 cv
480.82 347.63 480.98 347.6 481.14 347.56 cv
481.45 347.5 481.75 347.43 482.05 347.36 cv
482.21 347.33 482.38 347.29 482.54 347.25 cv
482.66 347.22 li
482.73 347.2 li
483.21 347.09 483.68 346.96 484.15 346.83 cv
484.32 346.79 li
484.58 346.71 li
485.1 346.57 485.61 346.41 486.12 346.25 cv
486.39 346.16 li
486.75 346.04 487.1 345.92 487.45 345.8 cv
487.66 345.72 487.88 345.64 488.09 345.56 cv
488.68 345.34 489.26 345.11 489.83 344.87 cv
490.08 344.76 490.33 344.65 490.58 344.54 cv
490.85 344.42 491.12 344.29 491.38 344.17 cv
491.51 344.11 li
492.36 343.7 493.17 343.27 493.96 342.81 cv
494.82 342.32 495.61 341.8 496.36 341.25 cv
496.6 341.09 496.83 340.92 497.06 340.74 cv
497.07 340.74 li
497.08 340.729 li
497.21 340.64 497.32 340.55 497.45 340.45 cv
497.59 340.33 li
497.97 340.02 498.34 339.71 498.7 339.39 cv
500.18 338.05 501.37 336.63 502.25 335.16 cv
502.6 334.57 502.91 333.979 503.17 333.39 cv
503.24 333.24 li
503.25 333.19 li
503.37 332.91 503.47 332.63 503.57 332.35 cv
503.59 332.29 li
503.69 331.979 503.78 331.67 503.86 331.35 cv
503.87 331.32 li
503.95 331.01 504.01 330.7 504.06 330.38 cv
504.11 330.1 504.15 329.82 504.17 329.54 cv
504.19 329.29 li
504.22 329.02 504.23 328.74 504.23 328.47 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%Title: (2-01.eps)
%%CreationDate: 5/1/2018 2:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&=^,+NZ2f3Co6pTKEZEhY5[HUTma^4r#pC6,gXtG0'LI=d+^mrQ3"PbmhjV-a,fJW2STAktAg`.-O&a^fF]Ibmeb\46^YA/E
%f*?dX<O0bV?J(.]i0V;cqW7"m8)9N&dE+;DRX(+;L@b_ZD@G7>LRnEhF#[iW7\eL"D_N._<EB-7od`gBqs[1XnugI-%K<<UH`d!c
%kYk^3^GNR9:3/*OClKsJRM!noU!Bi2cjL&nh[/_cX<.LWX"tg7Jm`D2IeDg?H?i,5<XYs[G4^^!"od*VCFT^][:e7?T<5qkK3mZu
%Yk;'d=&q7ui$c(-Q1lF]K>/+,jZ39K<,UlA1m<q,)MV'JO'P-3o;n>OfW;#?<EW%;W6BN'ka*J(oS^/h49tNJ@8XSbM8mknc#G*X
%W)-0q[Yp?H)>u+6GhLd=NlJuQ-\Bt$*Fj2lF4;,:`n`p&E4?#QX3(Kk=D;mN>0"<2UUi3p"i$(9<-[Wi7gKu000h+3<\e+]9,.aE
%Iphl+j^oli_r!?0e+,VjRgklTEs%b/C^qP&l(CdFJ<0q<,VdS`E-0_NINP-&X4VI)F*Q2MNB>)1-I8];A^M>nc*@5khm!Qn.Q(T*
%5S7(#F9Yjci:m@-H.AqEIW?Vn^NVbh/6*a6>.^?!0RdjuhWk(V0K:[;cS>O94RR?HYPR'0CdA^c0_(_EFuqiPc(o]mf:l2?_@6BI
%>&:[&qjfG]iBcoLBt%%jdO`_)%l[[AFmso2RH40@VnYB>9ab6+(,hp*H12n[;7=Or$@!)<N3aoA1b!Z=i<:)<#Jsp/"<Il]#m^5#
%Ye/f[0DS3ma8+\u]/r$t?<7L5([[r#Pl;!Z+'C.2I6?rij6Dp/ZMLpR(UE>T/Y$sc^UlNd6lM$RcT3&(4p[)'?sc*gr'?sk&B@;H
%%0Cp&2Ll:n4q;u)QY65!nR]%N$m.YQ%ZZV$qg3rg^F[lX#<SL!lV;dh(]m]]/'iFR_&kTc$RE&.gV[&2`dkg&Rqf!NFQ8kl@@tG4
%Kg1:*oOn*j7JapD#2)$TJ>$cWh`JNf;/'EUGEEIrH`_a4=J68RJ/d>%iKG&8Begqlm#9h.BM@?J,<uWr6>^>S5GLO/UPhgRdI!PC
%Jmb_>plE8\3teXH3sOZs!\.23Is0*VEU.sagch)G;kSVeeBQS>!;'g"^H5%ii'/S+7]\E4,!4]YlYpL`l])J(G\+rCXL-aMFgh8f
%NB7qcK[j,,fA.OWNXiYf8ptqH3iHkIH;(*[q)kdlr#'p94YO`&GjL4akC(@ra]YIVm"?K5\^/$8[a]*L9^q$@VHL@]KUI+,9Ri;h
%&b*PSQ:U)Eh(B](;ZtU<D79FWJM>a?m[S>p&^>[Y51g.+XlJiZ1HA*\_]uP+.pE7\UCJ<rfQ(a_AGu`h>$5>e/meBC<U0Og7K_t!
%[gNO_WNu#nhesNeWnJ7c7;"=$>VIR:?)d:!qW5Vk?g_7sV3]#[X*OOji$[#h[<c\teu5_$Re7)<<*e*Mh:?ZBnb&Uti!5_#=6kkB
%>.n'WY%F^AIPgtQ\$9]+a21Wdl;g(H'_E(&Vm]dLT1crSVtk0c=1QHEgue\bB]Nq]F4sd[>iBG#mM`7mPrCo$*fTn5%+co565?A:
%KeEKY\R%+M[A!t^[0eU;YTXN0'Hr,J/9Ng,_HLX(ZC7fXR]0HbJK<5;)>tXY!SbL&/9J<(r-8!f7G&T/pjWKs^qR8bIPRC\-N'sm
%:BQ&bdsr\G':<1C[P>!Oj6=V#%r;g_0_djA572ipP=7%<9#9s%*nHn"&kpZVQ`Ol;^)DO53p\U9"mjhUi7Yrn)DI9KVI/p(?O*Y8
%^lA'uY[h07YVlMpR;9Ak^u$VLZ/u,GdfWWlfTlOH/!oAB3<*/VId0irX"uu"WLrGT29S4NIVECM5AKIRo+0)a.p'L8LW#9^KEj2J
%d8+dCn3LHG\>kEQ)g(+JDn.1cd=r(#M&^>4Ye"6G1_[Y%m/cJsS/lS/_'akIi2%/X3pU/g3^cu7!G+*2<o.!*]sDGXrrXoeZA/D1
%0Y!9l@j2-:0u&5nb>p>(,;r_hjC@0E'F_^(&4t3'+Du(epL3/Wlei9Nq\\[oP98\m;5q]icn:qoc=sTO^Tk2qX;>Phg'[@+oLuV<
%g>bC8a[Q'pIt%3E5=7YTr)^'("MXK'5PV!LIoVeB2'9bVs)b#Vk8DA-b&(gueHO"%P8\"tkP26dS,TjMOI('.D"*nghLk1!oLfBB
%$99N(Hg1=6L0^PJrUqoBlS8>2%:FYc.On4E+$O8$h+R7r92mr+$YYG[lk:pWqPA3;er%5h`W-mQD4Q`[buP@F]+/aiF6@1:?4M]$
%#2]=q@]g[ofkf]!b(Au$'U_61:6?DRp[!e:>X4//q2QBl["oCAWSo7@>e:&#7K_](ei?J$e)@73VD[ILZTQQIg.^[`8%Ah-7=.\V
%#*_(mB0bs28&++&3<$uW$SUrL;CW4GBa`?"riIN"(<5Hh+qI9MIfVs#^reDS8;n;o-6[Z'WSik_)N^PG1pkP9B^]A?B@=TP69iBj
%W,BVhKAJVkhrhSlm*CF::?#t;jsIG2U*+?ZJa%_)J^l7PM+e[^/B_)q<j.$L!&4\26lN,IWLMLI@(<.>E_rmJ/(!Ne'6SrNHpY/.
%<"t#Hb`p,QREBc,^ntGJ]UD>oJHdjO;FFE`I'PS-+OMq_0/&=*qoSo"*'H>IOuX>*'&s[$!'A@;iR)b@<It*XFe%F'=Q[76@[%O=
%fW7kZ7Zn0E-VQJWn4sA;PCeX\r(YkH1B*A@C`Ma?M/X;J(4+[CZKN,qCp_261_oFH!6TN`ZeNLp?>K>&!8]oqGW+4ASFZ2jA`:tQ
%?6:(:K%DdEmMq9LUDp-nTQ+h)dc,aqR/bMaV0;6YDJsaOkt<O4\[)dE8g!*.`daZu73=0fl]8dXhAVE?6&BKq%/p.h[_K:ta/LeB
%0KQ$RH;2g_<\p3Do7&p'qLa7[,$=+>g>>!((ID&:HM_'S_4<47FfC:8&pS#h1O_g*\\L\Xc2Wu$n_Zio3ZBLa6UeJle*C9&A6af9
%s1^A,cO5H'h_-StYjK2XiGkLWj3`*jpb*2.s!WdXNEYN^TalctG]?LWT/\cOc2-m4ci:,B4PK\m?bkS!$RGPHf5:QF&`YnH4*P"S
%>.l_8I*h-G+'e%)V5F8"d=)#>rk''ms%E(G00lR&]"@!T$ggPir[W.M8OGLVIt(a;Dh%^Yp'&mANq&sppTlXmK4V=8fc,"ta+^sG
%ZI?S.L`krl2)lYc4-UNT*tsn=<uf0!RqiNpRI;?RFt]]k?&15Xc2SL`+Ihume-<sXJJId>ef,FZk/gBuQXU6`$]W!M\9j#\<#<DP
%WV+#X-dLW,d;Z<Sm#4Eih_,a)QtlZ)fOK*m*]o-=S_`the]m%Q:[Nl0H(rX"@]t%"GKqZ;ESTi%`u!4\WU7H0Esl'<oY6:ilU/m8
%Tg[B<D7&*r?a85SXim9lnZ[0BHMq=<W8.=.ZGUaDAUj4AkGUAriEp)MSSMj8c\>/k2>4do8YQu1Y5c7L@ACM#rY=`Ym#5/\X`<Yk
%YaFq;?He[?\^7t8Te*T`A43t)>?@hfmKP,,]s?&NmiQ$@qW?]AEtP;r7;Y1e3)*cJ;>H:9rE`H#/k^iC1jqCZj&%fZU*bM12;_A6
%HekI>p&J#`G6Y0XZHl8_Uuqek#9Fl`<N3I]htMoiK?^%eeYlF*`;?[sS\7<"PEQ.&>m-K)"8A0s>q+UZACG%lpY3Ak&G'h4DP";9
%RFP,O%d%`=`g'X(m[s+&>]053gYX%L0q,k-El4fWp4P4sI,*QBQHTf'8;YS0a%,(5[`4jFQ=+^9HKUsoHZu3jBD7ZcNNe-)E2bd-
%WV2JK[XnB-ERsV8SN^YRMX&LdA4QN@46D[Y0@k&@_8;bX4.1pGMkB@7B*j"_!`,TKlsbOuDure*1u^siTB]J$#fcI^:#e&,WOYc6
%Q?0Y5\OYYl?J45*bfse(F*]-Mri'6#PZ)d$2fjS[:8cZZ;edQE-aq#W_=_L=ksfE>14"(YCVD?iDCH2WQ?(6Hh/n_F`Z'j::FW4u
%(\;TreML-<p.D(Ze2]L:E@N/DcY@pYC4l5-KXG0>rj^LjGb<S./C$gMoGKe_NBM,!D%,-/r*<\PZ-2j_aOV5E>!"hbs0^SFohP"o
%<:a$GV"<GYQ(OR[U=q,/^LIb]B3PF+>2tfYfDH\kn$.o4%/-'U&[g"XRq)9$Z"Gteg6HN]EeB'NBhII3ZBAM!p%fi^ZdoA2^+!?#
%S8OJ*C59,rfssJBF[Xg[4;nXKBZ3[UC0i/]\l=!2Q(22fi^dj7N[L]<C0L(K3kKNlm(Y/U^1Rk/(BCdO`O2\HZH!-A@&ONpa#u!3
%)gD:Of@6(S[ef$%V:Fn?'&p=!WbND-heVQ&j'FB:$;TF`?)[;_Umt=(bf->%N6PAZ*-B#YHN&8(G_@Mn(L/^B+FijMH:DN%l)d_L
%;/6Rj_mA/dTff%Ro:>@")L/)7>]3<D/UtKo2uYf0)+G_:iik<:5)Y0Cd3*Th0%0<h[C\MY!^QWr7cLf\]nf]2A_QQL[otsRQ.kbQ
%:jL_4_'UKu6EY1IHjWtf8PVaO9l`L#L++83o%`<(2cZ]OkDm,<lm/e'gi7hDn]p2h9K?`UXWubj;>9Ri<u0u11tHp(lAps/i/b>H
%Jk<Sdd/:Z@$jOFSF;uggqh+Tdi53W#=/]D@qstV,*k+3L?qieklqen^$/%I'lC:eL.[tCQ3lBi:Q#/M/<)V>:p1'UA9H#Z-e^[_#
%pXX"nrnbhrYDo,fH[sd7Iff<;nQCJXH>fh(OP"LAGH0H$m'M)@IeuOKJ#:Ohgr(<BKi?;X0R?@]KobZ+fYq?')iZo=d?@>\H!.,;
%o_"\fEl-aZ`eWZ^M)9J2)',M/`@jAJSdCe9iVE$=#e8uj>tE[f&!"f,IN]@^<6=:g,CD6Ho[2E;Z%ELjLWdr13\9rl?30;cnf"Ai
%7L`;qF;[;[%u.]eh)U.ggj(dp:OiB8JJT&,J.9;)N/XP_^'-A7Q"^-QH$\6bGC`V$gX/Y2[PK-3!#&)2.(>4\7Vl.ri9#p&*0==X
%go>leD+t7HdRf"PW'#s%$efm49`D`sf+nah%][Y)d8?f!/=hOdREHs+g$J^kl%+THla5iC)Y5j*E?b(`NM\CPp"Nke^i,?/@1.n]
%Gd%jR.4MU;pRu]3Vjisi7G?e'-*l'>7Jbi>G9]&r[T;#3MnB'1YtKdP=7(Y'f08!$qrZc.jjr2@O3P)qMtN@o_o%,'rVkp!c-*R4
%Y-3"Qe^8='eY>!GASL8V_u!6sK;FQgf:T2SO5%CZVOnW*Q*j]!Ct/72fY=!U[^,hAH?839mA&(Ok_["Ue#Y*=>TUmcO2pql7kZc$
%mb5t;CA6T`G,&6S^40UpNSSe4Tl2ck0)>5Pa,P#0lLt29mFpN,@g)QK+5FHrXrKA>p:!!RDnYIT@%,)Ap3:6<BYXAIk?l"!n?KF8
%>((hqXQ=UuT2tB/Dgkkm)H@;d2/ZbaDD"',h1KDI?d5c]Sf]ob5/$LZhFd8(dU)l[]R&MnX!s!T^"-ktN?9Zp+'a<5"2U^%X.T,N
%&)ap458rk"l^-pq`OF`>>DlSZ]SO&!h.)g!Hs=,2?>J^W(01t4QfYieX6/-<qQnp`Dlp*IJ(7fk*8eF/qXKi'j`\9/*ImD3>2.dk
%i2K_"Vr`]ihnC^c5<n#,pT?]i^,Wdun[Q$4FmTEOi5Wq1iraZaaXt:,Zr65!Y92W4pN64k5Q#c0li!C%SuE1Rlg!'q-'a4$2]e#d
%"6TOSNdkQEh50Q)SJDc>4h\>/Ge6oCq9;:`_n1o//$%u[YIn#M*HJ6JCTN#)=75t9_<5$H?giGGdQ:ModCArJ=(+brh9@H@Q4NDC
%HdP>_h62=Ci>.,5?ghlClI2#rNB=8Sf:&%E]cZ5j%R9_^UJMVk-JS?=h9mCSmPjUWDg1*?4lQ+8\(A@bB_n9+#7c3Ph7A)cmC$mp
%fY8d9]t&?2H2$("cU?$b@MnQZ4ce&WX8:k`KMRdXW.fROYuSgW/AGG.Hm*Sj3hlr2]m&Af[I(uC>E-<X:O]CQ>1\8)]:E"VmQPB5
%\R4)TBTHqu^U9]b[^AC:W;06XY!Ao@pM4]^4uc;>@cj6@f$E5$UD:K-n51Ib]0TqFCMfD7$KJR4gq%uHq$g7/7tta/^8P8>lh9`+
%k/qXfnB*@HIIhuf<92l/!t*ntIB,O;T4bDh^%F/G,H@-@3##&mI-]YZ6F5'<p$?\4"TNe8Fa9YWDJ-2Z]KQ8%[f(GuHkMo)e1@:W
%;ZH.R1;^IsVZ!H:CU9s#IMk2kKkj1;<Y+!/pM2kDh4'DLE-OJ1Cu/Ak.q+A^FDO(@I<hoMkO'sOD;p\+;JiLbo.?(+9\!V<a5N69
%o?[*-c.0MJ7Ac[Clo%ph&)WKpSO80foq&eiAhpk8Dqo\HJ$aXchTR0O)H]MmH/mlXWu[Sn`Ea09-JMaN1H;r%flh6-mIp>6dB>VT
%gfh/4AoP&g4rWdiG"5h.U3#kBVS7%]rR#._bFPJFLN'+thEWE7HL'GJpQ+@9q]A,$)>Njh`m';!0>!"IXfmd)GImMaRQSCBogc0n
%rH,9Ynp5YreQaV2]S1(fhTFD5-B&qHh&\]-c"h4]/J.n@XL5hC\/&_MK@4P?R(i:Qq?G$`He3$dHUg$<m9[.@JLJ0KrQBh_e_642
%>PN5,8YX60?WOW6[HFS05IT+,$FtGaYueR:GtKBqCc9&`\9pO\!<M!E^sU;KAj22*J.94gBqA5sS"Ne(%b>N9\*j>A?bCq7rq<g*
%p[:+0T@UGgYOko.h&!]5\]`W9]CFt(UW)BO[JU5W9"Wckg#r(`:KO^MH]PK_dd+g3T_dY6pSM5A]lV545'm''m<j@_1Y48Z[\e!@
%p3BY$>hrMuhsLTEX*[u^BBauY]s.>U_=#2te"*ut_=5c39#t#t8Un=R%K->m]gpo-%''Z7o2)j,MbTfs2I>Z%muQ&(a^(.XfH)2q
%1fk]%4dukue)5o.A#uKfhbQD$W<k1iPL`-[^tldk2-p^ZPkU-[63M-MCmdb^9LE=6@L3i6DcZ]j+q9=_RRS]J>/j?P,7c-RjMn\j
%7V%!uq*dWe(83QZF18fO#mKdi8`'mh@tkUMbmZ>:'B3d_3,O=F23!`F['.TD1fTq?iFENSbqq`TcXXUDahit5hpT5`f#aQ$Blhtf
%!ka)D2q#Der%cI+ZC=e_FcZ8h-R`HbhIP6jq"[%bc5]uS-DBtdbYAgTQDV]I0YO",8RM=9B%BMBaT3s_bnOm\:RIIe,;O"TNm)NI
%iarfJbc7t<-K1--]dUHbM`?o7#j]P5Ls%XMrHZhQ2OD_QcS6Zl7$)RNbs8=WkmDRn3W6rC8:1$tF`e55q)9OU0\#s,Q[AU*^u0T\
%1o!9MgTR7ARk%+igS5:_55YIqaVS4(@QAmWoksBEGl-XGEjg8hf%TH!O.pMrr2jL>PUqMk2lbXC)&iGX2JPK-h^UX).Y'nXV!bC<
%9mG^9WU?'ZI_X:3RI@mR-8/eR9=MujJ8'nWj34\YhVPSu-P([Ynhg"mS_D9deuRNUGl;UKf#F87ktcZNQ#QCEqA_/,9\_Fq@K"+;
%O4s3UqBf?'@W`\di<J(:[*GQC>-^EkEr4D1RfE0XA`N=Mk1=k\eFH,%en\(<]KdE>f(SCopP5O,SY=\h)m0[Nr*qUp(=f`sMmN?h
%1-)(EJYRMjl;Qk;A+.BMlV;Zq".7SR5??GS2u;,:B7!:L\k4YNfisn!.W17en[Gphc,R4O?WOergn!Q?_lNZBqVG2%QMY%&J%7YV
%eLaP?-F%O!HClNO+[aFds0isYG;BC4mPjhUD`lqq?C:Us_16l]IJ)OL]@B"!qtHD0?IPjAE`KgUpK*gtD]*+iR1>^IL]fE4\Um\5
%%H`)tdF(W^o/Wu0B6Ko;K?ZnLF?Co<_6e,W>&*ihH*Rc]g:c&7qW30>4FH>d^h[<+R=8hAcAqe]nr8\d5)aI7>+GBRMoOVS>7X#7
%2]MV5mM[09EbA5q";YI=mp>m?gA1<ac_#)]Bs.,i^ZqlYY_XiLp\&NL4qt`En[SR-Es6aYmdQVI!fl/DXhAtfot&hdYo>opnGM3J
%k.`#,Ch=V^G)do@oPAJ5^]0>$=ZuP)H0NoYLL7b`rq]Rt101$s^H]C8LB$DmjR=d1<9A9#]=rK7nj*U"A4sOi]aT&+1IV$88R)Ch
%_E"t&Vl(:4l<3oo+&u\'HLSN=,L3O\=-fJkq\<A[K?M_r5Heoeh#.Ga\Mr"gY:^'S!tjMK_QiMOj6b5!.+94WN/ibCi<>$>R-&Gt
%`n2?7I5t1e/'G-!=%bh:SbIS=hE0Tl<ni)RH3Z5Wos3`#'a)X)[$YCsCo@HrBt`Y:mkhaUWTeRg`oYT#G`9mH&G#1OS7u':f%@6u
%X`KPCBdJ"_pQ;/=2`?$+bsq\=hn&jUe'4(D?6C._)L%ruN9_Ei%LAn%S,;XDEMNANGB%3YfsgEAB5P7fS,H?D-3=Q-*rQpt)gC-k
%Y=+U]n(]qeI/]!O*QdRf2XZD]I<.&3c*-GgcgT?+b%5YTRB8\<2X^\&01TfeDS!NE$CbuV16h\'b)^"Cl-5:Wo%p.4rKX4gc14[^
%^Y-R:3uE`B/UmHf484O80BmOlROs%O5AgQ4h_-oL8'a-8`c,!;lkP3<`foef^J<qcYBq5CT_TZ,[e;$5Iqn=e2_[M0G'i`N\<a>J
%5-2.NHT,Q<.#DR(?i:J_2>l`0GFlLND/ZN6GmoTYQ[a3fA[iS;CR[!GHs5fa0(sh\Df-b98lcJgVgEW<D`2Kbg%+Z5o?6^@S_70=
%r?$e[l2AdU59@0nP7Na]a0fC>BYUPg]tQ'P+>__cgV<\hCb?.5NLA,BcGmGeN0.'l0)F71]m#k2!RlFGn*VhlJ%)_2'\(7L8NWXU
%2"ehG_9Gn_;3Rj4h45W8S%N*EAE!L[k%_qbYAH4%Wno8/'Uc]6UV!i(r'c[&<YdS@G_p;sm^:r$JA]i\>'mfno&D!J>T'Yeml_\n
%/2aW>g]R<EiTdc"f+4%tkb>f]GJ!5QNV3"gc+8=ua![hcq9!8F-J==>_W(k?iR,^.=:A^`A/3baM-GH">A^RKJ)ume91RN40Ts"+
%-UY.!Lnj?[#0;-5mb[a+l5+"%]5'KPhB,I]jh/$2qq>smbqE/$D8?^#I9c[ID;;"mj[k\#*3\bZD_Ag^92BJo&%1flCR:r$k.u?^
%G=-sc_AaFFP2i/V:Z7I,=.61t:LH8eXCH@Vfsn_dV_B@!2ghg2D:a/[\KC1iqB9[]St4R<og0%7W>gcogY9hd"$^Z"on2]`GOHX4
%2,V'=c`YM1UJq2AIJgTmhu3E:dCkV7qM"Vmp>=@J$e::pc1gmDi1@"Zap6:q$rB/P`W.H(3&apSK6SIb@k=V=o!@J<GFRXHPBUcN
%2!_h&cZU8>LZ.sVN<cP%!JLIDn,!c4bT_?%ocPn.flZu)iqM$1_7.EjGhd*$h!A>V)deAES$cT&=,N]s0Fb;f?3i/H>J9X5n`7gJ
%4)Dh!(L)gB279p?>cPL82,a+l![rZf476F]G/*IJ*p&CS<q#;[;:O@5!SI5?&d<'YnRVT"%!9aaUq=*s2r?JoZLJ_RI"/&>q;uMt
%IdS`Q'Ju=&o+fR2K;(3*\[c[3*DjN<5KE)nQ)c]BG_1_4k/-t'/KB.cG,<mEI(Ik@H=T=e]]nddR/2.k3L!tn_/C"!M_5'HId>-k
%%K:X[Ed+d7A,\=;lInT614OsXCZa\d]CNXI([A3T(.LBX:o:0oHtB)-mth<hJf!=850_YJ?/O;hSi_\<rcf5"lR0*V_=O.-fBTF^
%9AH/0_D;]fMVEWR)[)t'DR?hnIXHD5iMQaEk50.tnT^i)$!:Ts2mQ6CWfq74\+6n'I=?.E`4Yj#m6U@+NS=rE,C:.fNKkR@=Y=nb
%qmG5>\]:nrHS*8f*pDbWm9_5ir^fj8X7E%A^#m1qLS7CU@bDP>YM]Z!g=FQs*]oV?rOQ?#r3c<#18%Yh*W8OLF/!SdRQ'AHb:gVT
%^002OI\fgiR!dOg5O=CqO4=bLM*9JgqXeM^h(!Z`F;G$bX&!puY0<eh1c1(D\C4d=)*D(bVqq'S2kSZ)?e9e0+5XS0db0K+8iFeD
%B5`@Vh,5<0b\3gTG[dkT@.q;7+WoP<!Ts1RZ_XBgR!ou\J(qVZI+5.Mj#X\:i/j:1GA;0.:k1O-Y4_);^2:#0eotJ[)ikdNRWtI9
%c8SP,?L*\(VR>s%ouh@?a*>9Ya0+6cBAAAu41qkWgipC(ioV'(RI*@A(=%u%a4^<ELNdBk7GJ?>/a_r%B:jC.RpSDG6f^(fmcNDn
%)<tP+?IB%&iY`D2ZgSu$=1hgPls2]ail4d6pR5H8eN;7/F?e[>#E"IXqPDNI[dZcNegt[^NP5E<_7"+PqXm-NDk>a`'b<fEbX2@t
%DnYgeATZu"YDjoj5Q,8;mXG.X68\BA^04@fHUf2M52L9P43t*9Zodsji-db7eGM*$[+JWohV"L7d;sD97+aoB@2$$@b2P\f'Ae35
%n9qS?EG]@#p85*e?gH!.Z6[A_r(;j97@'$HNQ?\(%sXAMHLTn]O(N6Mj_3oCk]ed%9m#fY$83@ce^jK7c0h.2^MDC]C[_#Kf2>/'
%RV]gnheJmgC=S3\lE;$^Gt8R,Ogb)BDh!1WVqF&4dIlW00LMur2OaTu;p_Jt2sT:emk0LN1,IuT#eR5!mG1>h#YRW)oYn$,r'h@k
%Ct<cr)Z(i..1N_h#c7cRYA,]q)dhG"+#gp#*G\&arVG?0[G.>=Q_CTHS:ktj?_EBCFqJH_J)#G,fQl4s$-2K5UPJ<P*.9,aR?#ZD
%fM;X5aPo>okDRS8DYW5="#,NPJA?X)UJ>Ss+]\JM@>nH6f=fnn]`Uduea;L![/f(VMjLmlO"]s5jZRSC,NW83fW1-hBO9Na9/D3u
%`lMl=C[_#pNP30+>81b>)u(2j?S=+5]`%?0HM"cAjSb'I_?-*&E.+j:r9NP*q'33dbjEHobqHP50?ro3%CEf,Qr2to"+=J25A4BD
%47lusd:n+UpTQRN0tMud,L7=$]'ldq?%#L:_:%Apl_bC19KCi\^c$Yq]`.D8o?h";S%sZ&o38Wmpst_C4EYT?gKJsep+E0f][75m
%I/*"bV#D/ejR,d^a?TKcjj/k*[I$uo"[(7>E5_2r[VCFuV`@m#O(&l>b:Cc.?IaIRI9SQmm=1jKP1o3'gkheWkh+[EK@mjFH_.N@
%f:(;4DB)AKSZ8$[L"FU5md@^S`HUeDg?$<MSV-oZlaO+uAdF<CK^"_D[G&=liB!R">;t;$)VK%eI8]n:jjfh->_^.'_&7L*o+8gA
%=-`T2mpCr$hD6U+%B@Ra:]b6&lansP7)+AbR%')tQgJ5Un0rf"fT#LWig3U&=)cB\M9]lUF'C<QQE)&ZY_nd<rUPQj),7A2$0r(9
%_\8:NVlo&k\LM.eTJOIR4R,nc#G'#?I/hqLf(f/_d-4V$>gh0f=7Eh[DGWRn#,;O>cr"M:nA@hLAkW<1;VfQaVAO<fWIb'f**8/H
%cum^=FEY:k#q^c7h/@H5Q#<5k<D$VfFLqSfVZHXu,tqm(J_HYeG77b,X\,e9rVj[pp=9gW\72c7#iG8m@4<'2e(t!%A2'TXjoZ#5
%_l<rgP6H)!Q/hjfI!ED08iWA-ZUQdhaR*F1BMR724JFZ:U[ai!%]2BrJE!*(h!KU+5he;1-tdKsD_S9%L?BNibsr*pg=\W9"dUhs
%B[_Pdbab&YIJ11XJus##"Ad0E?MI?+O%SZ[&EZih4m;Q",YlLm_>4#^INn[heAZIV4I4mOQXV-piQRbn@*7/cm($"c.L8Xn>iX;=
%g,e5NLi+[`1>,f0IQH['g'>O3@Aa-RbV,Z]8DcXI0=$$V`5I8+WD/n2.S`8s.P3i<!Yb!l/=B-#C-.(?&s>>7Z(CFOJO""fY&!qe
%C_Ndr&[^0D_nf)`bS>:WPtPcM3(di!e!"[L(-HrApa$A^D"MOT!(\Taq-rWKTq=\L=\2kOXK-t;ZK.[n^'j#hmWCUtopTM5X>:3'
%<.5TE:F#0.,J0R5<f''L+.e'B3^,)0[[\[;OppNe^unsm:h"7p_*#qKXSh3cJku)Ig4DI$D9/D`n5r`Aq,toS/ZLb#^WRl=&2^%I
%6,F43IR;&=HBh$?Fs$MaR(l66IdX:B:hL*Tomc.&d]$NCBp>=rmgKfgF"4M/HCS."HIdAWUGW!1SAg$iEMD$oZ[He?\C5A=HP`rm
%jfiQfl4ks[FFYf3R+MUkQR\JHIbp[c]6_Z>4_LcbY+3?IWgCdo(I>j$"=dj)S9]#8]ZG3VM4HZk5:%W<l2:*=ZW#u7`N&m^6dL6Q
%,>G^EB@EEU2+..;Y^9+Gq$!#7r#0HlBON3g$s&S.3EopH'kM:nE1uZ"DlQKSk4>JQFMYZkf,T`ED:BE2rj]`dUX&k_lP]<KJTZ;n
%(iBhpF5#3rF`q@sT.1X1pBQoA=*2bbeIP.*oL&e1$PtQu]DKu8e#saCqJCYLXm2shT3'ZKWqFDaE>3m['S#]]OEnY)ZSf90=c/s=
%ag9PrXp*s5KLrVLR&%)-*qR<jVX'q\#utoHMQQMkg/aZ5oo-?.fYW4&U$Dc"Q]iflB`IRKFU+JJ_;8L@VgN=DSp5!Ghpm1MrOh/L
%4Zk^gdDq2MS$24YgUG#E\2unEW6:$@SN[fpn"/-i.bAmAI--XICCbWiaSig';>&kA%=^T\lCDXmH@DV$5"p$(UEQ*ko,``K\`)Km
%hK=^<8F:R^HcYX:a4KL6M*$HH7j)FCl`=^3+eTb@VD5e?EB^gdq[%i-T/Q4ILgQ'ChR8lV$*j"+jDu]2n(`Y;p3DZ>[Nas[2SRp9
%8&Hf>l#>d.Z.6[@FQL(#rg7O](Xn.lh%OAj-`<J[/EXlAE71a3ai\PsT%7kI,&q0lbWj"t[Qc).:S5*Rg?FV.;o,n+X6kq[iI4Xl
%esdNSB4/?ir+Cg2rmI>MP30m!^&GOQgH1HOdu,33.!,L#4$G`h*RE9(&o;jp;^9S![:C!<oNLYNB/JcL*t@rK'@h>Y4dG4fT)td-
%:C(o]FI'Okm3FSRBmBK9cj"474,6n"96g0:e/^B/WR$^&j)4=]TlX*q[JQ`j7N/[qH>!(b8<4AX8jC.!_s%t(cU9KL]ZDAp47V)^
%Lr6"^k<+SVMg'IjoXpABBiniR_Q%@tV_t*0SpADXk1$8>.<9T)?:,UTB.nkk:RPDpJ8%j7]9Sr%.ZIm2pWi7BP[jabQlE#S"B0Ci
%pM"^EHW8gp[kuAAeEt.'dVNrd0pfK_X7<0[p>K@UROl+ODH/3*3]g^S\&PY[Nsf01So9(j;>FLi`_SQj=`)E%2V]=5c9K#s=@m>$
%0iG(0+-a3XP%N2n\t,V&i[imU\DKKRc*Wo9'4K3OO36OU7l"a4OuLef^aIOTe-43DE3st>?AnO8]G@9K3"fD&7'&9',FiHcm7m0'
%c=mV$lraR%<:-YC7=<Bu"]LHGHSnTcbnCj7N";))4E\:NG<*9D^U)f9:VKigP^j<%*$)D042]?H]SEUM@q=%$PKr:Q,Ne,dZak:!
%JDf[][eU_Ectk[(&Xf(,;hLtE-^pXT:tVET&XjNf6P=Tln+=mB$Z/Tr85DpmS6e:pn45/)WKa"6b>*sCCsRUs:ne7D)kDp8b`>Hm
%aWkrVNe;k+?M!8kI>T<3f!N)r)ZQ@5%`I5.K7WV([QKK<Z0CJ!pBXI81[iC4N^E1s\tO[0mlf(OG4@;h@HhL/dp&Sb/@R`[Ofb#V
%Z)64:nR)S8=3=38\p0*SGrTX-U=WU`oloNkBpK]2Va'n/5lR\k\JIEJG;9@b2&C>X:J]!d/hgKTeCNr@NU=^orW#J"ns8]9B&6$.
%I:=OqC^rPom^02lDkV#l%Za450_J,nnTaO+bfQ'L^o:)C^7.0$mdJDO^2;,$9`o@:h]A"g;(QQs%DOEK:YXZ9s#GPb5NQV6H#Kh8
%HG-Ej)Uk8!e$^W"kjkSB*U,B;8:D;gdi;`.]2\W5FLjHHoS]a=:WD;k?La_`FA^G2%Y*OFh:T:1b6"Oti+(U_I1d="Zub*RQa^[C
%QHF!9+IG"70@f(VZ+O7YJ@)#t^VK&\Gd8tVr2]M18`=o'i2H_h!FIJXP#Z8lYIB!dqW/Rg=$+8`TB!\2S+,*<pt'$Nm2Nk?W2Qfg
%[.<0S<nY.h+25D[$\$jhjEgn<Z1[2(%JmF'(U]k5]A1'5K*th,eOT4I\$@*:T[%FSZE!U6quQ"jCc/]A""5h(EI!Bl=f&i^kngBO
%5.%7=Mn6.C&;$r6>*i4s(Mm[1\PT]jqMNg+20c/P8uX9KW%2dp$a*=;lFe[O:D'VCl7f^EU,,)8I/s4SMbI+[r2W_6Vs2`-:LF-i
%kmK`YF9douVOBS`C%=F*HG+bGqjhu>F.q,i>(RDC#%9^g'it[]a2GFs>">-[V+2ZTHC\Kd8Nee-TgH&MVFFip>4&!7qKCF'SS^5$
%p,g0Y5kX0bdSbGprnLr2;k*+Ohn_M5S_6E1rC[Qa_$;AUQ^6,s/P"%kh3l:Kr@V::090886,sdJ&l3PQ"kAu.lqV2k[@2P(q^6BH
%r=i#4^U6f72qN6CIc]8,hjhsh'IGFr96kC-XR)NqgDdN7s3XQ$Tg+h+jepXq:E869f!'9V3p#C9[;\g.!Hg]9ckZe+<coS/6/mu(
%W9VTZe:h7'Y(HnO$R3puXR`fR?(kIoHfuZW"p_G-qbT/i-r^i5'ie<PKRtm6(;uZM0T=OnL^'R88VkBh+Ph/%W[8Da74UVZ=9sLp
%Ob8TM=^JK:`'3nf/qD_6$:*GNl>'BWF.b-$N<X&+EZ8'm6=,mBKr_3TF[s!GaUIUH1^?@S6T$Q#abe9J4?bCrs5pSbgBM+HdjA"N
%Se>'AX;=^8$FD;pO!/2%UQu9GcU*3J/lTS86$-7$lek#knAL#i<K&VkbO^7$K^""[7t@dH9)qeaLiX(teGqi[!DLm3H*mq-#]T#G
%5jX"$p^[B\(ON,r@1`]3/$KV#/t,F7'b+)di"H7/Ic=U_C@)k(d=OVh3l=XaErp$6!A5ReEZ]WW?8]MRg/e=2EJ;\>ErpT&c%)mW
%?FYAf[0-!J2K34e\]_&GX>u;2.g1B_.teLd@@/h"aNIgK>:hh+QG6Gd"=QYLki[nn.)lDj(o95h8H8blX3_/]71$E=0O#T'kJ472
%!3?0:-nP\%ca=l-G"f9I:6=\tN"J=s0L`CjV&(,eS2&>h2M!aeUf!0OSjP`+$R]UIZd^D/L8bA\YQ4j*?s^r"-+!p!_S#.?*SOMa
%fP6EpTaRM*+"SEm$t-YS(ipMo/H<ssL;.fbG0$%uX5#/?9Pe64J9TWo<(Y:6%i_*(<#p!KcrJ89ceoTB!-]A")I[mt2Ur(qnX:C/
%qr"0j"WuOC<]pPl9V+$IBkUcR9XVYg^Jg&j@?<:n-4^M-iZNdNFq[m\F4&>oE([W7c>4AU\/*D,&Wd_P1Vpn../#d@^^,\t>mA*\
%%W8-['$`7+Z)#Kt=>1Jb3(,mM@\O9>OQJ`G5RhWU3!!tGL['M375QL1:&s.U9ZqHGO"Ng516Or30u.3a!0NfHU<W8X0j?UfD1_7K
%`gcJAVRX/^#X+l:?qM>O`;gQuBjj<&i[uQ3*FbdK!.G^A-G>?XP>FfFW/uBRJ6W(T:O;,CODJYW!#(,2DF-U&/gmm1GrjVI+[Q>4
%Uk/SCSh%W$2@;*fC^+:aU_iPE^bT4m_++KJLlVPV!1V#8fU?4q2$sE+"<aI5BO!6P!A)^)%F+9BOV5Gc^o:58Jmiri'c8'^FTRr'
%&1!WT=;I]pVTJGO>S3(P;QgAL6n][AA06Vr0LZE.<A2!GAIh2LYe_ZS;_3PlEZQu0MkK'>"9?l1!&-kB`*7JP,.#aAq&!flZ@GUY
%3(AjI'FqPs>H*rs&'kj^.bJtGhC`h'*it1bU`W1r9.qlV]_q0Ymm<&49'"5bKIB$"FF7U^/e^Js_^&6<HuF9H,3"Kecbdl69OMBF
%=mQ;CA6Hu%hRfgX8M2>dc70M?+6=<U"S"&(O?/!V&.q,qY#QYl:00jDfL7:,_%isXNh?uEN[CEU44+J@@6tLePsWb\mQ[%-OWMf7
%L(P]9Ad;Fopm5F%'0qYiMKDBF5$kH[2ChT2b*'`T"?Rk^=U2#GOLMQ@fG&N1Af'.!`-q\\R4,6UY=19BU;d36)]?_%NWCD)A9h^Q
%+Y6//_D2+Ka?Xb#+t9[Rq#t2@kBV=i7%fM)U&ffR/L0@8EkQ;,RRdZ:HcXF<AqeKbfSH@D=N+$+/:Zt::'EJs)25_IPdZ;I.N[@f
%A4Uk^_M#htfI.(A=l9]![Y6SiFA?pHF@L5Y/CG2hN+`D3pH`FCWX@Eq0$5?.H"'1/fHh\K7AfBBY9HU*/<W@gBLpF*Aq2<Nq@Ea`
%75S-U".6nrdKguT#^N['_2&o(&YB+=/CG`17j(p$Ami#Z@^KfOOE*.-ZpM&m7"6V!PZ1SgI592^`:U?%k!^@d*HBVeJl,!1%RQ&9
%58S/<d>JjBX@u<.[V$GMdQ%JSdK3&H5m\Zs@Z!#ea-`m:%CFkW!Js<\,Wnc-6'.)D4.abgrs1N^`8(]UM*.Cd0=EPP%K*\SSn!3M
%5S:8URZ09gg'+FM\P7nVd>I8VUOl!FaZr%51=F64%A78LQ[2g.2?:`L-L@7.k@iZR5`5lM'"`asaVbn8TJZ,[MFi="63&@$@fS"^
%JNEXp!$ch.@,cehk'KA+Ert8uDV/QZ,=s--)+nFl@8T:?U.!I1?F5i$C]Ru25G%u;e")R`d%(m6eB(,],(g"Q3iKu#'\-Rkb6HIJ
%"AnG]i!N<L."OBm`8M1PQ8\g-j8gC^%:IV=-+/g1:l.R.7@I(I5q%Bg)2>EFOk-;H5XiX?/X"2md"N6;+cY]I:B4iYa'iY4?G\@0
%B[?%FKc8f@&4]NpJc),2/ctJc(Qq3;&t)Am-H/h5\Xm-W$dqL@_0uEIP0"9['q@,eBo3aSi=J8o=qh!D_@8[P:pZ;G1\(5HP7/"+
%M6@`U8(&oBOG^Q`9E=G"+Wj3l8ea1"6:;Z-.gWor@#>1XE]I:4'8P_3j$120ki=_DFr<cS(a'#/L7D/?WF2TDd@nG@Mu_N(J>k=B
%2ahum,A"/U`kN2A)*dTl0XC2\gaaSja]qS9'-BUiLsFH>S4&ft)!Mm9P&XXR3Q!Tc!V*fG9L'r5RJGTjPC88I-]Rb/V?l[g"DBS7
%dd46$MBq<V.98ooLr_.JPGuW9`P6HpDud0H8--.%98!mkM"E90DB683Sl)Cg7^sYfV-,NIfOT`'KZ.sH,BH%h==tKmQUqkQ3Qj9j
%%9duD,j&3&:m?miihFPdMc=ZCAC$/?LII&aM^s]&aJ=q@?g7?0?G`+PZ4c&=0li](MV6=t4eKU^fnE^V&ITQ[b!@H_J0f+tOU31J
%9.V%s6/5#-Tn=/3'(/LY"i.DL,C[b@,c''`#!a?0+N9oQk+n,7]nEAB3-goq6:38p15a=CLkoJB#-e69(qpc9'gNooU3Va&+9PKR
%KE0GVfuaX2&J/df/&B[[fb#@?fT!*T)aOX>-_3"i7='8CRT1R6]I:"[+(//R<"F&E[GhB/0ukmD;Tr5i#SV96/Ct>cd32+/NR`V'
%)b8?#<7i^<<JsFW-/O@V3t!a=\Ytj(-Q>cQ*a6iKl@BX*O&f(3knV-+AOdU=@e9p\[,A0!4!?/D8k%O9(B-!sg&`DN#/LYt[&EbA
%TE2H(ipWt-D)=5;=J3!J(YLODMFm00K4]_fAmYC+,?G6i"X"[m@PC*$,mBP[<9U(i0QPe'6]=Dp))nf"5lkjNApT8qB.#*aJP1qr
%9,,1<Y]qc].L<H`ONUmVV#p](;bX>BSCm(49JoqWOhLA"JLO!_j=Dm]=2Ac#Rc*]o`6+Veo:cOXl't2b.Ut?"?>S-l5fqnArZ1IY
%r1m7DmKdT7RgCUVaAgX,&eZ*-iIdZ"E@<O2@6*+SfJiu6RNkYK9&*B%S'/KqP1ZH>_kpfcqu)%G#s"g6!7F2A0"*2QJ2&AoRcGJ,
%\a2](,]SPA79JCa$()HR,4CU*$JpAk1bL&[L'8\$F9rQ-/&H[M7$f"Z3u>1o=-N^TL;[(a!EqmX37qBP-c`RTEjX(^G66g_FGVb(
%VIiC7.HpR?7o**9Og$FW:I@NA%&cXkATCYAC^ET5PKi3'Qn2+46:&m.-*G@X'g`\^J`ZK`i=dF9Z71Zo#m"6:'(m&]=<V,^dGVMI
%AInTIJJ+abEB.>lp$>Dn?"%D+9uRpL.85;kOQDkJ0(Etu:HEb-3$b14DcYq*e$FSAG[N@JN;-L@9l@g=dtP`/e$P!Ae1dBN]h:J?
%ed07-"D'i]o513<X36B?LqR7Oct^*LP*%Y)1)+d/-+A9gL5*W[nM4$P!-'Lm_t[7O`LCIiCo(OK0,W7kD%Zc)@3W];)MSjmX<`HQ
%qB$69Pm@rWY"9R8%^R>X/HD%M]jc8Win^Q_j_g)uO%<9`D4?IkbH`@g)f.#@%6j(#),`lWRC/p61*3!GB*9VCj#P.*&AT'2N_I4g
%'cFpoMLOM<6GnBjKE.Ft$'iEhlGgsM@Z\A_r12$5W!uTc#6?(PcgdtB+^/03c';+]"p9C<b>bAe]q!m>ZK/JY?F[;3C*euc'RW7o
%]9;93@A!)K:@#ek!aV4!mGauCk%.UF`cKC:1'5)g..no#mr=WW?kgNRVC4CA#7-F%AgfP,YAm8`dj>#tOm#Ckb`bkh!BN8">$>H6
%dH7#o0nMh1WR+=PQ9kRjScMEo"3`NV))(0K)?_`k!FURdFLdU>$X;4CB8t:#1''ANO\`[pHg]CA4a0nkogu0?(+rQ4?dt/\?YX+"
%E_Gb7"lQ4G8u?Ps80ia,8m.:eo'"m[3>OdcW<<n#!JbZp9Schd`D[U!76gpALJ3_9bCUk_3SXW8TkY8EL08%eHp,#,bG1\k9>D1Z
%TGKf;<>g>-f9U`bZ6R>)/"srlL.*ha70eSK3hBF[^'+i8Xn"2eElk9HA>DPVBo&\>b>j:X8NBslVdhgqc$(g"`-gefc[I$/5r^LS
%!LQb<07(u53?sPp&S&)sMm6b=G=#>XJ$][8ACWsSYRoVY-2&P?KN\[e+e[mDHKiE-&0"4n&3X4.KZH`q\9>)0)dT,l#XYV[SL?:)
%o:06QMeY\2RuA&b>B4GqgWJP*T,:qHQuq?"^ml"D_/_-]K.>#-\SZ=XXN<n'8s[@P1PcKhS6_'h`dBBVG'GI&iY>M^VrZtC3FBfX
%%4_E3G:P+)R#A?l@Y>5&MBnM?-r]nq>QP`s%O8V8gBqD'W#0!+CYO)&:?!E1AZFgccRCdH6O]GoZqYH%dfh^%K=%9g&Ca-oa\I69
%@M2$S(kYpF31[4M>RZfF?a:_!Q53C\MV'=gLfdf"&CS'*n;^_L)tcbq,2MhSKLO/KJd#oWdi!tM*tlJL0-dtCrJR#l.K1*dZ(ogn
%jm]!oC1ZTO%P(`q80%d,M*V-[:i^3eB+WUF>Ss_uk]FJa8iL`<oP#fF1b!uQHrK`pS.fg%T/b"2(mOnI\PpVMEhVT(^qGhF0ph;L
%/77($RgfD;IXESP-#D^QGhkufc`p8;"&1DgjO,5A"e8uR9,p+?7D0$7$4/5!0[)t`5Dg71N";Q&`Phtq/E;X&?V!Wg,$jE$'pI%1
%&3l*)6!;DrLdPBF&p\L<</=@'@O!PscGfZ(,OCiXdl=^j,n@@]1+r`W]_2\q$Dkqt5uCTMq1^gn%*I%ARG8Nu6j!E]]X23M'$gm.
%7LDOK,`.Y_P*5N"M-$u'2Ai<%Dal^C@O3FgPlOLZQmkW00rPAAEIttcUC=>M7#r']4GqiGh5Z;BQ4t9DPVGE?;Pe2kA0lMX!N([,
%Nu7qT,Jn[hCeR8hLFC5<Gp]HE8a8[MrTL89!@\6Y:7das(T+O&<'DD`WHTff<^[tr7-^RAg3D!ZK5G^G1E1a`\_IA.kaRds0-$F9
%Ypj$jZ7U(4E7N?&bTqt^7HklSX<ar=Qn9J;HJ(%\SYW)+P5SpoBP"-p8>p*p1s;VUO\hF'U5tE\bk.2P\I\eC_/8GBaetqp,+='X
%Z3Z>$RK>apHjq_/,64"U.S8f:]LBE$U3&0T:*>9SP$#dbKSt#IMC]Lk1NaRc=u;lDZBBJ_JiOJL=`1A+5!fs5]#hea8Zcc'iM5-F
%r`_n<Zn^8KQ)9bTE&*"7hPXb3Mu1`:8G4??33fUi@r_[&k-c!=ncIoVTZr;UfSPI:P'f\2@T;3p'Knu);3(<FaJ4k@8HtRBlU@dJ
%Gou%1?kPlLbs)nf,>O:jW@U&.l(6Ckr(8u\7\$,nFG%(p=kp#u-,3@Q/lr+tidp:-=W8J9nrcKipsF*++c\*+@hJ0gF["he\faaN
%(8[<hc6kCphF*V,Ht"gor-TTM!HcNq[fXX!aj4l];I+spFE&B)-.*DT`:;GNbN7a1Vji,c5&2JmE/%K^PW%SKZt<bQ[:"aij$;#3
%MeOOU%#G-4Kg\Et9GPr0<0L'h;3eA?O$t?eJi,1B=@f7-VM"+Hf&ZIL%S-Z:6oE0`SY;:)i=l2:M*`gb6d1QX/RL3IQ7Rn18*$-t
%fTmsYHRJELk&MmYQilsh@s*H]3WbDe+h=5&!Ou-!@Ec^"G(Ncg2]N2kP.WT#qn1FXc/]2ZM4"s/CaPtchTc*JKgH@u"[/&XHn5u#
%@>._@OB7ct$'g2`Q+(ZarGqKErCnS:]9dtd&Ul8gDpPC*9*)A/5o-ue\]3@4+pW0WEBtA1<3/?>RBQl*>>\fEemku0R>anDF$gVI
%nB'quXijaXQL%B)3prCPdIL8Yn1::SOa0d)an0+j$]Rs*"(o]DBRXDb3glV.Ns7#RI)7%e'2:"kUi5\MKgqY&F&GH7"_&\/P?(23
%'"C[f8f,.#7O;l.NCk/Wb`I0+/%&KX:4Y86\*$+Pjg<qcY\BLVcqHsi;A[`noFn:PH5d;eSa=Nnfk=gr-.p/C.N4_^(sJf#UMfhA
%pG/BJ.7k2NM3b"F52)INMlg]g'd%\9,4k>V9#1S'\XCKkhr&?.30fIM-O`<gBC9Un3aG9GV[LW5/1d9]/m$G8!b.>oOL)KMQBfu6
%do5AUpp>TPH3c.WT:/'6c'&<79FT9]Q7AG^7WQnj/.*3G#hA:`Tc%U?i>&/R$UKntArMqli'Lpb,[-G@nB%OYP"h@BQ/pYV<QY/o
%[Z+b&ZJ`nq1b8gL#W6l_/Tim%itWd]f!04_q%1eD?SX:Z`5!pKIDOTMA*04sbeiPbatsb^1RaSJ[#EY*g.+fB0Oe`c]+R*C-X5%7
%3a/"*9WUsZlqKf&g7'QV@<#HiD,0RZPKg(bA9BB13dmUd:;SH[n.;>U$$%e)Si0!c;e`Kn9h<9:&<P&0q3gK(q.]D1J6FZm@jQh+
%Tb%m%eJK3u=gCMu;IYCC)4l5u;0"R`Maau_ZTQrs'+<\j;$rsdF1bWl@dO1fK33K*g.UP<MkQJFZWK]UO<l@4Cf81h.7k+aRps[,
%LpN4HF6c2N3U9"L^C!#b(j4,]#XRmRYd7B,XtfG4;rlWr'RA!`NEZU-Sn$*79;XXC6!]b?VLV&A.K6E^h!Z`YdtgGTb?\c]",173
%,"E"$#RNi<0S&b$`@s,*'444SPbiIP`@a!E/*"1Ie3hkpBAfP\Y]=j,Th@*H/?:$-$]-FTapK4-!r>-Q2k*Ib2DQYd1]$cJ;8Wr3
%C1oKFR#RSK4?JBTWt]1^<$Sd>EXHlNlPN`92PO<[5b+$'6S<-T+@tW/DU+VZ]SkDA)+[p;3%N*7J:DYJ3SPZ?UVSGP(j+&4.2i&X
%-12ao'c[W7O_687d=?1mX&1&:P6Dj;'Rc"NnV2A<%Y`n]:5]g:G.@`b_&BQkK$NB#\OB/FK$]oV!tU<WKV;nC2[a_h5ceP-8-=e8
%Q%Gs9hC0;D6OH:u2[MuY#tJV0!k$rG+IslGibXKCX)r9`8\BQsCRg1s&/[m2dT3XlVW6)Z>&BC*'Qj$gil59b6"8<2K]*q8[1]7`
%=i:[r8B1aG__j[rMaNXh3fP=jZQd>@<6u^NdO44$=]WU`o4VBJ;Q??WW_J@Mk?^gu#=gM'Wc]I.6]Gp"_.nuPT]G_R,,rU`KpTbd
%^cE!86@c?$AjY'n`[PG87Ce%AZRKRi3>i0,#Z!X<XgpOq:N7EXf<Jf%\g$:Y)Q+hlX9+tMLRrpUUaQj8*/N/I$FlQ>MN3Ns.a-K,
%!>^["B$eU3la%<48F%H'Ube3DdUK;PMciU?(ee%%l0b5NnbiP[p++dgGu:#=FcL%J&RC<Eb*AX<e+bU`NlK0!,tU7b*-of,)fne8
%V\ji&49;CIfI!L!e6Jhc.[NdlXsO<F$,cZD#GqnC1L\G1Pn[eJidjUT.[O[g^kn>`iCq[Z6),8g*);p>U.6nY\0rUA2?WSmY&L6b
%l,/BEeu,<Z2n?Hh\`AVm'6+5]P$D4!VHe.t,sOAA<DJ^5Z\U$Q8]3):bJ?!sUlU+#37+P0.O>^3.J1\X(2tV*OsJsN8tC!Z[>a7#
%=@ANNXFlVY)rr<f-VbC*i7_/m&9d^t?Ma-fUmOt"X"hsl3K2gTNTe/:X!iI^D+6"W5RC1?r'FEpaO&&6#qi+.KAXeU,NjbW3QVLU
%Q&,8#%LijRnotpW<+LN<6mXoE(%%ZMU`u4#d^c,[K2-J'F/)$/'N2DM,_[+P)"+DhM[@l-17Rp\K1k;f84"f`0euuGE[Q&a<YB:9
%l*tj4U@ME\j+8Ujh.0\]BtsfY;Hoomr!.%7'sCASLjA6`C\Z2u`iTEO^X/Z*MTCQUF91ol6Ve&$7*`cio7ARc=k`k]XFpo6eu'4!
%TY)P^_,6DZ17+\\`(XclabN,p<`9WQmUBPnUaX.79%%iO"q6,0mFjRsUi.SKA&*h6P2r13!]2m14^JSr2G%D&(_+8CZ,4Q2G7`tS
%o3,'`bn;Er*ttU2/5*"M,!Qso.'atpoEl\1A#"@5PHTm9:;30-j_IW#.Y;W1`G-=:bE"G]B9IZNp6;YuUP>MuZ95F[.e&On<NU\n
%]gj@oCBd^&'#7Y);mLfuRH0BE"A6/TO`FWnP]/i]cSO,*J"(qd*&+8bKDWNkLh[Bq('*u^Om5:S=[:pM-pX3#%<Ffr#'DeqG-!Yj
%",<f^Xc";I2Whqg7[NtSEY'ubn\$+[6V-EiB3+:(^hO?W@&bS#VNskKI?:LO:j("+<+Ka_eBpefINouRCN'C8M^qM=]Z`mA;dZU`
%SQ)(./iLs`Ouc(33-CT!)Hq08oL)b)8?t4Z\X&CWSVg1UQ_ID)XW72WX1VZS.\"l:F%-p]/O&P)CrTJNAl;,;nTTSPs"*bLVJ0Z%
%5/H5P'am'h#H`$%%PlQcBJEO>@Esu)/ZBRF3_rke^g9"R\en)Uaous.WHJ:s7g\EK["o(rUf-kPbjELAGZ+BYXHiMtMDE>r2Q;?q
%851B=7Y51e/UT$W;"8.!iHpTL*hA.5*Pd8aZWaJB[m`P4#*Y3m1ggE#--Gp5icADA(R&kD'3qoUOi=8l+^3\^7\hKr2fZ8B#Dd+5
%N!ouD2K0BuVM._OlNAL((o&R$.'U(p3+:O"GS,iQZ4N3\X:.$Tgj`@gTf89+3ZA=`-U"#oV4+4PG_VJ2/\iCTnpH1T*$-%-lOJ6j
%5RYEDXu,^&L6;3b/B3Ahl,gs(EY09.S+G(["d0LcVPM[>)W&Sg"^9dD.*sKb^?Ac_+.mgEK:&0B0@=+1ATN,:,N_$t7eiT2h.&Fu
%TZ9=c[e18r!A3[5Ym[,C.#jO;038(M?qUN8=rt>4&QS<\")kZ).2=H>*U1t0prZ$C4laM](s\fd-G=aLD8:m`*C616>`4[O0nP]f
%YsFPuU$Y(g96eo@H/V;j[k>=WE3#g>+*rK)a6WeH^ked!cSap0b:\D[%mLaV*p==GQ(FNP9W61S9+4nsdRt:c%-=rHPQ^A9E]:a&
%&OU"r+ce*NiCFR0-ILGbPQ2J>oHXTT(4)-1`<E0"3X)Rc6]3IVBbkW@E:`_96nI-oL/i6,huQ\+":lJ0,TePM14^X0?C=WQ&"sOn
%_LY=)#u,tV>f]PO17H?Vs.XV,4>r>tLgeKp!1hh;fZb;5C4T_cAI`#G=[']s'GVl%B$o$kA?cRN.2A`@XNZPg@`$8k;$'loa8i4e
%D,E8aaoJ'X8gR>\S-b]p;-Pci=]pk:W4CP96rN$X!L42WWPf&E>Qj%/$PaE<@8^'8-*A$)r1pVB.hT/*+ELCg;5u1)3XW'9N.f^i
%7AmE!88_h>\d2FW-cf2a/XPZD<d+^#BkRN=bp>h_fJ""7['YhODhW9K9^+)A;M0OqUsd=T&ur3;Ya<DQ-]<O6l0FUsoMo+g'8lHP
%VMHn@V2D$^ir6h^.E<j7>\mpfSiIK8e++eG^"-3)CL&E%!/84]^d7bK(V@><Dr3"Le+([8.m`%o(W_A$a-ndQX-:KbCBAgmMmOlN
%8Wli=H,Ie!a9n>9)0,Q<3>inTU[TathXAlJR\Kic7W;X\)Q_#<330=$f`_[[HG_7s#9&/o4Bq%6%O[1c\48,RiTm7tF?*NUksgNh
%Na,X&b89Y[6-O>/"4/&%l22M)?>O85Qfl"tCk]T[FJV$h7<sGYb6r,YqAR7h_$jcP@7J-3NKj*uE>XjJcg_lB:Ug<+EfuHV1`emH
%)@NhZ`b<?[9"?sT,'r7gYsjW)3Ht_Iff:ec-"p:LIZBR*)6bPab0\6ca[r42,#6SFQgE)S6?A%4FCJUHMrqmL%EGq+<JSFXR&Zol
%3-*/%XIMk_WH=]`/rNjG2O>+&Y]V4P_L't&2'Q6R1SYLT'oibIhJ=Tc$WC^!FC>629f6lmR&&Z=#djte\IXk*UC'tgGV>V-h&V&g
%jWl#L=h_`LWku<6)HQ(sAd.()EY0.:H%P!jAgmiR:<L@]AXH8)$jOrhQg48O%cQ\\A*';8Aj';$S0oX\?)l^:WHo'mQE'\DMY2<1
%B0t3P9;Ya-jmj4]X;he/<[npU7;bF"NWMh#O$Ii83lYc2(=U1.<C)Lf;C.sXV34VC^<p'j7Cg50@$k-]3UUE6/I>f'!tAM^V\=[d
%(H6-9PY6aT9jH3bo@-SMdhSWuP2'(P1!m,a'i?)(e4OGI&bZ_LS2s6rIlN)jU)AS7Ot`9"a.G,u=lPZ3'X\c`/L#PX>-0ne)_:&M
%]U,B=:TIB^B-Cu\-Dk;8GR!\M"+ur'l^=)[4gQ9aT#;/,m>9D0bkJK-mqH7fW5O<CiA3!#9_lVj8i[osim=C47NhVp$d&8[NhF$\
%CLcM)iY3!&$QjFSQ/mCg7jZi\0foWH5@^g1mP.+&q4Ce21I*s0Dtook3$KZ!k)jYrVi2p[1WXPa9OJk'DScqG1sdchJJP3YO?PC)
%<99,`1Sjt^=UAkQMO94#*LNp`Q_Y>DqH+0jU_Y^p4/XnKKX`4l6]13Tcr^gXS^^"F'+5qh>Ugr*.Y6Ym1ij<Yh7eKu@WE9c=:'Z&
%NHsMLT.]1[=WY.XEcVJoY)0Qf(sBhO?0=Q86)W^"Yg$W[V_s1XZURd("u\A>N!>V$OKFH=((?%(9P4\ZQF/3AC=Q1+HcbiQ=3Q;W
%Q*'gF^SBDuU-/0Jg8\%jX7GNK*UQCKApd;`k+mn=Y'B\cP-4g=+5rKuP&&YhgIY6ti)/pY8D_fO;=ScZSPsPEK$o!OLj.g4h"g_K
%'BeSQ8"R]_U4eZAZ:0G6`.O*!j\Rdf^c?^dSt;^OYR'r1GEs9i;l'`><.nHN3eYBAj(S4rQ0'X#bbV_EU:j1FNZ#CJc#P>R!uu!N
%94k(^(QH+PH@/E!GC"Wf?K;l4-duqIO3^)q?8?cqnSpK!GML_g`]A;iB+gF(-<H@ppkbrt`T/bX,3EB;NX\E*j_^q-hl4aqSt..p
%5OA3@Y8M,>N0Cl&HM&PAeLZr&7IQhdnlHKp'2Xc5N<Kb'S`)o5qCB]dV:SL@RSeWZ(;53\\Is_piX71)NGA$+kR!LGCpcSVVFOHl
%?7d!X+o:X[:[ar!kKn!$:-r1q0/jc5gUL]3Hfcf,!<B3bgIVl+-972aDI\KnhQDu&AW.o0&7;WG6-8FM-C,L2T8V$VA-mp,HA]]=
%oSALLjUmtaiT7][njkqL,Op6.:P&dr&88jE)8BdI8KP;q5sWo+rQ"A?Mi906cm7-]fqq96@\Q'JU@N@Dl1k`u-$hb-/Q$m\6aA''
%/X,tTL82PmV:=W5U<!t]B9MBHnI8/SQRc5S1)EF`mF8`nDjk4B6tc!q'ON`>3,oQkLTY+UCE%ZFV*t2cDD;i4ACBKb`"i'W8J^2#
%_;GedD^)n4V?k@>);Z*>nML?>'6V[Eoo`cfA7Ua2p-X4\+O^r8R!RqKI"eZEM;eB\8\m'N`!=,0JUP2h[OT!l&0,$&csnI$*_joi
%nf4Bpc6VLlL=:VO:G<DA)3Vh'B>R/<4d/I10jl2%O.hI0:\lBaQcaQakFh:f#qhRCP2e3T0_i=DP,>(3\aXrh%#((rJLegK;=p)*
%L!C)gC02COMYP^@_9)K9n)63_=M>rU0*]5ePbrb+M3N>!'#U:ZX0,@b5CW9#O.h^]O,o?KZqUui9p/Te3m,USA&N;n-rOA!)Y:L4
%?\f<M%[4UO6h.iXaShpQMXTI8;k.f[hqN_7B-_g1TR)=#dKsBQaWL,hohCdf&%0t1GAHb,_G<8RK>I!B(B`Y5*U<:qIjZW&0-=))
%[$\aks+tZXdTAn3AthR_mPkSCH-Te#.-_TW*M]fj=ZhUsU_AQ0L!`0n@N+lp0pr7VWBpbUl"qcf/6ALX6:L(ZO2Acd*+Y:#8"=T`
%%6dmoE`QEP0/JGj1"26n>@]GM@!&]:\>1V^o![JT#;'71->LoX]eLAeo9/CuaW8;QTJ=C;-hc:Aim4On!_/\G@hkgn+04"/mIp)/
%bJC^d9qIR;qN@)^^Fq-M^50qcFCBe-cn8YTHd6ZJ.O;(JMQiV"O0p(nI,al#jfAbB?e^IKW-$6__)us9in#'Fj^INXa9G=dc3].P
%f(f4HS%%b1jG[M;R9CK^(Zan5Ct<]rSY;TY0Q@FEf,,WYkW9"XV>t%,C4iK[EWi$Po0l/1_m_RGRK@>T]V.V&jd$Lt1:_;I-qFnO
%YiV7eUK-5-)j:)gc"j7=>qR#958)KMHmFH=U)[N6r,F&a]k<S6c3K<q1lM*bX)k8F;>NbfS,\<u,*Q%(Ztdp"o&TLVOe<r-'!bVX
%Ad,*L'Da<;5N?FG.T6bABNVRLi8E$8Z*@9?Al9N`M1("XAJCW1/6%i:$G7LJE@*-jG**$#K5D5W:9tK^\=GO:k<d4XG1]um;0fXO
%V6<q9jA>:jp0,88*;RN+WX(%aNo?g>EM<Hf624P+VsZ&!RnJR,e4V?[1d5mN:+7J(RoX/1dX8A9X#a`UO8Vi_2Hre-2:5aMDe>^n
%*I8)``=QjJC(#&tj>jB)UMY[8=fPMt@$O&o#/c'C7LF_\++bO>e+'7d]H/:o`dU%iaLoG6F-gX@I9NrMGohS\T$]m`"qItiG=j"'
%Ni+R#+`*A&Koh4Hc:YC9[>>\&L+5W4r1:`,$lgNpMkrM<&>M-[`&/oN-g%J,Gh#CF[c`gd-dOk`::A[5>HGsZ5o>!NDTJcJ!0'aa
%.DSmF(mK*8$"*^fBSUmdEPu($b2P^.>&IY#.0K$kD8mk-%+6j9N`iK<e3JOic?Xt19H6_SVi4+s(F`f>LD9iC3Kufuo8)aD/)Qdd
%]:bgb`B(J1K]H)pNq@FsP\o>M-])Bn2)KRR4Bgn-%CT7L01BHO@eiqtGKpsuG;&D?K)GA5grLO!K!a<^URBAYPjZ*bAX7pEN47kM
%^r"*?*aeZa6@&sCONJ-YJ@=em3:CE))$u$2Zu+,6G[pq,8WnraKi^Qq;/GB8+%sH7%<90XgpPOaZb[V/i):hRj4ie5?Sk=\5LBR'
%n&ri5:)TP+Qo>qUGHu<nB<^5N;C#;o)>TjXd]f>3XL6QB@;;cP$P][tE5=7QN`Y/T`,"Inm2_h5'oLuN<.uL'D*Xg0VQb)^AN37$
%2m5sRXs9K9Qic.XeBs'B&pZA,.'d="3Qit?GShuq;drL;apKk,!k6Z5-\ia/n_).A81H2WUBd-"bu7gYdHJV!=j8cLgN2U0K\&,q
%Vb$>@,WjX<Otf=2ig$dLP)IA<Tj@:J1reJ]nIn8PL`-Y?p^I;s(JqXcW5t0pJpIR7cHsXuMtj]Z)XS1cm2XhF#kBVDh-)T?Ztui&
%f9-<@0iP'543!e4&/qK*(P/Qj<!5KjDP!g!S'QaW"eU^&R$70n<.u_R.:>FH(hopF@Y!)::MOuqJcsmc`Y8VtiX6b6:HO.beSZ$K
%?N284ICr$(T))WnVIL1["H>j</k220M*6iZCN0j15IPW>5_*tuCl5Oc3Refk:mfMP]eTCULM.aV'e&m6)')D1'sn-]0#tU-"CX@%
%'j%k`&s(E13XJ(mC,5ui/;?DM?;;`DOP:m/4]J^M%%d!S(d5?`!9<he#(u<'+M$VR=G-DRZ(Lbsk4BF+2ZPka8fdMF0\7'Fb6iu[
%T;++dce#O+&4'nl$!tr)V`Qt.LS[BW3'EYn_2C`-jlDnB=N#b<:gnX*(D*N/ZjdCO=p,!\L6KK4G^@e9TuV^:!nr-m!tP)?!bQs*
%ETEu,YK;H3($>*,'.:WO('IJ;*C1V82s([[4dXrd&+F!oH;"P;J6Bk0#FI_M:P6LmR_f::1I[PH7</e`Tg.NbdGNk1Gam;s0;Yn@
%ALR@RMUH;EU=aL`dPfm=,0Nu0kYRC'L)'rM%>E?0oTZ;KW`hb4n,[P1H)\GX=Kc%%?Z=[5@7M.3Fj%i]L-Z\3Oi#?A,#)inEeSL'
%=G26p+>$.]8$P>)(T+I"_-VAc#?4gLm0%jQ30"P=M+7^.XD:7#75BPEIbK`jCGLIXEAH%hOLIV#hS60jhE4)Ua:X-o'j8Qq/'Q@j
%;-6mc`hs/CR6HD3mCDkLN.<pPJ\Csib];hJ/SS\t`J!Q:#dr[D>)]=&aA<ir^T\W0KI;jk=e[K<bG3fsE'o9B<h:(q;=G;d$5;P5
%A/,C\NU5WQg+?kY',3)%&]Bef!`=D'K&l7)!>K;YOksp?UWahkN0p+\S&QpX-Qp!_5`ddaUZq^[c'qWA?!X6+hiqkbcs/hr>(Iob
%8[?u*'V@kJLer-G2',8pqf(4+h5[3l6GnHfP=M)&kV,L8VM57\q\)8o3fP%ebjZl<g[f(uBoh@9,_FCY_MimT!ehu4?o"Y./-PaV
%O$H*EXJQ?QaQB4=&<E&eD:l"tZl)IVAl,@Lb>_Baj6$_WL2P+lTdkQK?D)[aE$__lWaOs5&PTYj2MGZe\d$N?U8'+[ph1VXd<7>s
%aV.$*?_XcuMB@GEj[L@bhS^O%5Xe?DQ]krI:s<(_?'n;P.pdKjPO_lY#R*]d#UAsO"4!RI34((966RL=bCmd]0U;6A*Q;#4lC9pB
%b'EB<kfF9P%?l*/kMQ^q\U_2)lQg3!EsWmJ!?$knD:++r-CP,9b(lYt[t7VTU08LnA29P[IV+6u-A[MVn4a/I,5RlFoXb-g4-"2U
%TL4rO7V'>%]fa<ecuk/F#o)T";@8Bp<CB\)aPFlE&0lDkL`P'f<%<LAZ7+LF$B&Je<Cs'T.17b.&Ug<S_./0+`;ib(E)m-K!`@O*
%U=9:i+BsYq##M>+,q-<g#RU`<!d$(`CW=t]#^\P$Usg_!%=)8%81$uCENHUr6cZiKU(Be_BOb'U-r@*dfG5u?W$W'A4qgV(.UkJ2
%h"G!97m@$&!\M6'0ZdVm'NE'qCa0J4BhGtf$mK&>9]@7[!2e5mgrJ^o3nmp<a0r>J>/JW-mqafefcY^V&[A7UnWpmX/uG49o+i=H
%`LI*7>TUdP)Hhd\!/,*q?o'\VE"eZ&T#NbCD$k/o-,gkBq%sT,OJc_^#[cdai'Or<)aR6B'*W(!;Sa&6Ymc<p;9ak#a0c>]0#i?]
%SYaTn<'jB%T]&J&Jdud(-b/aO)6l0'O\c(AN=u)$7$8u;o4tFt626C)1W4.V-$]n7(q^/qb_QspQ7mD1ka`Ju:Q,\qLrs?:j;!G<
%$d1'H\:.5Vf*hT'""N)H*..F28W`Hg*.d<O+$nWUe<cpk"=68>5phf0L5]UFnX1]>0Y,_X;-N$_4,4s=ij=rWLI#1*`+%@KV<"EA
%C1P9acX:k`XVF_Oncr#&6n19EdEE`J0a^al81_kj.]H65EM6d[nTktE<7kn?8\&9O-kS$&P&27/-uFTakt!ms3>pn!(K&Np3[B3g
%8E)R)+V7g#^(Bg=@+mYn-:6FUk_J/AH]Z%=8\?lj^CPUEEd\LpV3*8P:Ld[0/p"6kTF64uMK]X>?AZpZ.$6X+m"A2-.3Tu#Ju?$#
%OedLI:M\Dk<`lXGqcXf(he"$,,-iqr\&_54;:R)"Q>+T9%X-fAJY:'`5PEs08!5Jr'"\gus5:p`"(0C/QXeEu!#l=J%<@oqX[+3=
%E.Ec/"8akRSkhaRbni1^bfGaenfV&b"[m-pR@ClYT.Zk4/j]Sm5*qp#C4rhI>?eKEg\fpJ$4^rJpn&7gjp!>Fh;5]oBM4.O3bPQ!
%qqVrGj.OI1[aW.dr==R`h]"gc5uD?F+h<:LU=iS77iQnmbeC8md@G&(D!t-YCg`jsA6X)iJ?rID]aMm^K'lVZ3(8dHV<L7q68\WV
%ag!ZLE>Vpu?Mm2'+:f.ua[/jHPR`;o_(NraJPf++WN%S8%QL)8,[lV^Tl<6Kq7S+X8u0;sO=3VuK#-Y/n!u@$RHKPY^)1"oP_K$u
%#f&bU^21A7D@o@:dV]j6<)-;1V3tI-+H[Nl2-WO8;Yq*m^&p>do$>QLYB$PB^E0Coe*XB8K!MrJA_P:of4aaGC2"UG?atKMe[Wgg
%X"2m.0kOVu)<OXPo-TWT%!PAeg-h5`M"3C_.hr0\A/9e.1TN(.S-`;krD\D;M=obon-9=%^^dN1'k0@'SBOnG6"4kbi"&:2+Y(AG
%dEi3<D_3)-;<oAT=N%pR,$Y7$`G2D]CGo/(Q56QqUeF:BOb3pU[IW<0Y]C"]?f.4tU9NDj\eHl5k^ZLS46ag4PC.u9Ps8Y`$9]VP
%(9<f/1L);'R+OCSGrMp6%qjX`!UO?B\HO+cjMcR8Y"Sor5V`%-^e#lQ^sHaPdtiWKEa0<3_]5Tt/d'1JoZ]Y,"T\l2aZes_[Ae\'
%NUfi-/:t'Sd)oW>UGneMn:[)3Ep-4fD2C/hA-S9o\W`k&60+VB#5R&47ACS/J</7jY9PAYLt&UCJ`<aWKTMuOa<3)j@4&Ho.\]8k
%DpT&k=f2ZO:M)E>'@@uB7^#86'aY<iPD'9'Wf1I';KM==Wg#=X;$d7eIi$a(>g@SB`b/[BP@9\P"I>>r.MF@hdmDaij$e_`il9Zg
%'b'\9,\OnG_9CXe+POg0/93VT"X.pL(b\,e2Fnd,d>3G!Bqc*C9Sh-D<U>dPfdU')2*D"jQN;<,fn+l#Y2bL'+&Iq:MIdBW8K=!5
%TLY/uNU?jK-L'tA.e';K?$e1[4?qS/N`fAnQgq2N,Yj[<JODf4o-:N-&#'IhOWP@pLMu1fAG)r"3XcD]0-IR<4<`TmJT55RB(gc)
%LrrpJ3Hb[pU"5#\PE9J]\*>eS%D%s$Go8nlVN6j9MbHdZ"(GN++pFoQLV"<K,0b_'oYEu^:b<BlN%<qc:sB>VU1NAYW3Xt3]u'=Q
%p:%T270.g,YD.NDUMW8'1\W+urCRs71@;q]P%o3-(RIkG*D=Km#`EMBGl5"JqeR#t9dE_56VN7LQ"fQpOF2q[(cQB3AtC(n./Zl-
%X#19k:+GHq(1.a:CaaJNCM&51T.CY>N&J<[5quPmaK$e*$g`gdG=kYgWad2K\`cKA;HHa^MA$63i4$BX\mkTWb"@X_X>?"u@n\KM
%S5lHf\8'e5@O;HuYpTh.^UVdn+"!`i)!#[NjMeNcd'"6KOc%%gEiEJW'Q68)=rqsH)JCnETsLMYR6<p&KaTQalemqIfha.@"X7X1
%:))&p:WpGZ&-^OBdO%Ma=fP_S:mhls]^^OE;(Wa='$otOMp[!KP7W:^&Vk"[`g4_J]e@A_@#V0kDAq>/AI0WD'P.m",AVn_UMlk0
%,(RYGq\)?DPS2?Go6\FD3@\t.lR>E`\p^mp'I5IBKIE.Y[E)h)+M]0eP`_qiq1H0g!EtA4IK[:5cYh0rgCl*-?@-/0RKe@#(1G;i
%!=TMSOq^/G74k_rS@6Z`W;n6pKh.[OLpf^P^`W,*!f:lD-0=C.?HkGNMK]_ueJ0K'o)Ag#\'[]57i.F0iTn#QP@A;GK1sh=;P^:S
%8uZb*,g+C=;qsi%6)l-!0d+9&.#P%nM[1Ak6(*PR8D:</*TL2%XAk)D;^YA@8=.+A*1LSJ>-dOfX'K@M"0t&6;W;5$Ve@>?]ho9=
%QN=Xi!5gfGCB^ke)JaTDknc@p2c%:B1KK]B;E<HLbY_nC9iY(GG/(j7>-]]K1-2YG'S\urgblO'LZg"#5ZJSHfU&mYd8\'2q2=m#
%E;.]tamt31)])@F5'GE(qM9GFcOACYFDB(=m2O/#+Z?2=Ca(cTFSJe9GD;@=)uRfpH:fn7rm1k1Cc?)%FHK.QQQ&q.A-cq1Us:)>
%'!X\f6^\3n^?LRF!0PdY6JJs8=S"_T#Ei)?i/lSpO!9<Vm'J:^B^,`%_r3eW'`d%BoNr+\I<P]W/]=ChnQS6eXWb@@_-e\rH:Pb/
%b5[08ar6^8*Z1@*5p.3I'Yk,t<!]DPL"V'460jtn+1^+=XVg^8TN9ldm::0KLq&jd+NOjdD6i6?<SpXfFXsVUcsITlXB<a^Bj$(W
%F[60Bk*SV]"'etKAj(@8pX&t<cKdN:f/]M(Bq__D`@gURpMtl0/hYWJZ@eXc$(sOA9@WJ9'>1k_eiiLka2*#.>O,l\1/G_(9&*Q+
%hgGqD&T$c'&1!B/RG/o-l!S\L*mV;L##pgWK2@]>hA/JaMB!n_W^sX`lA<;k&WFr<k%\kC<7<`dD<C8j4*nnW#VueuEON"dMH8(9
%[DqSk=`[=eMmZ*/.&qNbaC_c5P"tCN>sB&L;3JU$bc-2M8hr6X+EY4.r*c5JVC<nn0F^gB77%2UWPNg7!(Nh6oP(P5R%1]!ge'>P
%XNV-J5+JmQOO0IBl.,4Xg8brV^V%dcOnc;FCNR(B,s&8cRfU^t[e(/)EOq3KUlWL!>ojm9:$pQM$+H0rXiiYG;F&m_i56cFE7%K4
%A0eNSAg#(EZNd<1Xi$e]3ZH^/KiujD:)"Nu<LkKQb%mS0\HJSPil4>Nk*@K2Jeq4/!M2oFPc:RWiP&+Yr"DON..*&4SMb&t#_Vn!
%8L#7s2be6[oteIq3t2+^Se*b-hQHr&X9EQeR;@D3Up/g&/XD1i3?:@MJ7Y*92N/IGg.Kq97"i**ppM72Lks#8g'2kTLgXN4`<^Xa
%P@s0]jt4j$R;Vf^1?GSOKshM(pZpe.?PZ"u1.J!)T5Q&6o)X:@MBsbm$&1hjC*jNr$'MRPZGWd3gD'[Vd&`6O7,uX%O"-T$A,s&b
%@nppf!^ObDY0d[+%*ZCmkhV3jks8rRX/)LnHNHgi4F$6sKP^Hu`fL1tg`RO7+J`+j"_U)=!'#]6c\-e'j"L10d4UNZfW?E4YZlma
%"%]='X#"X$p4$XQ(f^>=:kp2W9VD<*1NgpP4gEX+6s+gBA06J6JYgL%ao,In4e,qTrGV+'[.bEp2NP-14iXf%(qkD84N@!T0q)&<
%E?:n4R`Mf*aCDU1KZA>o4@\r=!Z(1B@l45`*?O8:>979;\]<@XA'Cj/a*?H'`pOf/`a^h^iB'0AoD:[?.mkk5,ki/Akm'Ak"..F/
%4/:1>T@'IlnJQ0X51!q!TDR>T[%6u?T.us]5,1+k&Q"7,qMaR9IG\ZgVgG&`cDL@2N5L'5oA8UXq3sRC\[4Tb1tnh(dqEqpn,^5S
%CJ:WJoGS0]HK[6KO74(djfZ6c6dsW6qmX7.RuEEu)U$6n`r=%n<$KCMl;rfbb9.cOK#1!lGa/SmT"AD`aDrtoAZ@tZ$T`e->`bf<
%^6]3_i8A`5aO5<D-96SGI#u&#:Z[3;@e_bT+HEhjK?di<SIZX:>s?=^4Nn%q?c`PD^\k6^OSQ*;aTkriL%uk*b:i%2%'NmKrJWKu
%QJB,`K^?usa9S!Z;*Kebc##Yc6nusQq&mC-o0MWqq&g>VkC^u9MkOH,YnY^$b6M1-kW0eRrQ9LaI!7ouI)k\'K^?SAKMX[S6E'aX
%I[C\P<6o\RaRVHCa+R:^KMX`.<'nY57_YK+Ej+XU+_6&F16o-UhG$<b?R:B,`:Z/9A<udp7VMY/]h\q4hM+IGfYuS]LL$9^m]78>
%LKt=D?,Y2(m_Wr+A5P):76>o.G9K'XV;K8@(fm#K)DeN@$183tPMV:sYm\=+V_RP^/Y4:+AA?>H*[>D.F8k3U)BS=`eC\`s@;;YM
%I7ei[9fp5AS:<&Id66-jCitqs?s>uP*eS;gT^FOt3hIB`4n_E][k=t6Glann%frZA>6@e1s6g&h%;pTHUu$(?@foX'P67fANMABC
%ju&1Q7e>5NeD%J3"HN>&1LVeQgUFu#QI;PDD>H`[[X-m*-70ft-K!]&PAfoMacG<kPM\mko2S2-Hn-E@mXT]>#NX>LO=u@iq>QA(
%r:R`%hK>VD&hci`h-#O46ktOZOftfVI^heeY'Nm#;#,9kOM/n]M3-s0eqALY7`Yem\jjb+ZH"gh<k3?S,P6s.+Zmrl<eYa!,1O7n
%aI[Q\,'5]Q^KDof[4f);:,iNhHXd</pDE9cg!`^74n$;uVb#WbMUZ"k'M3XH&J&m"2XK"18eDa8%&JcD='SU[R-5-YM#G>?3(7XS
%.uAL7N`5"\0X\Z>.ICh'N*,/.#%PB>#"(SopLu<4<&D3ma(3kWc_U?7AW^g.7R!$AH-tO11U6`MO7SbVFlX:2M1$i[9fr_k4c_nP
%+E.(;cQl.M3g90o4T=2\C+>LWi"\n]hctJ,.a?<G9;U[0Q:_Z@Q#<L*WUtqf/rG&D9Aa)^qLbX5#/5obnhO]YRJV-g]2bM2=2'%S
%qJG?+"a%IWq<mqG\!?D/rMdq`",F+eql]M'**'_F&#]"X0:uIGKZiZV=f-jB*#Q?Xk;Y0^\n_ca?:5gA'bGkU"!daG#KH5,^mH%R
%bfmjc"\.<F@/("o*%\%5c%'5$EQE\#]+(GsDp-n%p[P[o;XbiJ96&f(")raR\)eW`4@Yra8'#0s4\Z7%?R4^;4-'YmXNF4q4SGPj
%N'-KUN'*]N76@7b,>[#_l&_%*qOeodo)*)]ke??/8uC3PZ-p.uR:fBheH6$89>4:$B4]5ZWq<J%qSDr/f<alpQd9%4Q-8/X<gg5u
%?q=-*OCn"Qj4:kpfF*>8.Yq<^.YrkF$YREc&`RQ1H9&,C4i^2AYN>A39ZU8eR`pDB?9"C;'rR'h[jocN%U56_<aBrU3/[<5<MFrm
%UFK,6i%)V9\4lNR]3N:*>1/0cd'kYmKEH?6BKmNR5TOY::)N1*K7(E=nJsh)nP'M`D't,6VN69&R^r/(inJqgik'?B5)/j$kSiK.
%4h&1M/aWRhL<</XLPGlFp^dErGUJQ]8+98@G92Au%7#1JmMr,8!-bk7\FU'^Br,[/rK#ikm@:'r_04Ndh-iAS[<[Jnm&/_FmJP3Z
%koSSm:"$&G^:2b7I+i!Jm8PIAnbhJSg\CX,LTld&A$M"4PA_tj5ZZd^WV4eq;a#VUN)R.-!l8`*WS4D$+/Wd$\8.J3U&;Etlt>cp
%Wioe'0\-)20\,'aK5ULG%4;'Or5W[#IltH]IsaV$h1(+5g5PHlA%1=Wg7k@OjOQdOqJ50CmG$^Qgl4NiDJ`(umi]+=c#2/S?WqSE
%]'o0col'Gu)>+)3X6@t_S)"sTI7T\_P-XZ9A&>R1m[3M1JNq;1(HqQa;+u61Vj[&&7kioTKuZl3^Y:U!;t2V_s5R(k-Fou4c.])a
%UZ-\,ag+nQ4X=1]KuYI^(:*m-QK=*#BVo3qmlN)Dp)+BDQ45Bjc*G"0/DGFK1<oCM[Ib\LMXLIm_QGcJcmW[K')CF5e!#S9;l^+3
%@p>ii8?kmPGq0O4%n.ZH"V_cO6JT2sc?(hOP.G%5FO`a3n#q>O@n8,_i/,qImf9T3P,&d0RV[6#N7%`_P]_WER6ZDEHY9XIX:j(+
%\9,+1L+s@()dZ:>T"+ZhQZ':&5q"!2=8GGAc?t*oX?"B]8)L55^,g,"_N]^M*cti4k>Qml!FCj3Ur*-]Okrktd:jjA^*!d;LJ2FH
%"3_bOVI;>-0X01MY@'Ou(<j#t/,I/ea-9QB5SU#P\:*$&`G_T)6_g@:TL0XM"e.^id3Erm3eEZ$CCNO,1E@KJ^".Pjeh."Y1iY1o
%EXKF6mu>nZYWuNj%G.+K=q%g%d9SJ36jc9!b45\l>:p#oK:@k.<&n8S'gWX_TT$m1-qNLBZG\u:>#,]PV2`m%)`\nn)V$&Q/UXIH
%X+fr3R@?\;d4(T2@:'i)N3iT:(Jr&)TQo8onh],aq*ZpH7C<E%^mUBS.\crf'<8@f,(Gd-:,H89n%`7[Qcn"aRM\p:fTHd]g,e,2
%CD:H\<m30$]V%-0:uBD>(`A*\$%S`<Y4-!Nb%eDAAnPl[i819$QXd>m.L3W(?CVpQ>#[.WiTs'FX#)#R!%G2K\@/V)c?]O\`(1YQ
%ZqoETYXAjC8T;u#=CScKa(Rmc,DoL]?lsg\Y%OXU-KYuD8@/DO)>@aBhSDRX<@K;sg*,s]6q(O![V+[7('RiA1Pca'[K;"/fL8GM
%VSQ4L=(/t;6(`+QTQ<o=F7"2\+KYS1"FG[o;@3LOGVNDl/tIWIe6>tpCF0M!Mr7.2q1@G7om%L=n'+E]4T0^S*_JY7'"66*n#9[f
%1]!foYFnOWL$pABE`<"(<g8VGmMP4c,&o.gg:m7an')V+lquULcFfIR$NR:q)*ZTr5eB-G8nOTB'lMjIF.:4##V`cUr8($6^/eXi
%4A-9dMOA3h!6n-d#(0X3jRC'OMX-,LEb6#N+9hm<>E2aaQB35?82,rRYYltq@rqL[b1KaJ@VWV"QqW--!UZ*ckY"8cc$(C'C9;7F
%#sl;lB#KDg2Z?V&%=-</l21Q]%L0N`-2a%lDXPf"r1s@t<JFu"Q?]>PTHo]]''Po$SamXg,=M`L(-#@Yj\aB:N1E<Dn^j1ZQ%G52
%.k.1I.farZ%@0`6U4Q:j;7YW75r2bjV-(R8fB9i#>o3-=#,Vl2)^$8B&,rS&ail0HMSY&4W:7]$RXjm?MH?Nq6>3F)m"kC>C*,tZ
%QkWNL>_LH9K8B^.%(nbh1*MNk^0K>h%:PGln,j^Ki#>;]08BnIQVF+(;5Nh-Bk)E>U_PjWM5H8"Jo]AS3)kf^V==tI1c/At'u?Yf
%7co`FkudTk<JclT*P[ru#>c-GU6&@a_saYkH-D=HCESGc#S`n9=Gm5s&$,XYElPr00*8TiePSoNWbQTceiRh.CV18D=agt6HY.Pu
%7-bRb5!of`h5V6:"W9NOG7/5-N3V%E/@FK#(i:;k'X?X;?PlYhN-dY2E*+R4U?&+&;e)p`%Q5g.:kj`QUABMIp;0.W'*Jb]pUIR\
%$Fb7-0a?84"<4Q-2:OXqB[sLRlB<C9.e/-8",r9b\JigjAXUKJ\!e'?$3rK-2/BTTiIS'U6q4!S;26DY-(Wk;52;r`hJr<6Fg?s9
%5Wrp8\"rM?71+][@mLWFm!4Ho8AP/,_ZEHD=ZX(bXF)#uKU*'/=*dB3eolWnBFg*(@TqV]GC-Gt<.&nXX$E!0?CY[b<E][T%;S+I
%+%0P1,mmWr!oS/RZkGi-5X#H(,=E*;lY/f8%(d9^9/=&=rC.im*ChbP@%]-L9c]H%2)SAU6JNJJKDsEt>UGPOn$8Ih`e>.Z4=HuO
%Tc?>IYsFNcFV"`_n.skA3@o<1A/Zs;?l;j-@g`u2_%8L<!FMr.^C<a9U(t<Ojrr!R;$9dL1_=O8Bkt?tO6+2s/W*4[D"jM3QckRF
%m$R`Gd43T]G"fWS1I`8jRj'"mE2m>Ta6X0Q5+jRqF\^W,L8sFRL.D]!W>I4'hQ&Wa8DD"Ad2-t\.qoA1i<_+&N!L79[R?(C,4:MG
%Xa:oo7RToX)aZ,m#dK=uoS%]FdDGSrnKup*G"0Y^>M-4U_T%@M@8k*uNR-_'NnG4,`l/a;beC;9J6:HcBOPNnE`gu,Pm][kq6Yhr
%-Ps5AIbMZ!9U5g6cs^W]dOae/V9M*4[#+7WV%%,ENnr\UNg!,Jh2.jUSG_78iI^mC9Dbr!oQQT]%"_$N@snq!BJHFp9IJ&38-a3p
%&@!&gra/&A9_SUL6^J?M#ZqQj<>ktS-t\og3\l[:!m(Hi"UH!?hAI;(#'rQ'kTE^5h[@W+U9^KF'+;Sk&eT60)WG=HlX%Gu#s"7W
%SetU\)Ue@o\`1kj!i!'+Vt!"p"Q%7[k\b59YYkFO%DZn(>H]r2"gPS7g54oJY'l[ND)PdJf1LgSL%@"Ea8q-EQZ6[SqqCXQ")K\Z
%\FeJn]kT:8#j8nB!0,.N_=A\u7=^T<6m1BAmS0u'd>Y^g.K^u2+e_j=J,'I!;?fT,U6,hY%gZ/f-O0<'OVU5e_NHur)%A%)"uMs?
%Zii853Eur9S]6J(_Sp&9K;,bg&b:lCi,l/g_SJ3\r0G+bh#<u;pp)l*+3<:BS]=nPTjqg[.Z!BoVP_u7lrSqqPGgc(+S:81&\g9'
%5:a$q2"K$YKpefA<#?f?s(j/G)UoAU5ZZp"MDJurCY$6-Q:i<33K0Bh.aP&Jh\+X8rS&'B"`Rr9_P)u(9@Nqg`S?+X9JjB8(c1&!
%;OE?K;j1]HMPchr&kfV3hN-RR%o\/MSL\kp(rZ@q7uuVYPIK<dUG)BH:stKD6WCI/"`s9khaD*,^k/j`<'\f)>2WmFbTpG/"XVOL
%#7kG0?lG(Qqfl,V#>"P7?.4Um`F,DA+R[)?54e+\n"#)"GI03qf'q$7"dILkG)I+cV=VP\RBTef!qHbo(rcC,;!TTYA0u#Gp?[H9
%KG*TdG+okX93l\Cs(,Ni41?iPCfWiKQF(%?:isf;oT6;MjHFF$P)iW?p'bmn'cR3*$qXK-#1nkYVH4mp8kQD[BTN]no4Z@/-O8Tg
%_AsO;"W@%Yd*<Y_o+4'1#YJJ34Z>XY/YraRK1tZeU@t[17;Roq2IOs,a!rVBdBoc09T=p*Z@P,P4b_9hFiS3L!aoUH]5dF(MHa'1
%nU;sjiTG@')i&JIIEE%Sq8jGl&B-NN;tMhlPI/YDgG=GON1uR(_>q`h#D7+PRR^k:4?75EAWC:tVA8o>Wb9sk5f?SH&pT56G6tWM
%OOo9l'm(?1`K_!l#IDssk<AS"^u6CW%#KTdrX)2k$G:=c_)isPK:-LGUX"&TV)C@.6ZOkua5[Qi]js=lZ6CYTqd`s!M7#`%Z/As3
%[7u`@S>@W;)jVb0.*33T"OebNWl4;_F.[_u!&dc)'le\%EkIf>$$MUX;hoL<_%Ta;lW'\3XVdg'-22q!T1.9C#_c6@q,5olL%X;2
%a?[[g$_Y_e`At1)+NOUVW$n$Z,3WU*c`+^90oZPL-8DD5UeDq1e/EO:7?W+9pJ*Slj/G0g%4ER*[,GfFO)1fuj6OcS@gkD)ff$Ke
%\E<qg0$H%Jj(Kk\itX"]<$qj:H5GESd]1at"5%bO/&VJF$R!G!VX4mHZ?8PecO;<S:SdcnbQccu2uGs<*5QUu#sk[L@MHFt<;1O4
%cr/<%O!%CgAf`u-CuAPdZ-Pk&,6l01*`W2ZEbt)UhDD]Q\4'7m,;r"j+MbCN?`<Q++!J3((5q<i#$qSGDojK@((gEg)_]cYVEhp]
%&n@ja2+2Da/O%TF8NRVtW1[sqg).8u&CnVD4L;n,lRe#,$3i+@1+/73P\T%pW4X5snXOtji;8O7j+4LaQ%]kUXg1E'UiGuTOoS?H
%CHecsc;MF^mMLX9RCMO&Eu:C.XpQYiC;@nkM5oj3QAAOSAhq\pm52VRn^]#MMmG0lRG"`R`d;V*?>t+#QMeOoa4Z*m)?R=`n4uKI
%])d<QXik]V=6&qMNu_\qnf`8.l55*W1t9CXoYJrer>:h)Nfs@D59FWr(G19>?u0VQFk#bmn<r?3Vh8&ul7KAI4`<6#F-tjH6Ra"d
%fntUj*(Ym;,q/i`;!1Ok;mVqh!Sit0O/gS1k?3lu<L%l<p8V\2n*=Mjh)DQjB`"e5f,F8KkKWO'Bn_WZls'P=n0VEd5]CIW[dLp(
%ak-Fh*-fq`IWoD:\4IP(BWcX7TrnGZ5k:#qTr<cp#cX+2h)&iG:ElQt3aYJ4btR$t'*tad[]gT`b(R<P`FiNGH]-6fbZjE'<RR6n
%oIi20c$CAp^]gn#AWj_J55$o<D*N,Nm3^W.iGNYJC:ON$NsN]J]CMsL%#$/2J-)Y.l_B1+bc@GZ#XDQ+G]8SD9bh4`*rrh>MoFIJ
%oHHmRS.q]I,_o%um?U1nM2l!f+$;Qi!G3Kn%8!4h_a5VM:@'0)iu2H5/qW+*LPgF4`8Dq\irf&R,&&^\;Har3VrAjcY`E%Z-po-!
%08oK9,"K?C")ARk(LWA;f4?[-2-!$b%*U(qPbN2.?"t@KU.it5-rQ%Zbp<OlECW^,WJOnSJ3c*K*YOT0S/#g<kXRC#9?@BY_73dB
%;RZg^T&4o9V4V6sqhp(cHu_AqX6&1Z.`D:/Gs0qdLW]4f[DQtCq+RNP\?.4Ea@,m?krQ+^n*.>_9@`4^Y*LtNHM?4X5:l5%rS,5"
%@DCo1&%C`l&b=/h!=T?Q(c+YTjZpF63L)enf3^'Y84kZnjMSsb\g^,?5\&b\.@hP4%nXa,\Fplaf1>%sr_\L@TH<gb*M6KVJ=<,f
%B6XIRh#-o0S-l)n3ZeWJGN[cSZ"%](R^NqC=:982_='&L!gN.Ho&U^[.cVd<R:)cEWl8c3!#?eaajZ265Rc`s+u^7(Umfq)``7ZV
%qL]<(k$_oupb9RPeu^8,//B`,,VjO+$6fM;Q+X0ZF>-6ubIl[Akc:LHjo&`VX\'$l21kt6#U%Y+PKdQ<O`0oo\6DtaMh)cHQcYrU
%9Nr3!4qGBgRE*!:0n0.f#C(i"M7<sIHo4Q-OMU0B:B8KP5P=lRq^I.GNB6J[j/o)9pZpdZs.C8NPond[6OCLsJVOP?6d(6mRIV)/
%Lp,RD=[l=NCE!J+"O<m5[UD^IfKj6$nmrZ*rW[<IS0G.lc[Fs)UnO#=JIM]d^:A>fE]s`((D'pfSQuVT`Zact_Nkh[.Q(XT<(-Sb
%!ctPB+mb**np!(*'ni?=Z!m]e?.:/5>S7rSE%+E0qmM-(PU^,""nC<[.F`dM.*mqjYZZcT)Y>/d<nL^i[<;dbo*;btq\M)(%qO1u
%,c5GDdii%2iDQRS/i&2BR?/D+R'r]96=XTEOD'a6@>toc2f*r0Y\Q,uC=Y*;f$'qB<6clOAo!nI\'^,j];AL(AY>Y7P1.ZbfE(&m
%'WH\8M$"L-86RRe(K"nedSqs'1_`0kXkJi[Zg6f-*,c7aW[fE1f1msHMdfR34%)V*1$=Ec0IJDnE!<or553b'F&=$4NW;B`gG!`t
%VKC0UQ$O=&/W55KJNaKjbG*KIHl2:Cqonn^5J\1j:9LE=rB*oQK/MLp0pURO=?Bd]V@^n@63-b@P#Z0]2*/3cN(R-E>p+.pqfTk@
%#XjG7hOmM1gkOS3@IFfaJ.=d(\WnVh[ZUK($YGpgCb+>f2N'[_Ru4fi#u%-3E)Wlf@E^o[\#]%H\8k:i/u-pF4VG74[?d_I!qE#^
%GC4#12Muf>rM:DuU%'qm6ju;'f=mKL)It<S!"p7K]kZ)q;%.9(L05;hkPi<r>Ym86:QEVN?D`h(Tjg<-7BtU-TH'_3N<;++-Z;8]
%N.\Eh<U407#=kK\>-Gr^;0"hMX)YXpmSiGZh-@ZWS9M&n`"TfsU)Vp_N1qdj_P`8]p#*C,]c-Tcq=\da3=b%fKeX/0AK7uV=rSl:
%Nn;?.YD3!\^-/(^F];?u$3<'%JsdaF*('"Dp9-\a,L=%Ap2g''Ght.b_]hmYQ?4""@_'q352&6qR9.:T0&I_q4'>R//Xo?I>7KeN
%6F[`)2)RR",L=%Ap2g''E8L''TcO\2I]u53g(,%YCSc(Y2B9o=c%s68U+d#qb.gP`m"nQ3TXr>1*>@Z$6A,EbK+QB);:pV!:CQ;:
%BgJ"#hT+n0#Ju>@WntMM;qk`Aa"uV6B+h-@?Po>j?BYqCp"\r-CdA467-%X(?^X1YE7V^.XlhaTV8-b!dE\(Lo:B@ka4#T@lZ9?&
%<&sG(A:GPOJPenl(k!Lm$8./dLh.*ZTbn<9Pg7ZA5LB(:Ln^=r/C>BPo#[a@D.UZ$%`XiOBctW%AT28>hbcIm`],kGkZ5SI]SlIZ
%W8GU5blmEKOLsq<TM!$pJIU6S@OGuJk+r"_#+d*s5jfLuLri)?:si[E@b(BuTN1e6NQ'EBP%pq;>UZDQ0#Wf-;4?8"lrSJ6iE)ct
%^F5qV6n(H^"6<n_1+5K%+/0V=CO<9cMnRFt;>`9h(dsiC[4!&/Rh=*5@-jN>QfZiJD<KLU`=VeVqG_F]Bu>R"RKuCL-^K"Ms.N&Y
%Yl?u$/eLIeLntq3&>b#i`fAl-!&<\=C`g",@6GXLDpFDQ144kq2hYX3S2IY\PF_gn0'BYchA<S^g$enkDl<jUFb'i(Lcc*`<1EbN
%dQC_:[j1L_>97@l6gud_=cq_j]hqWaU.)S;kWs^h9:KAa&,becju`;fht^8V08cJ("FOl+LW,uSA-LS)k^c41plXMq?F$@QqQ\td
%9AlbJkks3n[h7^J#9WN\_[^-so($c[=u98/J?/@:kSHo".<L9)G$M=S0$:VTR$t:,XJ6i4=b+MC*ds[^6@JUhSf6[X"-X7Obbp<M
%dttKmTHg*jml7cj.)7piSkRj(8-`!*kRs`Ik_aWS,u6\l;/E"23'kf=+Ka)faS_^?*^li8qpHq0h&+hn]Go0u8Rn5J(UJk?J^;_X
%8cgE4+Y)ak"&W,g94>^X"rdcIa=EU#Nl4h;6s!SQ*IPoj)tej03r8X3;*o890I&13WY$:l'*5$3dHo=N7;K4tSf;91`iah'Uk,U`
%Pg3i%i3d23,>1CMo!8ce-jS9>%d$MY,"ND^Vk&@O)L?7]oc_OfLUh[nI-u(Q]\-L"ZUc9Deq\4*C411oOio4J9JJ!<^P.MA(\_Y3
%Sj5"_1/NpK4)//=\=H^Am7`_dh';LJZ0U`'Nn_*ia$7)>IO:)j2+KKd6!N2(pl.RQ#[2LrpeA6[9F:#Vn=+$aOBKB'Rud1"gq>]F
%L/V"6=>tliW%33n]>oPJI-r^P?Dg;Oj^:[If&#*3T";C4EW#/WA+L:E9FrQj]iqj!:6&s*Bg*BoUWGK_ZG5^oO'm#3)AGaAMO">%
%A3c=Z5Xe6OKKmO07W,jr;I3fmeGq8OriM4I1SR5.dY_N&"k5%.H\-.0>*NCs%b>_OK?IUGmtoQAro,Kb4-aqZ?-Om+9\R0K<t6Jf
%6#Vj&Wk6(>3-`Ik5,SlqmPfEY,BE/]Z:<7mCW67UhAA-No;N-&p@)$]0J:S,3q1"0daRLT[.lVpY^;d&EObtb0DOON[.Fk_%R94P
%g2Ii$aMs=7%>Jb^JVspm,'Jk9N70*$oC^9JeX)i^/?1k&OB2$bGV!q%A&=H:\A`hSJQjV"UX]+M>;frtBN;>$/rCM(K>dQRKkZW_
%quEVdp,EbFn->3Z6:4"7.',tCCVUD`RERkoBFD4)ILP8$J4SQf1\5;sp+4t*>_=[$2Pe,&>cT*^3Xroj%6PFEjOtig^4,ll"P;8C
%!IOc^eDoN[6e(-\JU-%e=Pi`r3da3i[g2O2&iUjBBYGCr9A6'ZY-mm0C[EGq^(6b&,OFU2JbarD_G=-a^rKB3*RK!XYSY,k8o4&p
%`S$jmiWNt)%n0+BYtY/U5Z0j,Y0/[PBS\Xi;[l;W[QZ*aZ7`=&.0t3%`+9fd<Dka-A.St-Ys^#/5Bt!l52>PsRt&-p3fpd@b$KDb
%ZZDX=a\EF/`5,C>kRkZq-.2R1(,kh4"ZG)&JMJ%9>W#&DBl/Z.PXJBnWkpB%2Uf9\53\_j.Vd/N0h3TC`dZ:fTb!".'_+A_Ofc_J
%D'L/1dh%Q#]`i7F&.Se0_jD(%W^bWWT>B+JN,X;dV4_1=e6IVLCqUO=)[D+L,"=\?0/>(q8ie>0;=+;$mmVM"etSO'lOsGd,",pK
%$aFeGfan:ELM[C.GSoPX;N,U"MY=G[GLI=@Am6!.<:n_O#.[[N=91jq.Sc!ecr.0k?0?V.]i($^N.g7/[h$Re\U?0^#Ku5>IC<Xe
%boo")3(\R\:uAFh_A*p`-F"pf[MD,5p>YQ!N!#)9]#V%Sls4&pHL`b;p+ZD`'C@1V08G2sl<[;CdtD8pM5h5gK1G_;13WYD6\g,"
%>5'92[SN2;9WhXBe-B%j(F`E@FlrA6o\L(9\)g6MnT@?sH8,&JPOuN.^s\Xf9V=*Qo"0&R7'bQfaHf#_:@/%S813ID]pR8&I@P:n
%RU-]M.eFo"'-k-5.mi'SLfT9WRiXh/%G+B9L:Nl:?2?"DK0p5(DM;SVQX9BD]j=)c_1V3$CAl'RKplriI!%$4n49mQ)T\;S(Jjg:
%1W3cjNe.S0A8.-UZ;4-g\-fLDZV!hI:[)K7K-2NfU^P]KLmF6nFre[^%USZ]%dDAr*Ie"T0V,]&>s7RQGNInb]AfeO]4t!p"m]0i
%oE[8Z/ZKSAqt7L%,%Oe^IS5@`_JC=B6%YiO,nmQ4b\*H;]5N,PP!7uLQh7QFVFkhdZ`[O)7!6c);h$a<ja=QH?@4q["*cNDqt^"c
%@iCZU9aE)"(nh-eJ"2nrKb;'!6cWY+rg1%\Qj(Y]U%M4P%cGn5&?:q;VTtM"NZO-Q*MGo-Bnd\a5PC07L`HeF<2N(%I,uP548cCb
%^jnl]0s%q/0QcW.PB.Vr0ShLlD&&PXA2+MZ]%Ve\?6=sD2Q6\b1rmW'T)/c5i>7g!ITG?d('#r=Lu-3I_UKF:_u>`'0[o\)&ugL.
%A)jk\$CuhoI[?:R`Rps>APq/N1:kg\&W.4ul/3"8a+i>uns]jRDKoJ^g=^UsXgB.NRZC6X[aJ@Roli6W:MW(e)g+up7-4r4++Pdu
%=<f`W9iY5!<fZN"@-lOco2Q=B65QAM4F3""*^9;N6W4k[a^-r.0jC>Y:tWc2&!\S/)TCGbiO<`44N&d*d=ARd9mZ]h-XR:+hLI86
%>J'f%d]Q2%oWRM`BXqjpi1*?kXhXQ;l2547:eK!L+@]f_-_h92GLJu1n_b-HLUPlO&D&fG^/8&Fc@Mq#`B-Ijfc#r<c!oj@&`4r-
%b]9BSS25&QK#g\?-CdaS6QbP$BV;=GVZXoW#8VF<SEbJ`cib1nN&jGuEs@U8p)ik\*+'IPb8s2I*cl391QS:?pJ]UNSUN&mb?2Qf
%X2?Jd"BB6+SWC<'.b<e9<CQEf<AS#IT[K-s'[XAs.I7.jEdjf1+RQjZna<@+5Kpf1S2*XB*6"ic;1Y7B-SA?>iggAr"(8!1A$k@6
%QbfWarQmY_/t*'N^^pWXY8DJQak=90HX!Gd<HO[GLVl$*K=uPVp)&$D)_Hq@O7t6MK7J",$DmlFD%3co[;[dN[Rjoi!$;'Qi3t(5
%=WG*6kKlu.NZ2uAkT3mdAon\"!-5Bl]m>!=@Q'ocVDX/kgLbOT;@Bca`/r*Qa$.!$+['$g4kmV(7gl&,KUt&Z&9`#1VJ%3i_k`c2
%]`U\\W@c)[0608K>@&S79`%*o#AI,"[03/$a*B^ja$6SQJ'+DL%+d.l23;%sQ555_7O&O4[^<-H)X)U_>T[IsY09"IXAX0?f[&U'
%h<pK9_`_Q=+qRY787GiKGoJA&(L]nV+:-9W(8KUgL$&U;5)c)DF+sBGr-4a-3+)]U>h"HqgV)V0cscfiFpmVZI,(?(V&Z9;i$C=R
%@PVj^)@amK:k"#TfRMm=*,JZ3cKuldK#(%<J*o?`;kcnN.-`\Oc/9lE2E)g2;]hXB8Z..-85_k'7*9[;Zu0h<+dpD)7&kD%IHK"g
%'@<smrun"E4\g`*\rKR`P?d^a)*OF6<som2nI[C>)C(_m;g^tm@P!C8#ji`2r.jS)>'g(s>3aY79l0@I)N7KlRg#="%YXH4fjQ@0
%$%>DaMB8]r;m.P5(+%]gpLa`S&d4nI3)Z0nSFpQ$&V]R=o)&(k6Ml'7[s^DemW1$8D@#c/GL42"D4cr-1SKc<\'%6Nml58j44He?
%Xgs/elK@j0\Xu7Zn(#G4To*h',E<p]l9k)sjcNDnSQTKGF>Teg#l`OiA#.]"(+E^(QF(6qgFO*q/eW`:gtK0l^#LmrfTA03_16m-
%gBpSiS7d!:1GjaDYfWIO'unJIq%S107)2kE'FLBQ(&pPQeF7<S<JTRf@b6;K_0;`9n)!SUS<EbLA7j!?ML0J[1hQS*2b0sR8Kp'2
%)nr/0(?[%^%chSZnDu%#s'8l+2EIaf=pMfl@h%c/YbX;3<\$b2(\*Af:C#p$4rVQ[(K+n?U#!qMp8r7iVD,>jK=b4_%&[ZQi#8j=
%CM2$`<2WOcLkHJ9I#*sNX;X$:3usijkJMAh:<tp,7-iWsP82V*M7p7tWc^W.DQRfg-mpmW`C=3MQ@KORB,H=W]2;Q/Cn\Fm%sdRC
%_#8;Q="?=K.sd+[pX[SlMbpR`rrD>K#V,Z.\3:uUm;;nNg59;#"'1e%*o!hpKLT)Ln+\>t1f]"^<;u[DYsdHc,\cQKVj??I&L"Lo
%<ML!OZaHog4c+J20;TlA6.0/b+L+\X?"YOi,0Pgh3ZYlnV\iS/=srV>a`U&:.[9LG3ntP];.hGhW..Boqt$jB1A;a`@(SYM$OG>p
%",a3Tds0h.g4h*6(h3!9clUgo-&IF+lVqih7hWf`g<@]YQhrTN!]]u35AE<bW?qPBN^B2X=%iMSO5$fh\(t#bYJa`,Q.I\?`0.)U
%i'Hs2$\1ua;a_X0[QZ=7!40'9rc'Bs^/]Cj<LlrWX!WZO:1c%$<W%ZQ6T`\nM<MVk]c0<bqK+1)V2]6[IMNZDNPA?qNBpJbXBLFO
%5T)"iO;&;%8dg%4mSK?=`lN1&B:,Fkh[F2bePH'nq#m1HAk\njPu1=h,^L>61)[Q2G:@],.W,rpJHG(m1)\#L(!_Z<\Ls*e[R+H%
%JF3$&Xg$J$as_%i8G=H!pb,sueCuh0^g.,S(a_]#&l``<[:;"T3+)Deo'G,pDN2@ND6=[ZIf$NrYTe!$mT9:JKCsYs$Z9>5WVsXR
%jMbO?H[*btQJ/GDTOkBMi<dmKW;s(<o`:<>'7a\40e[I+i%_1OT#BO6g/&b1B2M@h$UQ)t!\(^-m&+gZF9ILu#Y4C:b_FhNT7Oo1
%=24e`RFO#KoX&'2<Sg9[f7Gf@dm+4BLJ!EO]_J:W+S6)<U7#6kI4&&5^#5ZN3],b+%USYr*Y=$^SK]KiX'+i-WeH\bn$]4?I$6p[
%=[f3/*SImfkBaRm!W!n%OTs6mYVJV4qC)OmkD';f_9'&K^])O!_lj1W>@X1SK4peK*(;DQNM:"-1>4dfB-@QK0eF96k,I)Yl9'C?
%PgJmDd0c;WXq?F`<\@!rZ?7l4mYo_Q4F&_^8Wfs:1/8(XpaLsk?n]8t.HU6*2gmD`jIQ@.DsA<nqq%3C+9tM@2$q;Ai\QMt[LmA1
%JL9Se?@YG?Yg+Zo1m7Cb@c?V,XfL'ka*s31fM1egiBhcDl,_*/_eW]I#juF[1=/'[?3`iCIPa610dD)jPfZU`-Nt`#UbgO%=?(QG
%V`*<CEo*l17@C7ucj>B&Wr,7BM?)Cm7[\<o4>>P=W\".)PE3k5M?`\+F,bOf<ER$FW*lkjW^Ab_CgktTJaJ%)<h<],!GZl^a0']\
%08f&[4<4g>XC=hf&#&eGaU:,uaWuE\Sj3e4iJ_S?R>-qk(Xs1!PaT&rEej110JK-70K9>3)'JE$Lh-UkahmY&ZGiOX+"NLF+Fo3X
%n=X$t%sU7F*PQ^')VTbG"YgCk_q/U\'b"anB_bs[?/Asgd^LGr!ZY`!Zr#FV3$aC2YRAjCRA++p;%6-m#-8Q6(8tn#\H,<CZc>r5
%PViK`p&p!29ehqb(]$Qu<aZkG,R[X58F2HCqFaNr(%0$@Jk4?pG[dR.bBClk$B@,:FX&/7_/<qX>!_QR_RG:ajBc]:*ic_[J+NJ;
%oUTLep<\ZOYOgA`4`Th-rkX0\WODE-D7mRLr,'XG=%OoU:&^"MpQ`"k>L2e:QB]<aelVUE4no[D#6p[-"&]+ZBLj0hltBn=Uo5N+
%=$;hhcp0E!!kin^X(Df/CBdVl5PM.D"3M(WUa)O*TlaWO"8!^c`O4&s2X1Z@4-Befl%'2Z6mCj<2:UVFJnp6!ga)tdaBC)>TXGM`
%`^6ISp>ZejG=4ePFSk*PG`*k7Talq\pTOA1lB^*(;U7iUE0jIB<lc,O/=1ff(0VHj@LnS'`F*F-4(B>F92qBl+`jk/PSiGLD+Q(M
%HA5!=LHZlF&>m\_8Y3.'P@fGh:0T%g&.oeBXoon'8IGo$\]CXdi31k\fia6kDLQGT"B*1WMF\aI0JY[TFFH!BAEM@WfK=AK%r"lg
%X;FW%9-0r9el\FU1-J;CPXqRVO`qS8PjQ>BY*M_D89@@Y[p;P_8CH^qY<?:i9,*i@-&ing>%;XWF'5CAs-GPu."o,^kjZUsh(7'l
%>d>o71VV+F5r2>E#FTM:p0T+`&L)6LA,g]81l=c1rAQ9kLUkXe9B+^MA;iI3C(LqpbXuJY'(#4R6W:QIDemF!7LE95KdB\`849l/
%B%pESL!9^cBJulL[=m*Z(FMGlfsb%T;f&94gc?-<Z;73;2!NUGRm$K-jJR-8SHe"4eHiaO(/8>qU@/l71[C_4$2sSe1uGA1f>D+W
%puHr(1]HfqIX?=.mh`@%k')a`puHqe1L?m/;k&8R*hDgo_k\/ppk$PZq1fE"B0\FI1((EVd]a!H5k`EpW)83t0'goDXdMMAl<"BA
%\ji&YRKmeHoFo&LfXecBA=J\Z.t3(X_8[hiDr%Q#[eRYhmC[><n:\0A`fGm@.<Zm#A28]odtU(8AqD.T7/2a+1U>Da6#T16`A2\L
%/AIYG\eLjJBE*]^Xga\'STiasTcqPn)WLF/[FtDi>FD[Mc[C8UFc])M_a80lFkRl*2eK3b'Qlk<:qnNb_To?)#ft:mTp2@*.819]
%=4r^P-^,A[Ck(X?qThG'LDU1c=qd+K5Z,'l"ZU"od?>TQZ8Vrs,=A`]82O-S#f<ff3tqA7r=kY"]Q\2:8UQ7)I3Qo\.df/8/`nY\
%PJrpp.J>Sd0f9bi`pIu_6K^!4aFYO?VlE;pFIBL)?.)IQ0DP/IlobGSRkMBbMl7ds,:F;$4P5=![lD]p(7_1Z`^)O_Oq95jAbq)q
%@JnG2VKZ84m;REd\<JfUJc;Od1hVZ2ImZQQ4mUS*8FMt:\0S,P"S5X$8op=)XH+Nq%c6aOa&H"O=HR<&`g!>&P"s8*.8*jVUu%#t
%%nN!#$Lf?K%j1[oo\a\)>(E=+gU;"@c]lkT#?.dc#9DNnYqTepOfQ<&M?@3opTt+RJrR-g^r9=%]+/A72Q5Cb7<n]a:VX\o?plrX
%6"Lu_%TWU]#hPRN)1;XVl,MJsH%*-[-loI0QW7i`1m1HO0,2gso+R/Kh4AsTg7GGP>I,6c2-AFlXLKZP*]H0h"CIue$3[NRcGQ*@
%gNJ\>l(Wq'TS$<nqB7^1&/JgEQQb`ajj$PuWiJE'`&"M_]PSRj"<,VEp)OA'h*:U3kX"X_Y&D7;ens#N&0b&ql7Qg6U&oT`2W2:L
%h:L(l;>I8l]MWL_2afX9]N?UJ&K+0ES=,W%]sDm[n4`19Me,!^PX6Bi-<#6m*E$^"^Uk#%qK3XoV58)NS%9;lQ[a^ibNZ(6K$m:"
%<[G^f)fWQHc]?YRUt'oV[j8:7-bll4G'i&YimSG&h9LC0gr6EK#Ee$[I0cU&PXE8JmhUFog6[8,9DlMoS*P?`/uqm]Z%Qfr=9M:j
%_)jjTR-lKc$o-N$h*DsZdD(panebWQ#&)'MU8k-Q]t7`lUSG@Pp83YbhXa%<\#C?SVoE5?q-^"-8NY"]2>CbZJrW#`2uDW_\<=:+
%Z^]7rV!h@)q/@=G3HSL;mAZBX#t59>6:LWZdY<4gT`7A\%#WW1WLbn[>L"L?2RC2jp>f@rUiZT?NRF%.&ghk79,',o>C#Vj*:9bV
%h?R[:1qR$q:ml%>T9Q+65Kab?Vh6XJo%`:)A)B+>*=In,ZaihA"c[0#JVkS*A]hMW+(VaLqe@Qie5e)2%)'Z*IuU$TB"bZO`be?d
%-a1&eJUq@.N5n+n4?[8GmS_%so9Xlo^MR]aiG&;$V4="3RhN#6Q?(CX'\K4!@$B["og5aU"*b1]+b>Q7p'WD*&TplOG1F`Z!Ta9\
%>H:_P#GRpFFj(K764Vp1iR99G,K56Z_QrFLJ?B:\XPXl<i7_L7r>ra=2!X2A)oFMrT?5E6KE2Cr!%dX]!\^QIeEIE(&Fm[[U#RX)
%4A1ngh8dZ=Hc7=^Xq$a&<2E;q+bglEV:q<RR6ll3PrVc7V$T;cn<A/pN=;-s_4KlA(/V-*1TV.F:pF,%7p!a^^s0d?W1k+sKf6l*
%R?ju%N`..MA`es1/I"qA^>P<aWn1DVkSQbBGn!'gO!%d27?3mM,sW4</NHre7bl0N*On$_rf,f0p+!KA1U,([";Q?>$uH%C594m:
%BE<BgFDQol)V,']^S./gE.tP(e]&K]:/*OrTW5R:)bcsS8dAH;N"$$A'dd#n:+Z%R-a*9I@G5TsO75b^<Kf,TMCuBS/F<RUR)=kL
%7*p'['L+'n#l4R\ZqDcN>Xkss=c"/uE>@V.n[R`Q+Q2_!JmDjD.!op&AiN"IU)kRb?$ZKD2ukVeU)\"B+2B$05SJA*$<*?S(rdVu
%Yt&rhC7)sP3iP"hS'I16SS;>_7q^O3T1]57N=D[_*><Jr;VE$eF+bf5duGbq&Q8h,TS(_9%#*NBG&[3sRKPb>R7Ge9^ND>?-elDq
%g-'8s`RJX<B$!FDHeBUP,R7ahC[VUE.Y\tCfN/c@C-PTb8[fY.:QWRCCB0m9[>-Q,(Jes3hGoMm&jJ4dGWj8>gH=BTX^;U2qokoi
%Yg%`r&Gk.VjTsEph$X:6!1GVaKgus,$69U#>57+0@msQ(lSdKi;8hSILt/h$OVK2UehEI-VF<'[V.Ho<BItD$R;C%+/.jG.fhVjV
%prqFhrKhOiGGF`odTH`/$,n#IHie:iI3#uJ!4IY-pp?g#s"YZ"5rBT4R'Mt2>#[3`Wj/E=nS26%XK@1)'SD$'*O8?jp+34$)jO9V
%LZea##;taGV(+kJkM<t1nqj$Ci/uTmn*i)M&Nm7cVNG;9mD%]mY.f*YHg_1-dd$:In8(\Tg1e0HJ<:kH2:XT3"7:uUrQ)Xq+a3;Y
%)IcBm9Z:bK`:9<K;G*]BE]+k.^`aW#E=UjqR5Zs+bY%7G-J9sf0Yt7kr$8jt3tQ&&2d[(qm-EV?T6WZIW_>04GJmmA:si2k8NMu#
%_72&f-(:c9=2DMB3ZigcNQO#:S"qjF=!KMVh*_G)g&Xqjl9`GPLM4WQdX-7lGajQh4n'G'!mh_S0jqac"Mo7go$mQ)T1Zc/5.1:'
%=0erF+7UiF?ni"aXajUY:4+5I(r_L(\g1`%CG`tuD"-?k17Y_kX:KAF.&C]66$cKioSj%NS2On0p2B`m"+'^8*73N7]UG'qY7[>f
%O_]C<-hO9Yk(O+sj7gKe:sa4iYIesP7m,LigA5'7_YT(gWp^$imoo,P=EluVmW/oVrD^KOcMEGlWNX*e7BQcl^F$pS11d2@FsD6\
%1b)I@;brokJ/d9:I1SdSFs)r3lsB4=ccUm'CTG%Z/'i[0FKc0gIJWLd6hC/sQ5%SsUMO1sLS`d%*%j4Ld="sDmp/*FX/[dB@G3Z6
%n$O]N[bgF3bn=KYF`'$#qqBr*GI@1aiSJM8[ZLF+]?nKi5T1.f[bDj..E$.(0`g1Bl/tR>2g^<M/u],nJ?"pnD6bQO<h<b*YP9L=
%fg#E2i.f_7N@/!)^]1d\R)I`L&'WXD10N&M+@d_5ACf+_9U8MP9luA=jNJAu>aqdP9-Gs"V[2JhHRU/pW1jC`T7K^;[3OTmOXQ;^
%$koS@RTfpe3hG*78F$]c>B9j(j7d40i@k<kZ:(c[)Y9DL%6IQ(Csa]aaHsf;g3A,[2iN2M3CZ71gU,*k&#ps;$rfVuMcZjY`K6,f
%,ee`gif'f8A:`LOKEP1XD/9g0ajsUbTKq4$o_.QQHldu]TKW>Rf15c5TL3FY9;a_qCRtq[\+P(YK#8>NJNE>Hf0^Sq__UT"<":<X
%aN]=I'/tgnh;YtRVMmVrR[*POJW(lt=pf)*%_AZ6>RsAo>(=J:\0&]A6g9B+m=4mIdkFXS'32lR,6(G'J%1,j/e`F6XEKJ8j/?Hu
%92]_!85r<:XQb3JSSf5K=C>;`O]Wt?m]liB2EMjj:o[2hHRskQ]T)bqn;C2QKY&$0(F9m:l811o74'U8?$Alp7/jN6R$R&OeR%ls
%8.so,RZO$6Lg7%oSQ`YbCMO\[mD4MRV`jh*V2Q?`1nr5k[P&;m!kmc3RO/B=]U-g3[l7pd..44a//n92/Mkq)IU^pf=hE00>4tCN
%.49!h0^ts4m^KiO,^,.m;V]9:Q;RQm9D+o/lrU`>?QK%VoWN-XgL$goi4?^*TViatKut_gqi]OH*s$G-ZO8jFlO\b6m&EpIVA5`5
%no,Hn6mbW"'$iUb?E0@Ih,%D.e<P-?q[3dW:i8_DBSfQR^dF5/BWtf6[Ji]R>S;fQj_=W(AZbgX_)?UOMuJ/Ya/tg]Z]HTC8g.2T
%0Wht^V+<QTFYV.+>]Kl=Ep+Ec&GqUB%VXV4NJdqlZm"Bo6(4Z:!j[?<AFq<$;b:$.Rr$6Y+:KYm5l1A?$JFa6"-'\fgo$a6h#P3,
%;Cd&4,gM`)DPCYcAZ$^BNQfMdR[cR`BZ9?![)ip'2'ti:+8s\YpXoiS\PbJh?T<HLf0P:Xi+T^rMdl^+cTDq^H<PD+e3?XqMD,@C
%N!LN4*(^]B/*TH(BTj)=ig>!X"lsNq&Y6,/VY-/T>U&U""KKpZX0^uE1N>*[qh[IB!K$93omR&M!k;d'>oWPR+is\pqqUA[hr@h[
%;eLP+"Nf/\nj:\N"&1(K9U_HS@h`KN6s9bmnHR/<U1u.h2"8E/KfjM/U2=_47L<@5.,#tXlgCk"mi6QsiC_3s0+<4<2X]p^'5*#K
%Q@.K.mC:mPb#\u7eJ;!5fb9Kn&Na8qF9Too]<.`283=g+'K>HmToOsT^Wkjc_C*m^Jh/@/,V3f0<N0J<'.\`ni8egp()&ZnUEA]&
%FCM]mo$k9u(R9;n(r88A%JFt`EO>'-j'$Y(WOIWpXSqR54kb_4_6,.-L]*6[F-TJCK.8tN20O#*SMufsY=tGLVG/.Mg2o8jEk=8I
%Ah4aRTga/B@WI7?9l2FO>Ckh[P.b(Nd5`tc_l[L6L8kHNf?BZCjNO%6W&),!RL,+[?^s.jnJP2:Nc.a,[Z,6EdmS23B9%Xlh;9Ld
%5C,cfc9VlPX8@*7<pKa"A1MAYdNfdcdaap/fYOS]bm[RF=`mJD47Rig%U3CTBPP1k[-lNT>X)uJdSlOuBO(Uf4mSjfF**:/AGLSO
%W&m"2G7U1']5P"D:4C^1r3k:hX6q"kq_;C6!O\OkpY:f7"Hdn%P3.iH;,6P9.IX"`k=8-PY:j.j5>MbaS\*qHX,k3T3HfAqm>aV>
%aLh%bJ'.2E_k2f4a'XYk?u":gWkr<0Fes=g1<d^J-u&cX&P#Z-0*811dEFbPND<Au:td4Oh-ic-8qc[P5d$g*pKq/1ZUK37V4bg;
%+ljiara#-jZRjiBX+^R@nQZB.V+M<#D^\>,15R`$/l@<?MZW\o$k0rN_[P0@P"5it8@6Nom#*%j.c'UJ0^Zr<:Z=FR,UdCW_8)"F
%)'9:IlUT5a6[6a%&uVL`U@9#D.$=m,)9)"]`O9=lP@kTmQ;NTB!.]?[^u!Mnd/X/[HGn]k,=`,@4\+q6*!Y$sm"JFOK"]YCF**E1
%)^duRef,<2onj*-h8TUdG_'k"GQGen914PHF:1LX=9PV+TH9?#f"FaYk=]:XAf+ks8O%(sG<4W?#943uDMNk828lNI&Q8"tM0V0u
%MX)R3kIEd@G]_3"UPhXtglAm;:k]="Fr![lY.^8$`3]Vf4)/5>gJO.@pTd_Bpj%3RO_\V$0qBrAJ@_-L9pPgZeSgD#M*?$!<D<GV
%)rbc4kXtl5-Aod!Deti"e\eWkXjo3sN15CJ/quFq@Ur&EGUDCuAoDPVj6P'u%IG(eYuu$(OB3SV1IdCPpcHYRSrOur3bmr'eDr3'
%d-'20IPl!jf65*Wm>0Mk3+QCjZS9#S=1/dKq9`BTUG_kp>#<=MB5hn3YO!7D*4H#5?60#VJ,&c`Fs&OS2A]hnCtUCt@SGAneV?iM
%AIB?!QL!E_?'!7a8PXEa:,c/(AjYV(KM("!@9!9XgtJ0.[[)6k`kSt@#T,9h0CMWPjR[C>rE,o'hC(ecj;Y&gBuUj@C.@Vp,gn`a
%A:g#]/5\]p)b[@i+h/cu[e!SVRT[:da-n=%L'2UB8\1"'<rQom-H_-"IFZO%P3e#_0PcU^Ptfc]9pE8?AP`IDA%$o5+g[2jNiX>E
%XIFnl'RSWkkC,Q6KF]*aglO<``]r<WK`!/>Ef@)56Uhb^P.9Z@q9R,[*C66OXKI,+hld67XrL=R).tj9#?:e-]MZ:q:!_^nN[L>7
%jErrc3eBrVI^`bsnFQf"3a76["RV9C^-%/86]+c2L]Yc1OOqfUja)GHWFN^\7V]_#1o,3WCCm1_'\uQs.U1Qh?u0-k8O%/`b(T=C
%mWURUp/58K?Y7r?_pHZ>G3[fC=JuuDfP3`RBo,*O5h_?H?jBJlDC$fd`:u`CX%#&!-4=F9)MUs2OXH4.O[1kUY0S`-M,9(8FK?Zd
%D'0'h(k$ck>BjE?Sk]N@JA8/)\Ht0nVB<"?$:Nt!XAk4P_l\^B+r"4p*"LH`U%C^i2WSl%6uWiBFEM)Y:4Xp18W!=P2bE.%dEQ9+
%^gc'#EeDct"t<4-qn_pHmBWMkF`r.;<#m.E&$0UFh.38=[AYLWejL=-_2TR]]mts*XWk@4j^$P$[utke0B?/dF<ph+W74a2`>)mg
%]_gQhLSO@D><qkpp^#FEM@s6L^r4?"'`qG?Uf8sO]WBc^rAG4o=^?%5JZT8^J#j$[FhOf>qoR!Ka2uMmo2Y%]U#dr(cZdUG_jPfG
%pK]p>d%>M^f@Pu<h(+DM]j^Sr7fA<]Dn8`Ep?m8SnI8WsWO)G@0is]&XVar9jsojV$>B,Ls69c:.al'`n7.a>D1S>.!+9%&?5?FB
%'k+nH[W5$A2-anYJ8KY6l"iY.R4R94pMASg2/#$r2/)Tb?*:=F_&(\EW46r@]XW'a6F@H:1@h8l51Ams\a".:m<Z(4ee4Nh]:Q\3
%[9ZeT[aVBW[YY$m%tP3qHHguOnbT]ZogZ((k3/hZTrY2eX&oHSFB-)m&mE(7>uE.8<jQ'Zi6R.FUP2@Z>eGj9/K7sWiuMZJC`RQU
%BR@hUg`U[W+`i'abZ2\%AU;&pREJ@9X8ISmEt48+N?uN5KBRPr3+?bEn`pNq)oR/uFC_K,Wi>U3b-&ccG!3$$[**lS2Wga2Xdm"?
%HWasWb.b9'o,t%A`So3[aQpr`aLCh&j;k8Q]N_p`[Q=EgdLrTdD^VSkT3gYU7eH!bG?2TDP?5V>-1g/=.@E-YR$t3be^h&.hb*PZ
%A?\u1Eq3+V.1k)&2_4JQXLu-Jr,5=B@+G,jML]H#&Q`3=GDlX[W!PA?0,]<1T#74iVP1OJVM!lm#kR,A#b(l-VTu[b:.DHq"#$NB
%0eqaQ0el@'[AacSHHk*8Ln4&sFQ\-]JDc=bJNOP?FNkJ=9-uqq-s7qe1pKgJ.u"D&Rq/I:.Z1jUme)_7UB-Zp3(QYh!84seh[g#L
%V]E5,c!$@Z0r<Ah`0>-XZ<Fu!2%+7g\DI51LORGO2Z,J'q>Emm4!aFr-eG,jb3dW*k-1mACll93b)?g9[faBroPRs"09G&$+8ueR
%E&T<shZ?p.NV"P?E)!dW>)]'G^,u46BbS9$RPpP`FH:=A>Am$:3u%f@-P]2=d9<t*!h1@U9N+92c?lF967/cGdU:GZm(M4b)59P;
%\QJIE(sE[ZP;H0B&4)4J,Xm"2qh8'nD^1Aj70(3Z]rc/]j@ppVS4eEW7jXJKR`pO]j-:3Mg@>rM;H?2iJ6Hk.Q<.H_1o$&e?N]-1
%M*PPEo<NL'0/h+s5jmh'K9lcL8Xk]:.TW;IBrX'6.FXo>egs"e;*aM+k<9E_DbYQhY.K.M`ouhl588+?,Y!M!luVRE<tM6@Y?-fd
%TSTsH'U<B+1ub]kW11fYL&LGVS&]6KDh%J)JE[A%\"W7^>^SY9A$u&HZY)@8X1dE=2;RIoWdWX-O/mcbd=p25dpfueh%0HD4MMZ/
%<7/cIo^(I(X>,3)Q+%=4?undr:SMRl2J[+-?0f@RJ)S6(DL_Du^FN+3#mD29qlUR-4P%9.U+o^nKH`8O;02%t[+'_Xf?K$2o\a_5
%^\`BO)8YG4OV+[>)a>@33U%P]3/V1M([S)TTSUu\Lg%":@_B7USfU#^mWUnfj5*Z+n;@`OE+"!]oAnCc95(Yl_O.,t1m)?T+qDFp
%+(ZI*R-W%FFeKbBSHCX(N]j),P==>-3l6gZ91Ms@H<5LB\)[JM4oYY@lH88dGokgHe*fU"lC[I=r:S6c7c"r)m]42L<[W/DT%-EE
%.OMJmAg][/=$40`5D]fsF_T>k!S(I5;"NVj9g-nZ-Mjn5LrDrIW&X$=(\lnDX]l#NeJ8m%Nri;u6#%"K)sN8p"KBR%2Gn,ET9;T@
%8("]NmK:aZ7$m,&,?EHVHSgdt2"CZT2rdB*`GF>n?bbr1`7)_n^?>($@Jl.`")@>/8e8j6F1DBcZVe5U!J5YpqH/Bf#Ucc"2'YP3
%0%P9dd5FbPgHg3MP^[Fj*J]_)+aZ_t.J_J)Pr!RCQ0">=YDeDO9IL="Q55'kXlaK_%[rshk0?pAU1]!TX*I)SFs0-oqu.X#FgkX'
%I-Rlh;&Bo4Fjg[BU:or3iDUOM9B\JjaL;pt.$DGW't((l@<!HcSeO&o[rq9Tp;?ZO./iYW.or<X1r?uq&q-iC)I\Lo,<V!"KRNQ3
%REL$PY%`R\&(1a<m+p"of5K(C9D"T@fOo+m,Q%Rabh(nMH78a=g&%apc(AOM^0U)DgLAM+`L_NjZ+h:BN;d<Jj8:Dg@ijlno+1/G
%[+?2e88"G7l&6u;/S>/.5G!8RJ+Ruch`IE9[PPY2mu5"8aBp%Zf4TKbTCI2V`aAI)nO^K4_sr@lHoa=KcUWW_#Nu$`6oGoTQ.`hP
%-raq&/<.1W1$<R$VLr*2Z>F.SqDW+ep(E</[*eFV0",&)YoFH'>a`kfA;7D=e'OITMV]1;]juI9.'nHU\#CV?h(/K@MP'X(kap\Q
%M"EHd%u)WXXK),s&q??nI"N^dEa[0C%a9<QIO.IlggF[]3983sLK_ISO<[)YkW_Gu)Qs]\q1A-[!s[Wq<c'8CCUPC5huP@UNk8sp
%EcaJb`b4-u#H2_(mHK<6jC!qJ!E4Eq3Xj$43^G1T%?!tV4@?%dA9%A!V]H%.ji[jnc]1gS@`'9i7:n%:<5Rsfs),#'?4W\)e:Xut
%ag]/jIuuQXmS>\(!W&Op-BKEjoSo)1qZ/fD)O4V,JdSbM-IUgMjfj*Nhl]oXjjDQ+ks,0rJ,T,jJ,%b_Xn2I/s7P:LbMQY+bQ%,4
%X<781s0$qP^]3^$]FR]Up##D_o\GJdp^Q9YqYu"fP&F'6@-S'm,sbW!hArXA?cBZ$7bLu8dV3,>XHD.FCQ'/<(]rK_V7Njcci*"K
%s,.2boq.:JqTF?h$NL7#"hJ($Z5+g\&"kjj$5Oc?KQP)^TBZ&2hB%,%E(%(NJ__s334"0'M;?`pD%F\M:QEB*$\&['`:6>;I'@0o
%71g'GJ'NY/r`p;XZgD"eP;sR5dt"G/AC_>M0(:Ffbm7Fe\Vi^n+;K`=]`)S2'(#?H@^'@HAcPd7aV^+rLS:o8,(PZ=$:iC/&bB!$
%EMA0'X$)#1S<SO1(n:$gZ%$fQY2tO!+$`ZHO;q"-1]E#8l(N-j)MjC<ek5-!1Ys1%0b$Q@C?gI&Dg\j+EO.ekn.P'JWQ1e*-cb3E
%G!,W=&`8h==^=YUR#==DFCX"]V:Ou9\fiMa'\"JjeXd=43$A6>hYD<gguf`6$qNJ7W$el&g2[0QSN2sg,*(?cEB"f+h&!gI551+s
%_a"(3;L^A7LD+tfq3L1MMMNh$YBUcWG7TB_0)JrMAl=2ZJNlUm^rmt!Fh!&7*rAe1JY2Q?9_K`EeTLf_-Z$u&R'073^r]K5L,Mak
%ID.uS(6MuQf)_\Li#G)]ZN./";C*&^1otUF9LPS"@q"m_@(5H/\7QDDb-N]-FeOU:+L8ECB#G/O,_4d-MFp`8_Ucj^=oQ".D3IQq
%7eApebRGi5J`8+Ko!<OO@g`p[=!D_g615:GnKP(;kI6c379Tnq_q$ohJQbm*q,@H>N_Ue.N9[=O;2)HqF901gKCk*k),=Z7:s_eG
%9/5[BQfVZ[8kYU@Gm\7pk%X5@bVl(&TdobJKnpR-MN['5;;skKV1r0d+ZAs,R.5).5ZNM(-6]f7K])g:7Y7utKY#Cg2?'0F8f9iF
%rtrPgJ1Pf%7$i&GI-B,kk&o\;J/]l_TYh3fQK'$Z]t4nS'.B]`$!B2+$nHgi!jRb`gSO5fbV2TtI0Oa,d,,_+[r.'_iJE_X9e++P
%N`=tU,BD(n0s'#j<Q;+Y7;iM)$YkFnY0BE_Ch[.]l_pQ$5oM1`7U4LuFjPZ<IApWE-m2jFPMe,b@[C5EWA[;(W-O]+9et)V'3C6p
%%,$;CS.>8P[lihuqN([T^\upQks,+;hu<6Ipoj_i^]*R!oXB>LkJ-u]q-X,fs6Y:iQ1KI\pJ[(iTbR0'X$DGm_c";?.d5<3'Uf&2
%MWsNZ,0F_"#4Oc[q.iI503Ge!NWl-oZ>j6UZF4b9_\<geFcFdF/SPm<OPS&,Q-rPRC4?CmU?^d\@U./?L"V/G[R[RR?#(C_J]RBX
%]h(m%TY,&%Q>=m:^7),:l:&;^Z8<:g\WR_i6mBsp$=[o7Cit[b2P7!T:+.-$F/ri7lOToupFX8FQ$1"_isK$Q[#[L<;;="01_3J>
%r_gm5`T*20)21Fcc]j5V<esSpq,QVGqQ_Pa@r?$L!Bp8#!<iu`\#%YkW(jGBb;t82(JL!Dnptq;j?.-q8!+k]5h%M/ML@EWrAPFR
%.+Nse"<8FqHdh6GU*b%-S9uVLq>=4<`/A_Hc^FmB8ML`=UVqbf`M-h[aA?')QeO6QfUn;jZHe&b<gV+m'oF56O.Z_-C9(Jl0F<md
%aqKSV'\0H;=[l:5g=QP"'2dMY:,QkJTuPf$$rdDi&pU.><&0F1o3/F2YluPV\$M(HJb8'OpA;2]AQ^s5mrSLa88Ih'_,mNG#,Z*:
%KF$=g2;'Z#j!:=@7acBLeBhJl+sHL.&t[s?'N--J)QUT-FsU?W6DVP!i]1E@QBmM:)eed.Dpo.Y'rQAc;q_h6cXbC\G%!^7Zp]S+
%<L=n'V?3S&gp!jcQ"#+\U!k],:ar="V:qlLg9;ob]<V0qcJd)F0hn^W5skY.pI^)efEJ#J@iF-d\.E><@+aM9e%8"*[LLfR"7a&t
%3g0SVK*]n&XG>eSrb`J/!i<Pq0uMqTH4YYZ?7ipG=V)h^22,#(EB4)N&_]sTp=U%*6cCE1F'h8&:q=TD2-XL_Yrsf'Pl;7InmpL(
%B`:4/ZMQT]k=%=OTn'ZP8$nosU;QU_TEkVK0EI7jDO7<Ak+Z9&A3(?^;P,9[1\eI7D(a!OWZbR^9XL5ZW^]B785mP[C2"L75R_O!
%i>KoemeCK[1s\?VF<%%5&9o\V%$<Y'8D^YK)>[47gF>TF@eHeP@OOBVm;DC4jcem3.(%4"='[1e^?GDB,6`4<!;Sm6.m^DR3aP30
%b$Zma:"?RZ&].[FYKnX^&V\X!)2qoSG3edp;@?IWX'ClU&)>fRLH^+Va@]SIjk<*Jo0M&<\gW7V@.CNIQIQg0T2>guO=[OL'FMZV
%e]KXj"7pdb[*EA$@0W-NcY0H*<Oe[Xm-%/T*W5O^g1;8`bNZ-<6uXe*5J=*K;&k5[Un=c4CEHW5\)<S^k@tsj%OF^QdK#>[lFShU
%9(U:;n'#fmLuPoahUteMi&:/D>9#rE7RfVT;_aZsLmQ$VDJ25WS?</je6bVD<rp&IkTHK5UiURWE@?P]WcA\#G#R?*eVuDYEGtqR
%M+2TKq_0^/6#]]9b>eXlSE7.=\/UY`oW,m!Xih:t=gMZeFUs5(c50@E*`om5]Xuo-e^SIM]bDG&1_SEd2S6@l41t;To3(2iOc*\G
%=.\!8GIaPI<+Xbg$C*3pEqjOobs]GYZB3n;/SpJ?HS"`d!f]gYSJsUI07Gh3XTKgNgHO08N)T00,W-M]XT7`6c)a*a@ld`1(N"aP
%.e.PDB(=C!WV&7tD\U')5WQsqFCu]gIHSM!q)gH:qR"LK;`1Kp#bPeq/h'X?S/1[5#a@DEP&6sOLKRQE%$QT7P,=9Tr.O;YUrcuG
%`n_7o^6hA>R-Y[UWsPmjS3+e'HpX=F('#QK$#N"iK%fU,65@!1dh%V5H5ta%!(EAOW;,Us;;3GiDHoBKKHf0s8h^f\+U$ptBbCCa
%bU_J0,SFP<KQYZpMH6KNj2F!8</=pWM`NaLV,(p5TO5spcY.FTTqM2tCnC*9V0(7_B1\Hg@iAB=HGlMta<hf8fcEU_6)bPVOA3/L
%ZR-%X>e?Rc`Taj"1V2#j%ErIQ;$7'%,OpK,c;F);AGb`XgFSX"dU&Z+BVBO0"@XP'JlE`2'Dr#fjKYITS!0#6kO>g:9&cjact8;T
%1H!P=Q#Td/S]iCkEE%j5TLiLJ,([J/+t>dQ[@=<*djD;U_&Z!3G2jtR]/O=\Np_\bP>(4]ndn5smlcdUZA,8"FXeqTQn4,nAC#&E
%'.N/i@Pe<M#j5*ZPXa0Hl@u(SdDSGbg^kue]0ofkhMFdiiMb9e'EQ_2Wo9o(?r&>>%C$++0fsFo&4L\/PDGnFi,YmG=]*<J6pG!S
%mHAQ$(\A3Ao'j7Sg:_c6ID^MM51-132AU"_KMV)/<C2b;Vm-ad=3Aa^5;c^QMEE1^Jk.C<V3?\)"<AUKN]&5qE-*<<T&NgWU>@HK
%M8@`&7^HgPEu$iS.4jEWiD`6`TeTBQi?DH?!urV8DKBPrhl+oo38KMdg*e-->,#??<?U0Z*tHOCRSs8pOTQU!C83+R&s;A.G9p$V
%M!?;o.L?RDGjm_)Ad92$W^As&Wm1hu.c71aA4sE^g-u7[:Pg9'rd_8"OYl3<okLfW?iU6rl2?IWaX6"nR'=cFXg!ToF/IB"_f]ND
%$LKDjSj?/QhrQsr<aT,jlL!5OQ:VN,6pT(/p_n(62MHn5c^^i/W)FSYL*D/E73ZTu2*04A(eV25)mW@Eq;nT&6*H!:1&c'pHUfpt
%P_-\8c(PG%+"Q6&2oKARIMk"\,a6B>.e[(j;7)l94k!Ib#6[S8GhJ=TNYHR<W>9uJ<mu^p'W`Wl2_^k87\Klfn\HjRZ:u4+Rj@gT
%[S;0[!6ZMlNM4J.Xa/Zt@e=*6BGQ_I<^f+`MG2grB9V.EGl=LbUVTl$$s&YGQE&R($$"iP4fc0d8YCZl,/a8@R>Q5d^!R+^#.dIm
%EOo4"+K=5_Zr8b"o>c;n51,lq5AtkYRa\8MC`ja6F/i%Y%^fbeWfl?B>19N4bs#[;q4%f(K3G#1F"6T->ijal@)F,Y)a0r3N$DiG
%EM,&e$#X=*1VgfTXCdpN'I?245g*jkK@4EKG6%6F*iF@O[GFomC,ngi1b<OZ+.:G1V;Q<jgHRIG_Ch`8M'E0QJqK,`Wnf:t(D4Jb
%"3c9sVeMDr#uH2FVN$T@3%RSLH<BWLpU9Lf.?)d;56@V&o(fh9^S!'2(lM#Jh]tfBjH`?]L(ZgF$40U&br`0$F^5dW/;UCD$*'V7
%IM("akJO"h,BN])dol`J$g&+S&baIkekj9cg+19K<592VTM;.D^r@_01Eb4s=bDmq&/M]n[.lnVX9``N'FtFn=N$oK3U@M`9$U<>
%gu=.P-3b&,P8h0h3u=nrg?05ENZ1ChUtm"d<]02_eY:N/T?,oT%`25jl5+XHo3(c9PZY6MAsV3\UtMW!%E&ud5n[-JVU@.=&nMG$
%d1J5t1Y(RQ0,Q-$NqX#c?C2Fq@)KTc#=AM,?mE'sVJr;J+gpGEMsBG$n,D#Wd4eF?a<l0m6aGgLbLjWtMlH;e`ij\Z.ZTF@F>ktI
%AP0cc:"[X>hg"7Q2YZ`OGNY48O6H:]G>='n"gquEc=q:]Y>!EO\Os8\]"h'C;WI&B@a8]U%eReb.E76q1/4I^Z*1I`I9Y`;E[$XT
%$mHV@*N_%L'Xin^GH4']e$L$DBT9U2X'IQb68n:[3&I7@:/eUB/;&+0VokW>?R<1CeAE5r/s9@.X;m"K%%]YZNF9U(<^O9W\dh;p
%0\Tqrm8gICqh18M?u'_Hqg=E</c$eS))>m.K-ed"G_I=39PkVhS'WPt<5TKk_2cR\]HMT;Nk<@GgJC+hoAR4Ws4E]/fGKR4&PHNT
%?KhX$qa$U_\mA4Jpl8YJHD)^m=*qR-$U%[nJNU)]>VKHSZg3=p\&6.:<Y\<]QDJHI\ZCl<e[=ba<d4`\&A[s.CnjBj$3br3UEAB9
%@hjik7WgF,E+7hsO8@[Mb;W_1UYE'L7#E-`;j!gohe+5cM/a*UT]KDbp]?G%&I$XnF'RDO>FmuR\$O+/QE&ZocHasV^0Jq.`[5QM
%ZDnAQj/*egW0WZ"V.kS&fW=dT?::;#e34SE]B_fF;G-@54\kLIZj[&c(VNh\2d.lnK<b5'P?Ld]j[pMKT/T>sTEOI\<4hohf'$(i
%`^Q[/5G6f6HFKJ:kVAs91ZF,/<V'9]VN$B);q(/Og&(#FFYbcm[Ke"3p,"00d6nBe,+/&OXLh$_qk8&uZEYj"RkY$?_.RKN%8]-]
%Ba9-nDq:W@p@lJq8!Nr_PneeUZ=]$#AGt`s8e9c(/\P<Yg.Fmu7GU@>Lt8]n\hMN&a3pqu%4R-kd#&$Y&r:jFq]C^2Se\M*fLWgH
%[<sHLQ3_2c<hY9oCLIU'Jq!,udYDL:K>*BrE*["@$A\m90US.oKN`L[Vue-@1<N;&(*O!dC,Fe:]WCF:AA5_a5*jIR=-C23Lp/Y6
%KFQ([lGd?dDatA!./.V%0r7CV(:orTJR>h8k(=N7RmJ%?!sTsHmj)XFl1troD<LY>2K^]25n:M;4UT?_c=#=P[B'2gA/66!</HSa
%E%h(r6W@[(L+=Z5nWk+W&3Q%O"Z9S=E]Fi0&Dj@4962r2mDs[<)-sjcnpnOXmF/#&,0neTbI5i'U55(Q99bM>f=f^&!I5XP;Ne]F
%OH%*cGuI)?CCu.Jm)m1l%J9_bkk%SL/Ie(D/#n>5"ai;s,a"B4#b-RB:=X3"M:,5pCr0+fLY%#,N)HBLZ>XT]>ZBD<>5,%Jotf"&
%OuZhF7>*]M1sF46&S"&0>>@XK*'$6@Ucj87doNfo]d,05"-BhjeugNT+_C<4MOR.Mf/cM'X*_1J#I>>`A]-hB-FKY_6n?B=.&`HQ
%ol^MEMYGD0U)q>*9I8b;d`DV()cl11Y=(+DQ&jaJ4rg"e18b^R0K[@;4^#/;4T7*_oq3<nZgtb(BEd^JZY`tOH<"coQt+KXj^o;5
%p;.t!&kg'D7E`Uu=8-_PRisRip^#?:PDX*.Y9^/#>8s<b9Ui@M(%2mni6miEj:-psZlhVi$'KUj6;r$g-E7&?<PLJ9hl(a/o1:8d
%Z$`)q%a*+c]PDc:ClHD\Cuf%SW[<Vis+,MeZ`:dn%A(K_9H/Q,Mc!l]W-22!"%>BrZ"6N#H`b"8_n8l3@>*7VSOJYgA(99gjOg5@
%RO7:(X+ib%+@hnPP]+t@JXs]e7.>bjYpCai42$GH4W:3T)q3@Fr,uoUaJ=8Y-!3ZKkKpi=C8!8-E+<03]@-lj0X]oh(!R8jZ'qUX
%=.'RZg,*LJ>qe8^bCpql7"\2HFK\-FY^:]$Odra`BUd8b7YV_a8rD9p0r*QG'Cg!ARon%DQW0N.?W^pc*SC=(kcqhXNJM.1G&J5c
%?f-jf-eYR=RBCAD=OG41R`R*b_`fFMI3_[tM';eYpR6g<c%R;[d8>j_,c>EWFTdT?S_])/dn\Z2*(JuhBYgFggrm+ADiqG]E>Y`.
%k'C%>DC17lXb.WTnS?h4"9H1n9[W$41_@j11VHD8%*W%I^&,Lr!p$teq':$M=D]k%6o2Vl<qRU`h7<TcojR*jJ>-:Ih-3V'OD<f0
%,&Z"+>)83UZrL;T(K"]fNN7CdN+c_a;p^(\H]`F(EDRA/P";#E<<M)AO2SElEL4mZcCj!L-:L%]VHGM8<g'?(.D,2!3&86u8j@)j
%H5S`,K]s?BOa?VVc.^,tK3j1P>9MA)$\!i'VLLC%'*WJNjtT%"Gd:Hj.+(rMe81HH(q'KEfP!`n03;"=qUc;6l80`RYe)>u#:6pL
%=XAusX:JC-a$/.51'?W>\(7N)]*Vhm9og'k;'trr'ila)n+AHsh:R+H@m$uD\8e;T6mOLj+i;Yc1A)DS#6YVd,-h@l3J/M;gcuLr
%iXT@_M+6Y^^h#eUm6^J>&a\OCVOHeZ>.$qPf?+p9>,kaJNWB&d3me5,jY"9.P_P$@-[u_G/OQ7h-2COOX@\rO72]U^LWi)?QQgkr
%8u-,5pq>k.Jb^Sf*eUQQ7]TPLoOkYe@%9E3d41%'V3Pok1pB?LCgrNT:+$DE_e.>U(.i&m-\t59=N@4fC;]L7<c=.eI7+H:%ZE=2
%OqoCEq2,;M;T/&28;@hQ*On&]<?k_Glj1=52$<p:/V7?Wg+\s$RY5_t`mqccUS7K';p*Z0,g")oUo;S3OBR!<N"kR.-0j',\)D_d
%^%=$'kV*E+%[=?eAMb5n6W8f08?=HgK_\"XB(qlS""fWG5E[81MS^Pkmo@f09"cMhN&='9bqnRCHb5-IkrO:>p,sNAN)g)c-Z;GA
%$#R;>g[nle50KI>"0Y&W2"XH"S2Nb,5ajtT6BP`&&KM2/%-_(QF=!GS6Y(+>hrH(h(>U+`;C^s9$dj!HahG\oW8#!uf<WZ`APUDS
%U-XO.h@[FhOaEfNRYWY@gmWje0TBFFPrB@OQ3`)`.ki;:&Lng"N:eg5<?;)L7con.kl@)>rC.@f;o9lh)=)$c%=_t!VaT!%XHh8J
%_%qF?Z:]Wo%AVR0#uG`"e.7'RGVam"L01M6>ARrf@qNQ/^Wh\4f"m$9[0[3L,4/X>)D&d4pK!p#Uf'GTcE+D$&Xu8'$q.Y4-c`VC
%YXE*8pO"qYT4Chs&<qniFjk#E+ftlNnF/jAN'u>e"[0PA0B9C$,]Z?NPk8""@/p:c`C)Qm(Cfg/'VsN(X#ZjSp*HVo#q;Xr![X9:
%;rGj9R4_>kd:@ecmNqK;+n:qYPUeSkWeGOT\Wt*o1XKC)#do+S</Jc+HYoPGL?>hd.1R?j9Ea+E!mS[Il_Hqk%MX7(M,Q*ZROVgV
%i*KSbM'SBYEuM/5$rS-Y.Oq)9F=jNCB;HI1)7>!jf=\c@MZu+8T9oZn9;:AS+Rsb/b-l(t;lLk77>uZ9l8Gdued#h$J[(%"dW3"3
%pO"qUT4LV$1Zh2?@(;D=e#q/Wlm"VS+l\p0U?Od8\i6+WKAjkZBc5a&'o`E#q9s#B:m;;U-'%?dNp&u8Q_2@.$$G96Ps^Cm/#Y'L
%Wma@D5gc]5jpBKg)k:Q83`.MD`Zi2O$\8a!qo82<8Af3:g77Sck-N8\,.-Y+e^V,!:"%Z35)`m[TM5M#-P4jX[FLi'_e;K4,"RJ,
%U_QTc[=nrLLYmnWR/-%(Zb2r71q$E7%PO!*WCa%GBg]6iXWc)"*B<NT7\:U!e!1&s.&(>[3#;Z>gH8K=,Y%+#4*?qY#NiA:.-Mn(
%\B(K?VL:1g%kZc$&s`K`]m&(n,Y>9EIjO:_.\Z;9*CD/8%5]*@:`3fipTL3EW7c=&W7e0<W1@6'O@3>F1H.*i;,ql]OV=Ka.u3kB
%O)$Am;n>D@9pOV7ObG#YPbOpDP**-@E3"n?csLnBerH*m;gs41g)n\X(251SR'B/&PgnNnF=2u92@9r5U30\OcpsIWVBg<\,'o[5
%lZVaka.`=418j%JOK19:Kd#W$OUZ?b8OOY1M2"H8-`h[V4.l^7q_1`Z5u%#YFm@IN>qlV@HDftL6bD.ncDaV\"dN2b7)7ch*>_:k
%#O7!e7OA[UABPD:]9>[#R<LUQa=\18GHC@1LR'nf>4bMnF4i$0rVec5s$c&aec0dFXRA]br_tDs]s<WfMCLTB_AZ%39p]j<f`0,?
%]9!M6e'Ud^^e_`](N)`67dfkkB@sk3!3O2_%%F`5a;.S6D($%YEl#n8Z?b!<*!sCo(*"^2>G,\'2Xd%19f-ls[sPkSNm*!<.8@g1
%'&;$V<lINa9=B9Qd/0:X_Zn?e&LMF-=$lR\'p=MmAV;rm/?4C^+A*nL"M?ZIB7NE&@58:B&fk4O]0"nKoBrmV[N;Z5cJCf#-&Ylu
%Xa>hE3GHtT>OPN>!P'6TRBoRmM\q=@=Kn.H^#'oek5XRpIZXj:icpYtm'mKh-1+%$dPG=%!hrkYs&-VrhO/<-"n`/'*`p(f>qaT'
%F*NT=k!i;9M>:K4fkKb=KLM,=B8;0VB>=R0<heh!47=r>l/#iGh8@Oe#_Wu%p+Z%.O@=UdB`=](*VZ]`4o-"bIu5<G07_AeI@c(n
%ijDce&5p/94Lh2%/RO)gp>ttB?g\/+`Ob;##Ol]:ZSdPN.h@Js]EsFZ.OsIUhq(]Y7=4Al3X\ROmFKnA2ZSP'W==$_L"I,.HXW[_
%KN,X.,M`0"bc_n!8.h=+*ma$QSi"sU"0I89Bri8g6u;"D'E3H!8(J0>_Kc>2Uk?57jRZl2E,P^Sp><W`JMuM0(qLF;qd63e(+3%&
%l::T2%S%3.6mbu!QWf0=X(aT*()049HY'7VXqtfN.Y+J%4XLF;6!]1K)p/RqT>[Ve[$>t>YQ6+m,@L&LL)Q)YV"&"88Bb+8%CGS(
%[MGXpd0S1HR%/ql:?m:jf@+\Sd8A.P$gQ0#B-[L\(V6Xp9F[:t%`rK04acU?N\<D0)S@o"3WB:Q_dR/A7X%r16N"Xqei'Mi[R:R/
%I7Lo8Wd?hcP+$IEoZ0S9UkmbWl-%@499ddS[O6%n['$Up)97(icBtON"`6OA0AK605kOX4FRLR+XM$1+B\Y6ik9)i?a.I.5'_HU$
%UsQMf8CA[EkuV3XPlEdIdB("NPuYU/_Dnbc]L4`F&LhC-8D1c<?G^HgU`F@\Ond]TC<3#5e-CpOLak.c^:+]D$u&!DZbJ3hkQn'?
%d?sA[%30arLpTPS?\m(0@p2iUPqo&:#J4e2Nn_a2DePBaW^R"IV[tG!P#0)1)=O-!<e6L[-m<>Upq/uu%0X71CKNujN4>4a;+U<0
%@jcU6U-&DCIc\f->)6cfg(@6U?Xt+*Gb=b9:)iPYXjO1<cNKQ?C!tr>N?.Ed3Qf/6,sQHa4eO"Z]S6Jae44'$ppL?O\B]ZP1a6;\
%Ucl>2pYs5OpnoKULHW[+^$N9>L2;1Y*)<RSL`1i%N@I*(1]YSC6bjVfTN'q^''rKfg1qWrPr6.Cm%"$bd&r\2'klt88ZUTlZB8GN
%"2Fsi2)FJUV5[\QVMK4R,L?3Pi%Vc\+%^4%h>sHL[+hsd<4*"r8G@:il7Va1__2(2Y]Tcc'EAI@U,qt-0+lXZ&.PZXBH's$#jE\g
%'@MPO"Wb]tQ9nK&WX+D1nOIil)Tl$&VGM=bhm)i0QlRX1'WElVY;u+a/d1]jL1-bj#e[LrHQ_^kWH7boo`H9%W)ifPGV9[5gZhJ<
%kjQ)a%$fJX]3qiSMH6`3K_"tcMWD2hdJ?b:Dn<>I@PW%c.75mn4Qq+`Q\N7,-4R2B7tS%L5=it2&Y>(dNo#2f9$!r9A.6LGZ?aB^
%e81Rt4bhNW$&5('g(g^!>`0]Y8ibWq*Utlfr\jCO'&k#-_>nE9hl#s&"&N>#)(P*AH.a%<1Qic-Ui-S)9hFZqMnb59%0n%?bsk%X
%'nXjc=l9U%beA5gB:u8_B-t8PB=t"b#bhdt"nc=K_MD]!N>fnT$3l7R\@:c`QKiWjdQuSYYMPYNh0:d!?)G$?ik6HYmfj;oj9$B-
%Yiu,GKHcfj6o35@6S&Aj'GM.Fh2'*JlRPT\Xe2NLjtjdZe#Gh&(kK^7s+fX@VWp0/i-P/pSZbD3F%1UqMK[Zc&E5Ab*dF]*orYHT
%1k*?:f.(PM-*;M,Tp6X^ees&%qk:cK6dqd3cc&snpBRmIk@+I>U"E%*qk"bdZ;HkhdH`#>H@./t&pmbIe?GY9hMFE&54o_H"Taa6
%9opVYcEO\jEG.Te=p%=eoW9uBpAd[3X](&.o8[$(CR)X"WJMI+DQkhhrpm\*QNum]g]^RKb91g-;g_$Y'1AhgGaTkY$pr</6M0!m
%r/?m=IT+6%p29MSk0%/<`jO3N(E?_+p@_s'o`[`0GFq&6Y#n'[KA+XOnM]#3Z\@'1+DE-oZV6N;@s]5!rIuJ,FZQ?48Qi\6)P6",
%(p#\fEmI)t4j\QbU:FL0_!1)p?!jk-2`I@5j`o^"BH<NBg9#(K*,V!dQ-)W%bg8)o-l5+XOqbJ/K8nV/ddeOJPs15M+%TFnEN[B*
%:]Uf)%rR@_bhd'o\^Iig9_%ffnJQ!H?cVP?X-%RA4GO2K^*;J9Q(N])1<h=sC@\.STHWu:h>_`,q>[0ZcjO\0)[^isZIk:(X#VL2
%k70m3>MgCR%o?0*YH+_E#)0J[$sn#Za>=Tc6[I!I0D+YDVKASU'lP\lq9,>6_PSMO"Vh.f01$i[[6?0gSX&e/2TN7Vli\RY:O<-F
%*O?kl%#J]i:o+:ai,p6s4e:egedGl6Z-2dV=75QG]Z]B0p'[FeADQE6no`En#PpsQ-;hl>:?TWbQX,CJ2hA`OQFDMWl9U6kb.a.R
%!kt#_rn9Ga/]0NK<UR3g0X3h`Vd"Jo#.jk\iUnKf18HG`Fd'7"7a,c9&B58MH2D(Qi$)m+@<rC=gK"ZR#4!;r(#As&VXh_kGXC%"
%)b:#r1eD7DK,[1u?aI".d];]=3]U,=VgXA-04K,R6f%6?4,&HSQMaiUb;rOsZPtlkVAR@Ra>b@.IG5bZC&20(khc%,dWLEF#<2]3
%bb;!-(*hAhc=Bu]?"&JjbJ!eg.<%m&HF_[/XLcT#C1iGoSP3%EV4$[1H^P?SPPaB[b,l$W"YBX>@=,Sg!!0/F5]Vl!,"<=k)6&RV
%/;[!d2=/:JkROCZq9c%o>]a*@96Z[j9gJ,rpr#I'EDB.3GBF`gCqBdH7o#1"b[Ls:ZH``+'A/dG;Au@C:koTZLLl#G1paV%U,'VN
%L$QIRV77"K/_\pk[;n22rcS$b9ju\AQ:i8E!;(MK#Y<$/4'#Z=,32sR'M'b'eW;\nR.3&ZYk=S6RbD^'R^3t9X`dLYgpE'Gd'#I*
%k[ReG4APUH"XOfmUJIi:!]Es@+mh*FPHm?Ua0BP[1lFeNVA^5K8m(j#:fW%Tm&hW-hNtc)2^5;fSaROJ!Q09cYX]os&JM^s/LE%t
%KsC(X=bHDpJK^jDDW#pL,.e`<WXL-EeGOC$."3b'B_k%P]7f8,:APhCE@XMAP\@l`VgLg?>I[=R/XZ!On#d/Vp>-dh:efb@U,hhY
%FZ/,]1Lh0=HTh\F0d<*8LfSZhlk(FM$O]R*U-AXjE:u[4@.>q[59=Im7KR(jgZsc^F::oS[iA^#%9,*'8RinjPat-?1]8>)1Km3F
%efQGsJoGhO0jnhH"aGmVP*Xt+lt2&Gm1FT6D-C*n*S1UJ8!^)I#?dA*!X;sU(6aS2i2aYH_-+($QZW?8T)g5b2maetj9\AjjU\E5
%D_VU_eHu7(080e'2Ake%[S7T,U`GK&i6+dU6W.)ofbM:\5!da1GD.#tD6dOW9E0+ib/q99^p2W/d5ma`mh)s"U`sPG`%=E$fP[>M
%LDBA6[6G][gm\?OQY3Cs,h=22?e1QFccZEkZumC1a9!SRiiX@B@i[`S\g'(&\T=Za"`&J^_?(]17&(M&[*)5-hVGSB?pAQ:_)IX?
%"4m')fI1dr1C:]/dt<M5<TLfL?*FuGP.ti`0L8T(Y5Z"Y";@0%VNg.*FG9sn_Y03A-&W0Bg?ZbhFU?!B3(9f-J&[@79[3o-T_bCK
%B9$1*P[niBSqCk0mJSjd;o#o"$>=EZm5`tcOX#_$S1ksQPpC?nJi33]ZTfMogPPtt.Ip9O?^`q[Ta2<ID:sgcF=tu*CsX@k*>0!Y
%9SsBHaga]+)($8r/B7`-s)77)<pf!c=D9T$]Bh7KO/g*\bfK''jFTSC?qe[+`[isf2?LdZN4P%_=B;\Rfbc/ge[q`sPmo?8,H'"I
%jn*OD\!P)%?R/#LU:.'bJqXDg1a/Cs_5s_Zn!71II0f?dUH'CE(mKV0Rqh"X&68RE)jb4K83<+bNFD43%!c`IHET=U,@*[UNe`^Z
%'"X23bh"H=T6ls]+-1Ia:*cQ";J^C&9KA6rNoZSDT50.;WAHHaY\d]N#-UYi!)OkAmE]>u7kb"SnGhGTp:MB]T3.KQ(rHBAH\WEJ
%m>TDKV;%?DlQn;iaV2lKJfl`(TH>Pe=1]g`DDtk@WjcbWS=JhGQ-pla;InS0")E4LjobJAVj3k@9e<@i\o+?*D:#=-::PN!kq?fP
%ej>UV6nZKG]3Ur-X?GrqB5p?pb`#ci+j]CX@KucL^N\6E;pjoN\@XX''I+lKk#D[KO<3>%J!f"5O&I+2:t2"@8rQ(8.;@m%c^5uH
%jP^opPhIjF..q823b?$oVhL*ZXP+<oS^*rGa%%Hpnat%S\IOYli@dSfaA?,l,[HfSc<;4paT,?!f5ba=_Ak'7;KB6D$E+Y,V8RL$
%ks`bW^d>EJ\TO/ND..6$!2kYEN&2e_-Q&*=35b$k0.71=VI[ZTed/q@M9cU^*_i"R(3[\.1'UWgN$jD^W%Vjf1gDk,Pt<Ri!i^RM
%RMirJ?<[0u0XX+d-Tj^&`19=2*t.b>2N_U4ho6,NK=%Kl42ZA,84p?pDqj<6^353,3i%(.9+IGYF"4AA!o"S8`rtFt@Oq?FSZ`cn
%[^.9l@F%@%ge.&LEgbSMEUTQM"VGJ0Gq\".DJ<URo!DkV-ngG2<5O).s/oSBb#t658`2LWW!M%ulj5e;$2!S+p7tEP)VAumYMqnf
%(iM.+CmLfK&J/G7^]OI#^/aXm.5*@L0mt2,>+Lc/aE6pu?p@Pd?!A@iDo=SRjqe2=`q"6Un_&]>rUDl/QNtoaZ!Wj\Zj2/DpM@n)
%F)pnnf;QZm>5Rkj0:T+t0gA*L%r2X$'W"+up5jg#`6T1+dt?U=C?/B1*k")0?ipKcg^q_&M8F6h)pRM6^ST"/_]a]>"Qm\SFHV$<
%M8M)[l(Y&n[X?(\VBKVfPG+eI[&p?-Z*THehgjpt.Me,cbYou#kF`>t2U`^r8-58'm[\XuA!\-.0^D7Z?+k:-Eu>C`"ND>:U`GSA
%"_M%\f]K$r@ghm?nq_Mep+Wm=*[a'4LlULMgU5,I*^k3((8E=l.B1^un-s,OBXX)>Kt`u$#Gtr3@^EV&OYoui+-'[I_HB7GSUJU[
%imt,[+-%BFGaa`$QGASi67@m8Y2j.32oTB+'Sb'BH'Fk5Y%"k1IZX@;P1;B/=\'5fHa-]\gfUT0-BemabLD4tbA@ig/.XD"""*Jf
%>ODNF'dsc.;:>$)9EaT'g2$R[p;f<:b;pQTnS?5@e.`sDdao[(<U;[mTH]m_RI$_ELE0@u9RA0._1%_mdlupfa5`,*;d^e)a.iVB
%a/4rdQ5Y(oL7Vj[A`k,RRCH!u>:faXO\i7(RkkCZ.8*V=P&r&H+)"aY,DRHDO^?3KSYUA2jp@r<pDC^+PH:(,:;V8D3*FNOl@051
%fsk#n+W;LUKV2BBbFb*,+$<E/+>gs@.b):?!@dSbF=*WffL$J?'[B$^\u9HoM^!P#^"4C$rFDutd8LG;FbI(LIJL`c\9WU\.u/<?
%IQ"=5McWd\\>V3_S@iI$2gh"6+-4ki^*D@OYj3!\*g<%56V7L09A74rLLZI@/.mf<>L8X5[$i4@kiHWZ_#OlI<ksNcGD_J]T@7I<
%h(.,.V5o7`2D%jk9B\FM%=KrV,+&$&(4J*GeO78`V[)_BC!u7Z%kV2r%:k<RGO(u_#(D"@3IB8>@XZoV%Xr5IdO>g')V[:e6HRO*
%kXScqCJ"UE,XZrh-fK<i^m;m?JI9GgIehj2bkA+?"sAj2\A,n[0V.DC1>PqU=oe8GJ"4g!IO4[RcdZIp<Y_@fBt;E9#H!ka)t<9M
%7>n#`WnCt0K:g$&9orlM<g`bO1Hg*ZU+_M42Z^05Yp,*M;jWSC=qEZI<O`o_QBdNKA&=Gb1<Kj-4>mNM"_+6**)DY5)VI4F\%9O,
%7E0#i:<_0'f#00<23$>,d7XSE4[c]#].U4g&Jf>1(+?*HZ5j2CQRQH7csHGnkGck9;Vf7[>`f]h>:7[3[-:2SMi7jXR%Buo.>PEt
%R,bYIqs.>3s.N.g7#Y(Z'P%0mG1oseNpHmDFRJM\)F[NNG$7nn*V]Q[f"%j4'\YG9<.IMr#OlFM3/W(7n>`%keC]_LqQb-qQ_hqD
%r#`6!:r:)o(a-p=ej%@Y\r/)nR:$]Xn+%u1.CRG,jIjS]W22TZI8Z>G5h+BkkHH$%K[;imZ]:?W?P8pIWYR^d1oDQ\iPi#P+'Z@M
%^.B=YJ\E\ZI)FqS5G[CDj0?M*4G;A'qmFp9V?9jc=7oW'rbO)[f!joAlW;Ndm/P7Ys8-)frnG,J!`j/I2/rYI*jNDIL$i9ks!5I6
%?Y<@_6qHP;&)>r9)nL6<SZmPR+M=mc^$e!f^Ynss+FF:l)B`bphuc[B),L#-4=!&:q:6Ghp/`*+cg*O.UL3-k1ie(m"Ao()C&%bN
%Hj=NriTZ[8p=sjKBG#LY&N0E8/U[_pq?Ob8<kEhN!SR;PIsm'nI_jM,DarPDP%W8riOOugh;PnOE4k[Q*mhWS"]m.i/FB+V5OcR/
%.-(7V2"C``q#T7JJ:W.O9':,R@-VCSoc$$*I=&tQ5@_AK5iE7#nRmgV#8mCKZ<dUe*e:R;)9E*pr!-4#!E9#(Bt#bjH`^u_og:)/
%W;ck\J&;.K'F6gc&NnYa4Ok`?'JKBYb2KZHih:&FWOd[m(riej%-+$`j(hXb5@Zo&fU9>P"SWOkrCaNN-S4Wc]_3*%Aj>kh&,3!.
%;")31p4mLQK<G*%iI)6Dh]8tG^j^4C^'FSn#>jp%d!iOh(C_klduPZ7f+!/L6sZU:jpiZ3F$kUTgS)s;@X`kjI_eIqidV&,qWkkG
%/Q]U/-ReR"\G69sHpE9Ii^LT^99"Au!29C+koHn+:s9s/3e%<]I=oU5@ig0-DhqW4b858<O*@SfT\3XHhmZsCI@jBQ@o)8.Kc^4]
%(r%5V=/93hi8,p(Er5P2CnAC05^u+shZ;9nQcSItM"VdLHi+6?r;[7UJ<)qTbT?iLO0J<1["/hHhW!As+T*%cr%DLOO7<$"+T;-'
%!R:XMi7L-^IgY38:a,=)8+9PuE'Wm2&bK:=_FO.5F,e)(=pRCs^/ReuW3!5<E%3@Z.PO'O1nG(9>kqgKB-\[q*pQ*p8>6pB3!d8L
%,6#"2jA-(H8lJj-;F4pkokU8EpBSlJ<PSQP]!hTJY/CDp`K6B]r5o,_jU!a5!3Z*M@(]u,9$I;?W8dpTnI(/o"-hjIE:Sr]q*_H7
%^g*Jh0ETM;5dbM7ejL-?^m\m=%\Yor)Q?(dO$cht+S3ppT*L%r"-2S^@__q+?2>*/U`[.ETAf1MjeNqR=&19J&\VYW>hDE`loG+:
%RAbC,kNlQPI@)%tDs<sN*7@ckkohSMOLntbX1fsl*jT2b3O?ceg1M&d4]AgS;gLMpq(q^<O<=B]\%bq.*[9-pOa_tj*s1?7MNC&U
%daO0EcO%+r"`5L"l_M&.^45Ba52sHj;.PENk6X)>nsqFRC";Yt2%$sif0kfcKXoi7j+X#V07r?4d<-d$^4tSgK(YrgOE?EG5D9'%
%,\UPJ"<Z<MmuR)9GE903G^/R"%f.tjW9[*hoHC72*.E<le%S7l*Bd*(h!U0cTfRHQVW\T>;t0<57/7hGHk(IOKLR%nW1U=q"_>Bd
%A"Nk4D\:jsm2'd#Vh";)AGIDJbWp:Yjb`O)R*=Hf4:h4TT)u<G!,]$iaFCh<EO+=.)n0mo(*<OK:DhG3+XNc-P6ZKX1Q^]!nWL2*
%Jf??)&O5lIZ["grquX<*<"f,<)nq(U+C!ZY\ajC?:lW2FG>urlp?2gYoS-tHh]=LJ+-ZSKNM:WAk6bnd(EBC3J5tIe*A.,@4FDZ-
%^&],'0+j8+d)ZFljV-)5.jS%9bn&Ul1ViS_#thk/6SbM.Z#@G+;c(#"Yf-mt8"==#gGm_'5t<)*%8&MKob/DD%&3^9g--X"5N_Yu
%lOpH8:2[:Pe?u=Fje\"qW6_lO+!n&$B#gDsgsqICaaW0^pOZ%6rHh]0YNe(8Kq>;'IAd?u//nJg/a[FXEYY62(TMp`Zp*!Q4r;:(
%<mlG_gHLna51K$b=8@<9fACCMJ(,RMG$u4RN,Rt<5,oK8!94O%]`[<P!;,_.qt:?:hf7#!^#KK<rrLsU<!Mhg0//)KqqJ6QJE7"G
%6\jFq>c.!fbj\m1_"%b<kjjOb+po)iA;Ta)(,I74or6)YW82\Hnp%);H)_bXR,$T2.=D9DJ(i%]$Ki%q^:lbHfRJHrIfm]+L"+\$
%U#GUh@-e-J2R2)q^-]H(1#NRMnHVV\*IGM0RD2,=+)pS-GkV_Nqu_-AQQZ0$0RdVQj9oGs$/5DU"2IN[VAI7j5>:E^<[7[,W4,5=
%rXAGY#?:3od.i?C[*N_X,`<ca%m\8QWcc-0b73f`L\'&K'fGFJ!?Lqc(uYSRn,\gL"CEG"n_5)Hpka_&$CS9?p5Z6hB'9>Jq#T$Q
%dktmSTfNW#8s<;A^n:;S,=M0P,(K&qp5*Vb.HqWS[*[9+$*--aHF=UNml*N)#P+>YC_s]%TD]2lI6[u!)\1BMiFe6l;H2s4)YjiJ
%r!%!j&Y"&r5_%dh+7Rbj_!<@mp+qa+!UrfcGeA"=!?Y\+^:&P+bhOGi!7^fJ)#\;hIrbnmUKID+A90r7\j'rET.>a?8rau#PFj@m
%+%i*]$DQ:Y$`?2rX<5ThIoW]NV6F00#!^8FTBjE;$HbT6cC\k#+%k2C$JjGi/)hXDk<J:uhkp,ADG-W#4PW?cZgYqIDie?!&:*_%
%o$NQ[\])NT08t[H):,EB*d_jRl-utfe^EKaouCQhO@;'cpGO4BKYFGAaCe;3?h>srCN?.U+E*69T)5@s2-/Df*o!lGbj02u,Ba2-
%-f\4$%7t".SpTX^2!^1?VV@%,U(,4W^QQl;3*0%Bk6;eGSMVDaD7D;jA9LaYNe\)cO*s4'qhoi=#VpTLHr&peL]/LDNC^d*/9*J.
%\$dVZm8"f"Upuo:l*96V1/Dag*r<4UF`D-Q*[^XU.ar%BWLrn#QeG.kL%p/F]]r.VWtl347m!f-VHM4SR#$_-iKg\Hd*Cmdmo/ZR
%^!e(gTo7EA\#I]V<1g:nSm,HJoYPq<R.]6<l_+P"4*<PaH9-13\+G"1rUnM\ltpWiH]Iem6&@[2]N(QIDpRMo:Lu*;`/II)b<o:R
%8'Q`dZt%;:?>@=MQVml,jW+k#+OAR^%qR%<5-^18ifiOTQ%sCGLSC,B<QBJ$d<sNu4I"m1CaY[:X)-t$\>O^T!WB]notAuWYQ"Km
%@<@]S`G;%RYs0haahZF2+OFJYNpV_&!FqgepfgK\_a`a:ofDK.Y]TbS@S8G7B[Au"II*WlBbi.ge`?>]cKXo&nTt3(ml0CU5\Zpr
%kQ^E[Q&#YZhR4OQ`]N.u2=Hn?IJfe']QQAUQ*<%=Lm@?_=0T8!1sZ+Rbg9RLrJ*T7%h8Cj!Z7omm(>99^'8jDJ6F_M$Jm/jn*7s^
%B-$gJOHP2O76A/Fbu/,A%4I&OmOSYm?H[;rEg&2b/q@`mqHBU.GRdSKZn+8g9&p1([)4\EblI1&U81&93[cG]$&OgS!q1g+F9>@/
%>O<$91bO]LidNOg.GQZ<)3>P0;T,&PIdE+c8rA*WMo'rb2$LJ>Ta/=J6'#Q0(+XjaXcT!:]Ret'nb&WQ>3uUdOQGJh@VWb_/8(BG
%+T^Vp00pLrf5#AHTlGSL>`KeRnfC[/qbn:150lPBhgR1bW$BN)s0Yepg0l3a@OgEhLYj!h-80t1m]AkY3+!;o'mB[8ku3P5dAB)A
%FD-&&X*VZW:q#e,#ldJ^.k`B$(;(OmnfL%&pbK@Y^4oHsa@=%#e0[@Y1o-d>Z=%U)-n/@Zfq4G8qiA4D+sID`"`<.'#EOAZbO@SP
%c38:IqXhnAn;N0l7_fK]UIJRrr7ZfEQck#25Kk2^Ea=l6q84X\"8,_0^`SfDoU#s[(e)"s3?5,-dLe5o'=?l.YY&RGN4C7&1^nPt
%rmiJR=UmaFoR5=c7onZEFqacm/o#lTRq[[(nY2?V$dE?E[4(6"^)A_%rol%`$JCc(0GshiMl8fK2OMNPG7F>6&55<9C'aXao-X6Q
%"`F..]]+u%dAXd6r?g7Jj=n-&^Xo=)^pN]W[\>t0JDm5or%<eJj5i<E.A9Fk1I8Gq_sPZl+2Iq8md7.X4G%*H4&+mKp#I8;0b4)6
%TX]bJ<-/Z%S3CBm$Zsk7nY*4>CtrPCJq)7@`o(!PHf^f[#P;f7k&SJ&G3WkcW>B!V8hEO(2;<G?p^si79oJY^Ah/WAZL!Jd2JU4'
%%Y7WaAq.co<d%`t/XZ!YESXX.9_S$GE?NM:6+<MPl`TZ0eBUJueG'nq':f$eY$p#ZGcpD!]W&\S*tmA$F_!3F[+8Hm*ZfpEYIg`g
%/SY*:YqADZ_#t+""Kf^Mn.[1LkFufZZG=4qc#K#/<H=o4)EbVa*MaBC#tDYb[3Y)$Xt>3"eskS9_Uf8u,YQl.0a(VAorJ_sG.T88
%al`_9[(/7r/%<X!XH&OJI^',gLp1b8<XJrLc0*POabi#,0;G>lYmlhW6Qk2'[o4A&=tQM4]bf&VGV(-L3AuY9gKSri8$>pbC88pr
%BMMsaQM7h9cGu9Qa'HY#:&dBTp[[n!0tj?/$`R<F&/;n*8/<KNbW-"8N\c*;\%$auF%q-"h1Z'*,jp6rUJ3*$VmA=M)(&2.&W2-(
%q\RTaQ471X4O-"mrl]D3GA":Wc`LNL5:,WeFcXr9+t?CZ6%L[<'"!)3LNFhfrT!de08fQBoCas],cMd=K,B+<bT%C75:[AOS<0m4
%PZdMh<55`@9DIj4lTcg""N?:9%,Xsr2nfF#++R\1%MOk<%FZRtS<lK1`ooIm?35!oIQ\T]ODS@#;/T^7US$FLkMYXR(WamgpFeb[
%[!Ufk@6d)OrCahXf)%7,NHpojL/bpZXKVif,40CN<HsE"G=h<QJ3>cCrcT"P8s!QADGS0TdibuOoscD.'u/[r%fW\I^-6o=X9`GA
%?`PdW$rQ]>0]G1$`dCb\A%N8,Zf\*?,cLA_d(H9Cl`LsaG)GPR(:oQJ;C&3M7DE\mqP(,e#Zg2u"sjL=`Yg#^>Al:^U+c'e(p`H>
%+$"O>ce2:R)[+,5PfK9OHGf!2@)]i?YG3O_TB+I[9(+^'/oI.>iMs;]+lb(k:W:SN$_+pVO!9^)QUsrKmh4]f:4ZZXln!g+5to66
%eZd'conV?-IdKphlr!=5a1:rM3U)-Sq"_#SQ10i(dF%Ltm%Zs;l`@2_hEkE\"JsY`U,:OiWQTFidJXB`?mHYg@&o=ZZ.X8kEPRX2
%oa4jW<.3/M';5,57be0>f9%u%R!mY1%dUh^SZ68DMkE-n(#jmpcETW>6@[0(kX-`d92NMGlU0DGaR$gbm),O-&O,uOhNRfl![X,D
%Cps*b?_fI[JmlL+CYe.F]3`)F/m1HC02)7<d(eE?omd9TkEP,R:\jV2R7sS\07TLF4%I%E*QZBnq@-b;Xcp7m@gJUAQ0$hk<Z[F.
%jgrXeBW(:TL4FE+S#YM<3L15*W(JD7j1J0oJ_I.0Z!CQT65RVHjbo@74T\j3nM>R/ipb.ekot7e0cS(tS9CB]C_`tUZ7r)t.<AXS
%D')''^$?u&F>SdO2)cQ`q#tVLD_'q:.s+EI2(N,hbNWT0U(@G9BZ:%hiUnkGj/;c$J``ucf8KEdmtq\)MAJr%aH(ZS>%gjY0YGAF
%POYu<L<q,lf0Sk12.#&Jbtl<.7_Qn\ZZ%_;/qFI(+H9-pWEQ:<Tn5jNJS^Cur$=p%bI_*7jnJEBgNFnH`.I7jn+XG'OG9AB8/s5"
%k`D4XlX^;3Z]0&\!='g&^B*N<i0,&E%5NiV>k@Z5TZQWrjS@o3Gs*SZ#DEcp?_,ftj.`U-,R*4h!)*"3(*(d9d:^GU!I7NBng6<s
%[Ng]eWNdBhC[16=-+"lI.$!lIOjY'=05C'\93*c`l2Ip6YS&<Mp>/]r+/b0uhE1TG8[fkKf2BIrYH]U2a^4;0@4.LX<u*$BHr7[:
%9DmUaA*08Lj81&FQcX.s5Go:#_V<dulO[/4/cd$.h?"t4p4OHY<?dl7I=d`(ITgu6(_#!Yj&=mK$Q8U@1!;O@\cp:3c&"UD;"R3<
%gh!<cnaQEl`>mT1`jWEe'([27qre#i_2JQBJe`O'fG'5aC1;jDdIp",WtKJU'pXC='aIO\cHbIqH[iFGqZ(E`:!#n&q>*9L8#+)L
%JeKi^IT3X#!pj$*:[gH._Hq/H$"Pr,BY"*kR2/Ye1l0Xci*VpRWc:I1+H'UlED_'!eD%<Sf8u1*:!lbW)Xk/&H!!Au\ng%iQ(nb=
%N?1duT&l"t[M*1[.]rKsC&R6-DP+s-fZg0lI)MW\%J[NpmlHD#(nB+lke#\S*K`RAFJ5j&g'CY6A_VZEG%q%T!:DR%JdL9bq$%<D
%ei3f<Et-cOM?VOSbqj7jnZs3tkNmG"">1#,Q=-4C8iia:r9fKST;@b^MNIJM=,J3V:>[t[!($@g.rTqV"In.-Q8trqRUdYK+jE##
%lXKHZ:MhQ<26+cBaf7WS/H=Pcn&VWUl_\QD6mjVg#nm"h^J:)m&:dqG[@E5KQJ%$n\1>Z\X5+@9'R2Y#Oi%r"(E:C)SW_VQQmf]k
%SV[2fXE+"?P\e8q.g-cqm,&f7U_ef'0$S?37/L85^oXt[^LN[l5,#t9/*8Ou!CBV#"6$jY2WGu.5N"UVJ)j]j6"EO+[p+BKol/f+
%*]KQ;l??;L,\bAM_m?3nMODjMofcB\#`Fj*m5blc_mZ\da(:&$A';h`EM=YdgDF(jO2L/XB@<3=D[^[SZf<C367\0_F&Tl@Tsq$*
%SA]S,+]'9FW5#23A*2]8MQB^ol?C!Lcp=*@Y;73!QT'?,.UB=6XMjB1;m7aiO$;hAab>#r1`^NpRoX'#SC]=GTN]%!XrR8WH=as<
%d^>j=?frnNE(S;\51*McH$RE<K/0Ci(`(%E<h+t]&I_'VH/F)8:[JS6q(K9$=`.m\7E^h;F:99UAP&c#2R^(=JNq-3W7H*sr:&j@
%-1a%_BG_rMl*^mAqL98`7"C"tO/sTKra,-("o5+Qd!gB%h+YT\X1Ag&`UT:l0Fg,kom@Zr-Q7/uQZ#e7G*c!!pqIDDU3Y1ff6D:/
%U/tRs"fYW2E[V2giMiHs*&;scJY#Xjiu9eG-Zr@P5jX6YbOL[em5UZG"inF%>'2KdXfa3r"l=O[<Llf(jgo4eQ`H[lPXr=<:,S+6
%0Sjn#Q![%94`&gEjo)'hi^iJ-US]5[4Uu]VB"lI>p2jWohW&h)!u7mRB8UZ>'aaf>\!ai*CV<ZYq:@u<=3,K885R1..D?uHs/X3T
%lcn^PgfVrlCDVT-0dSfk4,aW*Uj1F_)THJBW)f7*^WGabladulJr`P?%$/duDP]Mj*cB0e48jWNE+(<[:%1Nq1(F'FU8>qJ%kjY<
%P0rS!VPjtZFpE0r=n/hEGk]n7@`Ba;A@<PD'E'ZuDmL1BfT]ZT%Uf:cFR42.#`pBRi_)L:@O()7Omi#:S3lQ#-PQe:YmjIoER.tp
%m6']<S4.2I*,>CMZIf@[3&hPXd*bHd44*_-b@ilWR+q:,bD5>B<BQhpQiY>Yc;'G\?/#<I<2AC&IPiNEI](D`l`O^'V8kc08$YT8
%(+u_KW07lEpAJD=k3K.Y%Bpjj@^`tK9PAG($A+b>3.7.1+m"0,gdhBXBMu*N=,6ME5:tWQp"1Ig5@+VbihI6?EW&e2>Iq#cB2,T#
%EZ&4q>rO2K3&NsNC0q?q0ZW&5Cs+fmRM.+T/;JG88-V:'s0bc]nj_9>FGj4:l]<nMd/4M)NFp"KDWQNVX0(J!&N]8-#*uXK;j=V.
%!$gJWekIC1RLK]2`Kdh.G,<9*=8--,S`iFeb@u$Oc!eaU6[oa,*'1i2"9cpEo#fhLgD*)P9HkJc0Wgn;)A+=>cM?kCbLCg1*@ia'
%#a+7.hO^/J!Uoe_)!7O_0gOB,cR9R2$ZE!*XF[VSjR.Jl0B9>3q2;j\r%6@LB@i-^S%L1X&%'5(.g!&pW5H=X!\@12N3ifZW_ODQ
%6*)jT=sju=9qP2@N/2i/&K1QtkJ1.=B,OQSkGtu+_]I=b,6I;VBsA95.Ni!*C]:[hmScr.4)D>L]Y5EN>Oj52O1:?_:0KV,J.G?i
%oPo3nn#?j)=V^q#CkU7ZgIo$8A$P:=/qI!!f+VLN7KY1`cYH_9Y@gX[MKDZ%r'C7&X1'\,l(I-4H,W5$qq[)+:pkV@pb[HRgQI/j
%GY(!&1X]Ua:oJD1#K9^Yq\q'qM>Bf13EPR#@?H:4DZ,>Thi=.G-^]Gr`0=4cl5\5hT'_fO_k3*'Ip9<-0il.^\HUMR_?%\6.<[Rd
%f"\OC';>p"*M6j-MiQfhM[cfA#<N/0Sn;Yi'lk9NaK^ns@t5q9d/j>F'bR<W&l=h!M!QY=^u7_651Hh8i0@Mc0K@]eZXfNfAgh$2
%J\0,RqR0.*/U!\4/a<<9c+'gf8)I^+pnr7H2M8d6e(U_o_2Fi0Wcl2q\+`>5(m5KCqt=2R=q=cJ%1quCpE?VmV:KsHhk3Y$)00!C
%fkRd]-&7M@V;@@GqM5jEHo4N6LHp4W\<9R;kD#"N);'llW*u,-Q>*+'>#6flB35U(L[c/O?Is%*6?'d_0gL973V"nGW)UPgb83I,
%7H;"KOf.''],bEpXbg?T_1+4#GWsI--3t^mi@n+8c"mu/MF4^1/pp?#R(c4F&`9!m,gY4Q$sV=)Z%-ce(`c,1S'qF'2"6BnoLMV)
%7FEA0hsuUF*(3cVq1B,fq_YAY7nXBL]am1N^_qX6h#*f$Ds[+@Qg2VZ3dFVL@.!O#BK/S,QL;2NPi>UV)mE[`^#QBJCS[q&31;l;
%L_p&6H"7tg'(<KnQgHQ2a;IpImXA_gW4J>J[Dm2MXdDa9U-"#ITbdP$1V`u:d,E6$DQ!3N&oYD/4th3.8"_,$JRum:S5[_<aF5oC
%gHKD0(&2pWIN7"eFD.dG#dqi!5TD1g]RZRFjKk_-fpLTP!X9,Y<-&Q9qM2s,1Q"f1K/M[s/0(X'#F8<6W+koki/;=iZPoNb6Xl99
%rc22RPG::fE>XKX6+^86&P#ftX`nVAna2##E%oj/!CJarZN2fINiXo;S=bZ=gij39@.@I5L/n5mdO'dDYA\p:I_4j"VJ#cQ.:_8h
%b"l^>-9-bEOh%.JqO&@X6>rmn4\G-;?/,C:;X-JKb"J5q(nI[J_j7OhYr^8KL/qqJFshT4nBUHL=;%*fQ=AJYa_Xj14_8Q:27@rf
%M+rli-d&r5IO6/(gMBcfOpVl'DVs438SFbMP#bhJ@nUW9Z6u-tWG4=?"[f2a*IXbp<49"e_'UJ7ZIhJaAs;6;M/IpBji]ZGBmD7+
%Zn'ZF.=R[s2C\(B@[!O;=cRnZ2CY)^BIZ7\Ze=VS.36_;Yt<nj2k-%^7L,`'2CVgu@[!OgM&K=HROtW9XWLeWPG5U%W[!n#4TN59
%m2:!aAK*K/Cf3)M`?n$Kdqq0SFG`eMB'2h3"M*t]X<nX(_Z3N.&R&4M^F%DcgN)%^M54X.gMiYK<.XXECf7W*f4BJe=dm`#9n%KB
%QO@V-1d]_8J7`I&_e].L5rL/[5Ldl<+]_Q3EgE'B\HJB9<32]N+e'1J9'IE:kK'_=RhQ<)%l'khPMuS,0J+Ngf\-+nV'"0*kT+J;
%1b\0+?nT-bfVE1jU84@1-dsd;'l6dT1;g2pA<WaY=mUdFW`bX"fTjp%;RGB#-:M]KCf7PsbHWudbcj%4?)X73frX)aCf7Q!M]K_C
%2C[?qZQHdm@g^+ICf7W&h)PN`@rppQU>;7hc0DNE6^o`cZ3u_Vfq`/-<_E\OlH'$c8rAKA*ATo\YQZ7.*G_IM\JtGjYY!6@&t9T[
%`>-s4Egga=bJKl(8mseB`g]C!7+2SP:MVV`]lL>KEBU*GUEH$?j3@6bS2$4d34BQB^*:kQ:[PtF<CgW]m+:6[/>S.0$+,b%kE9bm
%7c8Q`aKm=U&Aq5)ED'i+U1bOqRu\s`8]UUIr#dn^l25E/2CZYT]5s[8D0Lfcl]KUa^J5!,,7H8X9a^["*m!nG2CW77j?fWR/Cl,!
%atlB*-.o"1<XsmI#FcD0bP>t1bE:nbX<<uH47;fEDo!cSi3M"2(g]ZVCuSIh\I`RTLbYsHYthrT7@Eb(1WN<F2$X)M,0ecl=oZ-0
%XP"5k8O4!XK!<]diT;DFR3U/[M/6&u3+nus8ou(=$qkD7$p'G"ka\B3/<NY!W,IH9#2,dhGqM8uCG\Fl\1dbOOtd5dmNkTA)2+V>
%bR?bKeLW6cYt6YQNE->o6)VeoP>-p#kiCQ-#+H=Eck5D7A<VUr+uUm)U;8110W:"U#,C!n#1:jSY&JK(3'(2Aa<lU4m:RY`^K@#8
%q;gqb-3ZgPRoFI$(Ib0i;%6mmdLiU!Cn?6OZe2)K'kkA$fQ;-NIKZ->A]IK*9-Kc=9I6r8+[f$_.@+g=N&oUeTFbRrir!n(Qc(5)
%J-O]&#YLXhUq3-g[Fh8lX.C\</N,$^X0]iL?,dbbSe>V>8\qD42CZXl[S;QM2Q8>QCTMN1XIBap)/N25Y@XOqKm4ddCb7FKJa4A.
%l_p1aAs962"lhje-C[sDrW>HecjGGWk[MptS!67e!S#8"P@?4,jbPe#f+DM@m@+4+lEijl</lpK?u<!^`EWloZWTB'5Bh[3M"W>I
%'A)UXh]FEHhp*Q;i+Y#;keST7kc$<-7B;nXp?q"Na<lU^Bh-p@)/N4'o$hWFW:8=H(fh$),fV)qL79@/1YAK')ID6-og(Jb_M2!2
%as<GjJ\q^QluN<N@C>DIFr7?6W]MX6HoOdKjoJbK.rdGYZ/SS(+c)lskU)d`X@<XjMRM";&Z6JE-4k0Wb<"=P!;]eagDBOKr8FEb
%\^2R`9o;L$C_6*eTaiVnFNg5j-3Z4\fqa:XKe<s5Hn&%Hr9/32^]2mY;QQmSC5aT".="#&YI0!WMM2eN)-L-o*Lnk^jgS#;$pV&7
%"jA"sQl.t`_dpPe\3I2s,4Oj7Cf2h:dItO'""4dTG4I*9_%t.c=YcL/r#,VH!ZPF\-De;EC'\k]S!;nUVh(SqV!-j=I6>\s0SM(8
%M<:K>Cf8Eh1]qX%fqd\5pF+DiRhQGJWOS1iK2"tC[c6kMC,RO#GBVomERlQ$e`,&n-:N]17?>HZ_?FJZi2^8*qcj-IQRqb&\c'4A
%"G!q,bS)mO2CUPKc7UObA<R(Xfq!L5JlteZF<>M+4fNh-RB_!M^dr"g[CZ;,hW1E9(2QkOH1t6fAi;)'n+JMqS_VZ[a#aD"^;qY?
%elKsO9-r5dYc":+W-"o/N9-21U%Fah;DbC,9YT2ULrmsZ._c7,,q]Ydo#EL<5G$5R9o=-?^Wg<,?IBsLMIj(b@>`5:m!Z*0&Sg23
%!7r8eY^J9iI*b>*gqL_N"e4$)I/[G=+I3*6`4q[69!sDV"\<$bP,*a<TEV%kPc*6^Cf1],MR.rSK.p\8:"Vpk\2M/e:s87_mg;DT
%)Z>P.KTK#9R[WOKnmGNd*)blJ0l8BpS_L.9SYNk@MG0L6SUq_UO+86bE3Mp5d^2Fus%j,tf(>t#<Hg:mOp"=HS4G1ieNuW"eNNJ"
%?YX?`VEZsVQCO7>F?6=X:89,i0Uicj[ee(:2GZEI]cF5Gd.No/V"L`4NUcn5bhoH`D"h#k4+g67TN/9hWFc/@12@Y_NE,Og&^"=P
%UHf4M$$?XH_J/<[Q@R*]]=<AL@cRec?XXNORhVn>!o$"!.DhFH<dq?ZE-<Cj_I>7M/7GIeQ8Ps>Om42I]:!J5J4CuVf/qW\=NF>:
%[>Sj!!%!sc?oQc7JG*9rY%n93'Zq<Y*as1Y`E:Iu<d/2;F^TZZAktKRXD+X4_*p72np;1RaWd2g7,Et*3:W_.BgWnAg-f47EC8F\
%l=g1-\&nT^-Q/?gUmU=[2CZ&Z.'=o-2:#rRBgIUa[Elq6n2.ICWI[P/KN0qdA.+C^rYQ)a+n[Id/UktsWDO3[2CUQ4i%EDFGH2Fo
%@.2\ocff:^V@gHo,Vb<;0C3!=>)m'U@_cc$2oc3*6Sb,FgLKj]7ospDCh98Gr+K<^pfJ(5on_%`9o>59-eP`?-DcG5&Q,*W$oAFM
%K)O%.5t<iHLb9L7]]*W&O<^:5&179\pmSL4gmH#,Km59'Uc96$PH%%s;@djGRrt^0@Hl\![N_>M(NVRkg6hON_3)eu/KHN?WT1P>
%Cf9Pb?k7`?2TeE(ML=,QCe[kIOi/)KP>WccEgNdB7<[$q6G(d-,!ob^Cf9U=+Z!(<.F`jaRiGlV4B^$o,0((`)p8Og[6`@fRV%Zs
%ilABVL4`=?Cf9UR+Z:eCR,EZD,!B3YYf3lj6oH)1Rn\cg-H%7M:(qKTdtE3&-_A)V=m/qn#u`\i`_ns0$Z&^U78dFA6C+=#H2Z"=
%2&Xpa#&D%%Kj"tka077olS'!A'J!+N%tPFFN"Tr)/0lu!UU'&9.u@#B-F-55fF!"I%Q5c`a[\K+fq^C<,Xc1,b"2Ul"o!XDMFBtY
%EOAO4P@[2-&[]L]i%-E?Pst">=]?DBX,KfK[R_8Q<Yn&u1E3,[W%HYt:u*EU.=stH\[05Q=:I4BV!toH_V[B+UekYK_@T`d_+eR=
%;)JWeP"c:X*gKMQfVDVd<"32OA<T?nOk?JD<#g=Wgu#an,t'bafLTV<;Qh^,F4m[2\Q`,F";'4]f^hU!q"KeS@Zs^J[^p*QF3o-i
%"gr#9e<H@q8j.Q6FQt><7DU9X3&1<to>hT7'YASBm:SMK)(u(M.J<-ZrjBQB"?LdeBFVEHMPl=dKKZuXOTN(bgn8Y<9o9__al0&"
%`XtfM\5;0f%P.$ZPgj1`S\/^%0:5IkdLuAT_)%]&?<d^n.CJb^EL"0-X8cAr]*to8W<6Au]sZ!7Gam@CX%:0I*7TbrUu41r'Q"\b
%ZMkCE__F]>UKaK9X-ucJ$T:Lk;SqQqQS+QA&5*Pa,!IA-j)_LL1>QbE_G2CeP*dO.8;CSB_K90\&Z-692R>uSb\0F&<af)9:n?sF
%UJieL:@_Cli&Yj`$Ij_iQkQ\[NM@&S'HoQp>D^R+*[su(nn[nt?s+,5/c]kEWI[_>K&G^O[PN;:Cf3[Wi5c$.7r2'9Q#E9.q0Vc=
%Y(u4(#RrSZ'S>[#ct\8N;ChmM#'r/48[/[T.`7tlN;eH1V<[c?6F^Kg@ca1KZVqVjEFKO1-0Fr$mkHYW-t7?_RTRa9^K6BDlG4eN
%W=B/(aX4tN^<e448JO"9LWFfC_V6Nt@>/Mq/ESsXI(?kP08JBeRhTZ6KEjk%hc/C1M+rj2I;QQgY8d^%RoF*2r,>ZnWikUpS/U(V
%hunp3MC9\SqVh(gM+&^4fq_a(=0;I+_5WL+rQQL%&o*-OQq^3+SEr9'@$>&AFbP//6/2lPeOIM_NkCmD!nNN0<Y<22CVV[@-:Nhc
%Cf82tp)DSHLF=*5D5085-7-<;1Z#GBDUe2a!'\@K`GGu5Q'dT13#o0S-k`!`EM(efi]`k#V%q3eLeWcZcYVsGfVB@H%Wi3-T2DZC
%_'UK+B/3/f9L\<Ko#*lmo1!WVQH`">dMC*3/jim"agQ3R_]8rMU'MHL;OjA0Mis.\@;::q.\UB^"VA-GRhS`cc'+e'1_-c-m7s#T
%,f:9V_f_<q]"ju"HGj!$)VLog&R"[!jNM9UQ^$0)E%ZA7>[]`.WE2MgW.X[ejH<j\K`o]V/[7mPQBeF]1=>O:6*j-_pAFT-OA1W*
%X<EHXE,DL^1t\TRl/YT:/&>591MtG[!`jnhQ.Wa%9o<6#\##R1;Q@0_rHu2`24rl/ZUqEPD"j#<V<PVEUfcQtguHGfran;[b!%oS
%g4N*,/p9;"HW["Y',B?*$JD4'3rQXA9oAV&1V,FupH\45MKVitUm]sE8Nf*o"IC?%i>+ndpX>.[@1h)\XiTjt9hGl8E_)\a&Cq76
%:D+8<l.G5P(%s*tL?^m=lHR9M$FDS14Gm@(A`oVrfqd,F//#LOG&f[WZ-3[BPuB`gh1AA$\Z)!7V)(\RkXe>Ypkb[ol\Ik:_:T@4
%GEakkOa$Gs,+I*FjSic;+22@:-IlLfb.?o.:kjX-Z0t8K^K.X3;7%@>Bu).8hC#6#MC;JJ5<1DBZ:V>$8K'N"ST)Gm6b'1$TU`I@
%A<UI9PebhP@$<nrP^`J%5]bS;AiR^da<j>QDt1h!md)q>!%QZt&p"lcr(K!t]SAl@fPR0X7O199;Wor)2CWgQWDR+m5<!Z"S/+$M
%`&WS)UtEU4G;ld`$El`R.5o:L0G=2lGm+Yq-3[X'fqd9F-5hT0aX6[@\%b'r]0o=\^VO_aC_@IJI:?((:?/_-TIQX`L>liZTOH=q
%H^R9oNPWDRT&P?d8<KbEg<=n#hZu+hFu2c8IaMt0ltMX\MM#_Ck\;;".5j(m.L(X\$nPto8[5ZpZ&dZHW*j\1'Knq,-AD.?o#8u6
%,hSoS.n\2`@$44kkmjsiZ,m=8^V=s"BL7f4:$PBD'BZ+f*s.1te&bLcP@t5nK1u]T:3(G,fOU1TZP/Th:H?K,PP/c<q'WF=WTUo+
%N'.=p)%kj<1iBWkWR3lT??"hkIr-[]JU3PD\t_m1#lBP4Uo8W<0%/2\qZsVARPofkR1,YNW5+t?-C*As)o#0,WJ"+&Z6,@Q-C%\<
%kt(%I2CVHIk#;*uCf7oh4)i`l-C*dO)-FPm-:N*:@'s)Af87jOpUAOQP1rhE7n-Nc@Z*rQ-!&1)A#'5e!oa<WY<e`iT[$6&U%c\(
%]DD'tCGr.%o+lLo=m<.^FVR_?$<iL&Na#shNW_bJ@Zrj^@Yo]lNbhSsm$ZpRRa#YH'jN>$HJ7%g;ADjYN)6(Ye;sg:7#?JRPAN@b
%eQsGc!+EeBEpq4]P<.$?6u5ca9g1f8a$5DTWk4N\*ZSuoOC>C0ct#MpL\_+=l0>E8e2a4aR8AndA2'n'F:!.5l@T-=eH#a<Xq1`>
%7)ulQO>YPjp9']JA\.B9^R"kp+J0j_mNOj9=EiH1W["2?//%9--b]`A]lJ7+DsG[M)*;AN(R2]44nTu_/d$kO>/bVde9Gc;@-9u<
%b:(8V\"F+V6_n8Q%BJ]C+CgnI?Fuge<9DSjnat^!DCVTT01_*HiUU/!)N3R+pJ.S<?fCS(m\WZJp8;Hgro;go;^lAq[!d9A4MIc[
%,%RbZlu!8e:M7Kb(4q!I*srJ*I;@n$bDG?\Ql=PZJ^F7'r_g-N<0[`A;-&;2^2[AJ$)&lI'B)uq''Q?1i-/]&LU+L\:[Gop)H^+>
%Zlat-9/9M;K$IJJWuKn:X<oT.SrG'tG?Ko`g._RMTrh'808J0H7^m[S]\FgB7G3Sn!t$HQUERo`8"(\"E`'&4m3VGYh6jV:ql[(u
%.@Gkbn>it]96Ltr\\`/\OB%->Cl5t.X+>eb!s/G9Lsa:*bhk,Y%VCc:M)jjm@]2^!6$b($_!s0jmUah9k`RPaf@g/bY1MsZ\I2Qk
%_Hr\4X`)"(TlF0NTfMfXM2HJS`!TOm"A=UqcqX,98PqB`Z4FddBhqB-_c)kF66+@>X!p>EWALJ7R"c_&;N&qMc*j4Jk-lSi25O!o
%qh;=m=nY9192OZO@MK;0WOo7u\>WUchZ`&OX*U3#jbr+`@\ka]h1B$ZU<F"ESVo%tnMAUjFIMhg2Cpp3c]u3!^BXf\62Sj3N\!X%
%eiF!!9b;,=OE#VNXrZrcrubFDCo:Z3&8Y7//]m:gBNpQLn?6)<X?P*p0bd4\T5B<1$DmsB-:QUNXIm,5"?osA_)6mu]`90JgD:Sg
%HsFu)6$,9e+u>]&APe`D;uhAA7T$#ZLHY.e@[$(p85j[rCf6?0DcBn0DOCS-)k0,9h<MIJ?OSVj7P*$/?9j]a<tBRXMsdp\nh,tE
%erfA5^Bo"/FW1k9g\*WL?+\CoMD(FtHi!3mjV](1Z0c340ln9:`U>UG"j&uMN^@89S%caDgc43%VE_,!%7V$`6'drtRB3#uhIK*C
%5bb=?^rQGnn?ccE(CcGsNe.3c?#h9<(XE[fbn7;7fh;T*O-(?DdKHZA,t3FLACF6U!a,ue9rGM3g)q7(p+ma8Sa:6Wb455Pb[J?]
%Z[to/'@QQ.1+SI`oIJ,Q!7J@6X95"%&@a0%n(Y=])$U5L+6m9uJrJa$_DI)_B2ofeGgIKE"Ig*91s@)s^.>#(]gV`Y^Uqe-[A5J!
%4\,;/rQEM\m@JQI]d^=<WOL6#In$In&(BEtlBd\L+2?h[m;bWIp+W':4$!U51qJFgh`f\""+hL#GC(8)3Q0GrT<bsT2AO!bRh#G%
%C9$5@c\c[2n?puucOa*K$mWK=CFkJQIr+l<E7R,dEOdS;+4\$%Qg:dh4*HMGn.rTrF&F9^[me&KK_hF>9aFea[K^`P=T,Hq;&@hY
%7U>XT?3OeKJ`)nc,C.Rhg5eNrr'G\A$-jKYnW2j'p-n.X$JQs(1^c2j4C>\0D!H\S[S4KU=5KO+Rm.]IJOb0o8(KE:WUsJJI+IOk
%:K#?\6HBq\<.%Q&d$X`dh1f=$U<"BeYXuYoU^PW2kF8&%_a!GO]Ec8:9%:8ok)Ab?dpr;mbnKsk"RD"M,<#p6AUcpkbM\g0k@:ja
%*<";/X8\e12cX3AiWL\/R;qXmY9D!J@eOWi3NW+LmDt@;%LJ0cl5C$`W2-UP_'H\SD*`,!5die*_'T='mH*$g;DKN!J`f,cXt2jm
%,#IE[FCl()A&5]kh<+@A?Fotc=[67u`4lTSf:/ESD?C++1t\UMo>*F]<7[Ob=$rXo_%#_Q/;Hq,ZCEKc^.@2m1DE-jPm=>?Eo#hm
%Zr=Fn%uVJ)k1sk)_^<>EWfkKg3:Bd_TXNfF]Gd7qFAXSn^5.^F'%gZRTA^0$LL8>&GH#A;g#rq*e8$rB[-RRGXfn[pZEPNW3J(WH
%JZO112!k#K%u'o_5^+GJE3poo(UNM,VJcDJ'FUeU%J(!9P*%WHE!V"q:O#IU^0\a=Hrku_<kMhG5^j]7T:ntlL.,d(AGiNG6+,X/
%%XR<<Ids[=[qip3'S$K;#KZ]a6'o@k-0!#oe>+uuPVlgT/<K6r7=tY-YXq,]r14gVpN^<UD-Bd7ir+=-%+=XOL0'QS@Z>@jYLaaV
%1cHhs1'U,o?-V4^dqRCbeVoul)V;Y#?2*MFdeIl\\t0Uf=`8m6RY^S-\1#C^o)0,So+fZT'/De04tHX#(+90.'3kPrbKe$?mtR4e
%j_'q,MHHXP1pI\W=]Oi"Deej?93/=1,;L'O;SC#*OM&&qhU/fM]m"PAEF2(4m'Vd+fo('.&LP+=QM<8@,8Ihr(kLb+4SZJ*hu,HF
%^8X-,59b-9r5S;K9(sgJX^1[tjoSV/;]Xf,"\<V"$.4hHj0QF[klf3,r&!/!6BJ>*a/@#5gOe,!H<t6JP*(\cT=::'HY*kehsfE4
%V-<EYqeX4kg/H#"l+V?Mb=\Q4/?9(<"jMY\/&JrRD#8u)0;6/t8Zf;]E0eBg"^1Z,ZU<Z_j@3\!7V4f";Z%[[7HNk4\7Hrhdg+Mc
%+*-tJW\r2r*OI3dSXH#q^K;hEfpi@,.EK#TN_..*3skgXa\(*e-jsSU90FnBmt,k4ep!sFL4<BjO^d.U>Kf42TQT(uD556NL;69>
%-R3mFDmkjT>`S4DVe"&e,h!OE"qU*=*jsuPr[d7aML!L/"saW&@LMg6n#VO`rF(mLfVB)IQYj1t7jb,L&-^u5P8m7ukn&#'-KdK$
%J`L(R8eHntFu@b52%!K0R`poWk'128/eORr'O[Fk;R^:&^\abnB.9[@l5pL7>UbPB4+5d]9ASJcSXi?i>KSqmCa#QX#noG,+jE##
%l!g*Ql#G@O0WN6=af9UmZN"h4GN@?;F]5b2U6@MfX5])ar&Rt8L"YF;EL:PjZOa*U=-@R3RNkY.Gb").PCb>IG3I$r-^Z<ss#$kf
%3Ln_%k/+D9f;oNs`;J6WNfoTSLg1qEE)8t"?#m_s?0li9KV_JC0uo/3FDl[@PhSIuY)po<Lrg2&cH@:iekH\nP4@oTTM<BHIsB`t
%3s%04(LtO@AI;2iAk(P)qc(NCFsV,\JjG@2EotIcf,We2/N5Pb1?r;33fE)Go>fDQ1[3-/2[29p9aW)E_ToCrMUqZ"@[!NqE6N2H
%`9U@1U]-jFi^o(?%=Zo+p0a(F$FF>DE1K$h05incC@*NpS!7#<@>`PsKf]oWm=^ST]Pa/J31N\n1+UXcG&:'ZYrGK[ML8pE11<<0
%p/0)<EttUaph5bp3c!+??]Z]b"4Z&/+HE_d6sQrf6)M$:3c%\rpWN@cBDLVCm\=HXbj:*ZMP%1";cXjl>EQ^n1?A/rG1`V#q.Ig^
%NB8&5Lj-FI6G$SG6&GqE\*K0HjQiLob@1!kfVEIQ2S[OtK<@9pVm4:8Apnha7YTKG+Ob$5JOeDVjkEaZL.ZV51*8D'f$N#ZL'q1L
%<<?>$H*[`nV>A7(`T)TCnJmG6!<PL#EL)aW4K0:)Io-o8EHbHjm5UZG"inClh_erQ]#5bNh!'^.WfsF0p7ICd/lt-LR(`!um8O0*
%p-,$qnPt#Y)>72bHE[&FP+^T.]D*d4OHN;lGS(0<"k*N>Dc/c8;OE6.,u^\>W%U+5Ib*7I?2h7gWF#RH&LZS#!@O#!"=5%Wi[]Tt
%!]$KrP'O7i,-@Sreh0oi&e;b2h8Ql-OVFu)<!.[u[>:oPqK'Enl6>Q*#W9J[9,7qsd6)<C4EoYYJRf.*WiA2WA1]@!03Ue:FLt(k
%%ohFu_=SHCVWd.\L.pPf[ZL/pKm00&/:pU]P1b/sc]!7DM"fS[<B-7Lf]02-ob*\/fEdAUZQ\h>`^\;b;$DA2VpP;1'-+6p2E7hZ
%4b"'fo;l_IMCTOY*c+`9`AX+#_3(D1MKSE*f>Aqh?QW#uk'$^OnmT+>'i1__Aq4oZZd[rZQhGp\FOE%tr\>l-^T/>>]A;"c%^t#&
%lq":8`M/-CNMr$Sb4bdB)s6Ig[gfP^DIU&fW(^lJi!P(*T/_7c_BF3]Y/'N@h\'a'>jOB.Jk`87?44%[>=A/)pDO+r<e=$QZ:MHH
%?_bpcZ-"`[X/tV6jT<J2>N%J`2t[5@[7i!lD9[p%"-tH?2Ti>AO/L`GdE!+Km++TJdEP4*1+1HH&h&`O_/sSVKEmF;jW+polmW.)
%[+J<AZcRtsWgd_ib-dRM6_d&*`G+'tOn5a;_mDDN=2Y<]]7q,JAEZej*,Sg;Kd%XAf):l7IFrte:aqT!#=D354Z+EWQKQM=F=]#:
%*@ia'#a+7.hO^0DP<,<C_`Um^#&'E<NMBU_0!q=<Ib$d:I[H(.?cHUEo+t!`'7YosG3lfZM\lA,o1s9dXKj%mFQddO"p);L3bP6G
%=LM(ji?6\c$*BDJ_ktaMg!f<OltG9U*`6d7pl<O#7MOMN.W=hB%k"_R"Pf?m@_jCFKL!:Xo;>#sT998p@C$j1p#8O"4D[p/?-+fK
%/K>M@LF*E*\35ao%0qU<@?Z:ZK[V$t9=*X(*Jo\I+I-[$`#"H]J/jF/26H2rZR7t+3[b12+F^oPgQq#Ed.4'HihG]9DFArP>!5Z/
%)F*V+8\rt)g2dO3UqO41;!#?4Q\iK.[D.P8%&/4!A^2#P@G%D"O^%kEcaT\3ge#s9"$oUPoqTeUh9st_K2%5:>CTkb-7M88]^B"0
%HZoS41b&.`LJ@'0P&PI*^2+n)74p3`JNb#VZO_3h2KgX6^q7fSBTUD0EX_G*/8?:-bfeG80qYN%+N*abTJB^4e^0)UrT^brRkG0[
%at'f/RceE6hm2L+obu5e@$BRgNp'[ul2Uh/\?!;5hbY*MT@TE5%K9PnX(;@UDg6\r?*KT(f.".&_C)WdaU^U=RI'2/!:d5cAI&`<
%?0)F.ThDI]L)_"T[T`$0ae>J>WM<A8VGRe5FuDs1LHp3,^EoBG!HeO7<&]:K<H37=9&MS("kA3PL=Mr<(iM.tFkp)1YO`*JS,le#
%iPI4kTi(p;/7/PUYXq](jJg1Kfg0f4]!LS-"=KDN.a)`;$OpJ(0Mr/$C_:NA6dt*iQO->D!sqGEB<mX^DhBc\?$jKk^>37?*)5;W
%YXrh:VdrOq.RgWf.UUqe*ZRRIebQOA(`<Mq!&$K`W.+8#m$+/2s5rJDoR:;J8%Y"bH0Go1Soiie8h]"8-g3,;D)Wo_V^aT$%\"/C
%h/N]@#IT>^WRIO6j&br'NDGCThXSd4)->mX97QO`:%8UZQeXdMV\HIK`e_>o\6D.GrX:JG$$:EuT[0+"s$ME"65FP1)1dr)"dU2/
%E_a/[L]1i\Mga1C(&0[i57VLC3j]Z=;Ns`eCf1L]Jm_+`N%@IhG!JJgKPJe`4oTD&@n'<eG-GQuN.iK6_'[-"ej#t\$\9t2EQi0N
%dLD&\chJGIiT024FBfL,2o@R5M^%/:b-[ii`4C@YTfa<RGu2<4Hs[;Y-""#1O<J"LY7lH`Xs"3)I]uC0-@`ptH5QMTp@mp_Rso$s
%[Vq<aU>:Jq'kVe+>_PKfF$\.F1FifdhGiJ25FG5<2WleU<ThBi;tF+^Y>\M'B0(5!9C$\4?X\6B@sG/\,D&W^VPid_+uUlRLj@K(
%5@9n]bg/,`!*'gB<Cqn$75cT"-oNM$1sd%1k%'K^95IM3-X-n8;J]7\j?6-QQ*673;;&h3"IkY"b$k`9fVJ:fEsIpCCf3#?Ns1Da
%V(s[H$M/:E<ahIL%*WbYbEQ4uR'2p>M:lndR=(E52CY6bAs3kSk^YM7-:LS6mMWIqR'nkV=RfT[-oNNBS"_s<\_.)S9/\4:S@O?q
%q>(\lS:.h"3n:Zk7d&FEm!PcMc-F^X=A?!@V?,%TmZbU9-.=[E0L"7BOhUPqqm/g=2CVe%lS:`C/1$c":S\Tr-/#)-KGGm5;Qra/
%nCkU6Cf1h#9o<#'9o9]t>P$L3le%I#]Eq2QAQ;A&18uC067tDW+#YQ?aX3hb-t-:KMNM^Q1bR84@:%6KH!)d&F6WYsBOPEE+rc`Z
%$uKS,bK:7"P&+%%1Wp2"F&cG5@93Z&'Q)+"8m%QlPEN=VNkNPCmUhZ/ZT).sRo:?DA94&ZXNiAtF7s*fE_NCaUh"bNEs,4W[_qa]
%`Kk,la8"F*jW<Ps.[Ts6q_:@*%FD&L+IeTh:`X'-YXq\8F1)rY2CTPEFgNh=='16WLOFDMpsVY\A<UK8\L^s3A<W1a(Y)j.-DbBs
%MD>P."t8>5:W+,,abY""1$:(H>lE/[P@DbH/8)`=-H2p)=s8Ij1$i09mFDP*cP(R>`=ZUi.5GdOPEKT!e!lE^As6-j3IYq99hH#]
%H%&V,;Mmd7WYi,;O\I__"ed.L&8Y5M6]W;0EjA7c.jZ"CMbT'pjV]6&@$=Jj3?7TtP>YdKT+,d#Z5f,EBF)K%Ep^-gbU1<eEgAaf
%Yt75,2CVqaMIOeP>UNjiU<NGOR6B'd_*>U?aX5!BZIF]8AkU-_TYYGBSSd6G#ra5GN7ar9;F)+qJ9*XF+P<J,Ec0VqA$ANZka\B3
%N,2CL3sSf;Cf6-Q(S?Z&-A>e@S!9Y?_pRYg``M#"bU0.dZs(^0!'RmqZ"0%r#WbE:*98^Z67;4+_'Z!4FG+q]-H/5llJ;uk-H.+-
%Nct]&b<Ec+19PS<F#Z3`6oHJ`C&?RSe1[+"l$W'q@$>%nRVYlZ9$ce$F>KrUCKropeRXkQd!7+ZS])qPfQ;-N51lYZ9ee82P@B'R
%WWm-p9o:+ZW(RFT.>FYMS2!66f834ZEG?=,!i=0m;I*(oRVYlZ<R2>Y0$>D*Z:QKIXnY0qRhWcj]gjKoCf1[DpMCRqCf4V-el^r@
%=Z7Gj_'[-oFV,I*MbQfPCOp?3fVB4kNf".L8`AFB-Df'G<Z:h+NGVK+2]N!qMabH/V,276[E']6?o6Q4)#m%.,K9N52[?//BnLj`
%)]^G(Ch'lA9hOAUg>1:q;A.B+D.8\i:\aosg&GqJ.035>0g`*9$$p?F4P?N`4V^dTM+rljP&,.?:t7Ul>MeS`j-!,/J73b^KFCeI
%Rb=J>)NG!YbpGm30Ug&g2Ok17-C^6M_Zr3gEs0SC[>]hdRhW-E.:;T'/5_lAF?QeFea1;56]$I=cGnS$9hH73j+DtY8g*+-"4[Mu
%c>a`TU^6g!.cJI(9o;GhF.iilUkC#="p&W_lJ$,Q65/)t!h,Km;Sj)7Q\["Q'e*gFoJ!Q-IqO*W<E2FEL=rB`mBd]?YXu+(68g&]
%/$OX^L;3Z[_'VUkArhJqUB*/\7q6k>a<m`]M86"oRhQ6R[!f4#!/e^XSU?<<YXPig-5k)LILR5X#<&#e;QAKNL+nfc9(@uTJ8)>]
%dDt)'Pj_ue=h[i5F(CJ4m\Le?)f/FCXa?;rJ5*&-a1f'JL29bfXXPn&#r\cc#2T7iS2JH7[J2S_8^X5:/+h2);Ta!DX'isE>QE*l
%-M9C.^K6[#ct8>a_5>0u78S$I/h(;f>p>]maet%k8g*=]ia-t06s)C#Y/r#%O^ZjPPL@.d7:X.\-'3=8"__A/,4ob+_q<'X"e:t4
%Ug0rHRoaE(!_&#AMI??]%$`0/'O_\dP;4>3aoGcb-==\\_W9kfQ!X['>2*4N2C[VUisEOK"f^.MW$XKtLb7qd@Ut[s<F'3En'*1*
%W-pH%>^JHHp;ojGZ:P@??Xi0A-M9'b^Qf@$ja[C%%lPle)S-]7Cf6F\:][pg<.OO=)k'KY6/A9chS^b;C;MkqKZQ\H@B/F4mrnpY
%`?s^3dW2?\;fb)&fq_ST>-8LeV@q@gSOsDN.2A7/RlY)D;NH>KBlNQ[W7&%A1>`d5W\qJi9s]^O;h3@0V,Fk'(>:le;QMOZ2)W?"
%V39;JMGE>Vd:r;S_'Xl>'q:HGl<T#g2CX),\t66cZsImN@:=RXk3l<AZqNG)&H'$f(<@i!RKY[lXB?r0<ll[W-uXs&!l65&\cmB<
%ZulsR5imT'gnY/%!i3$(Ls79Cl@m#sJ5&Z*jf"FlS!5V[ooq.TW`d28*@rG)'T3fKA9Q'A7<ip[Go^^!.V't,>-^^3P[)(U-(>Ur
%^+7o["e-4L)<r8OF[O,Mck'5:fqaH"4dp4G.Fg7Srug!j=N-AZeV%a:'R;naLJ<Z&%<YceaX5!dL9q'4dJS'(PP]]&1,LRR1!dZ_
%V:HO'eKhWd)9j`ba<mbW);,ju@$=IjNT(6hS!7)i<;4EUS!848e.t:#]l?`P8Z@gVGDU#l.CITk_[R!2HZB7Y'[#g^-H.qpHe3,@
%8LXX%\sm14efi\AfH-eX31=Y]Ch:tj6S`29@^D!@,>)H(.9?G??jkY`eF4Y+Waq=QkH9>7"IkXE?::+fZ:V=k6]Q*q6^[4eiG6Xa
%`ASNX"kE`k;Oi\O*%E;)eAL)@AmLjCe#]tmq=M7c_r4Y%8Z;e\$$6.f0M\V-\\TVhIL5`;aX3i:'`#,,fU=59VarX_SLDWdWa6Cm
%5s)ADW>e9Z`.C^@I3W9WW[!5o:O&'B@Zs\_MB"9sDCd/;75cUo<pu.cil>uD8ZBU\SO7LdR,*`AaX3i*'@FUQCf9OROc>,%2C\?f
%aO?h3Z:Sckr+fi,i[j`&fgM8`_IA^,/!=Fc)q@q?A<V>,fAEW!-q_V9@Ba.'@P,V;V_Ft50O)^T@BrJp&4ciC#W=+H&fHp"2CVW=
%S`WUZl)\AFnBJcr`KNr\+`JXH)mF^gT+[p+/5hR`77CtMY+hZQ\/O%r<*%Kg6":"9'c*@_U,\pRfq_SO"Rh01oGO48cu#9`812o!
%2CV[Nm:dCUfq_SV<31i8^Yn:`#_*)K'[)G5nl1fI8sMlr+B5X<;:MB3.G1FqD,^sO-(>V7NTuB2E2V^ZlfA'-9rXS'8A2UQ-Db$S
%$Kj=P8Z>oq%Km?qUtG9/62:27?#rF&47FPpB300$QY]Q'1aQnZbU0/-51<+t2CYfQA2l<sUj1ssji7RpPhO7'GT!_WWIJ">YE;P:
%*P=kK"uDa5>'O2VQT!9#2CWe=68l>tYt:pS='4KgCf9QY`O!4F9o:.7*SJQ87eqYhUaRgWT,Ki`X4a<(c>1"^=,X-7SR;?IWo&MH
%;X2&`I;c6.$f36(2_.f*_`RKQCf9aA`$Qc5#n0=]L>`t[PL?R1O;2S0?a)P"P7fdO\o`dF;F9OLr.Srb_WTtm#T^0A&YVQM.=lRX
%[MibA&kiPm'Oa%BDm2efBZ'V2TK3JhFgFXGXHTNt3iP9XFlKtHW/9(70d<)$E>3Kj]7NaLaGf5C,+B:]2J;d$,b("u3:552M+pSR
%S/ft#L/2V`6J_.Pb\!'EW-nK4aPX$WaB,Ju!ZECD.AkTmT[h+1V'<.TUC:rKQ[qS:=;6?Q.Q/a-m4F$2aX3k,4bmXg-7,0a7!5E\
%Uf>%Jd-NHUPj7u[B52%B;?^DQJ",,e.#!qd,/2DN=E"Zs0oqtg^(R[gYt:pV05hZuS4^NN?-/F#Dp0Q)>!AK,>AR3=k"EYn0X=9L
%TW]==':T\/qU33C+kNNi^;-`,,\DprCf1?47A)k*7Dqg4bWpY5RhS:":4:FTD[p1l;[s*fQqm6#Yt56WLohH?eJ7@<2CZ&6NJb8S
%P7ksCjTG*ZL3_@#@tIF4R"SE?`b@=[@6N'tg6;@5ZmXP&N;%/.He,ul3Z\^FB3Hl0T3/)2F@=(kfq^$2qc)QX,Dc55/WcT-&.u0=
%$2^-Mr?Rksd%>m7R:_Wqrf\5DD)Ngd5S^O?S!5bh!'klZ%b[Y6_JFdA,b#L3D<''"3t*r7&Lc;-3'RE[-(EE%eG`cS+sV=4EJ$tX
%W:`'D(im,%1.JkhAl?i"V/f,=mZL%&A/VP*X>L>-;g1Z@aZ#><UM3t2Am_IhUf><*;)au/FE!h)>k72\Yt:pX[FD-d74\u&h(a*:
%i5h#b-C^7c=dSGW6PO6BYt:pjFdrT?fVDKrMX;0413SY_f'KEf&t?A`Ut!A2Q`+^hn,0K9-De:RQaZ$Tgm[EJ^9??[RZsZcS!47b
%OaI"rfACtgD%dC>j&Mg%=_puP-A<bg2GqlXMJQ0'SUOjVPG30Ckgh#<?8A"7RR)'TLMA=bp#r($U`^tQ'Pfu1Bh-.H#hk9[SRo^D
%Htt^-6eY4h+>t\A[OOU`M+u-0`t$NoCf5"1em(>15V&&BUBle?oP$@&;JJB2M-R>X.GI(^*RrXjMbQf<aG(G(R8&RJd[:6*mn-.a
%pkb[olY6X4!fnK_W?W^,,OahpeTp5(9^Zimr0nRZeFgbjIWdkG;9_G;(&ORjq((-o,h`aV"IkX%T:Ga.U/]hEjM6^>*Mr`_C"u+h
%[tmaN_Hkt!jg;,oS!9A7"KjZ8Ut>mJT0=[M*-S(p%WRV*8tt2%NEb0e2C\=$ah#b7fHrL*^5#)Borq"BOt_*%YA$)1HVKJ4,PnsN
%7R&J@g50m,9hJ,rEd&1dW:2"#Pa^Y`(g.?<'S?U<>=pe&FgFZZ@?XFN@;^RAN`O(dnf,LKUaAq>e0c#3m5.T8$pmOkfqd+__l1\p
%5d"uO6b-I,8ZA<gF0*K";X.p>2CWc*8L&[]Cf9P4P5L2JP@@UW,iI_pRhQg2e/;@\ZUq.(8[4=M2CULB8^V#N_&]sCYqOZ<RhTp4
%.CohI9oA1q4:O"kRhX^SCf9P>&kSR>T+gu,&F?oA;8\^PV"bj?P@CSV*8LtC-Db<%.Y/X]O<5h:f1PU0@Zs^9Gp=/Y9o?fX*,#a=
%.5e[Ynj:DE"gS<:8Q@C"d2c6H!PJu4'WlF+(O1,E-:J0"Cf1rrGpbL!hAL--H^SlJR8""g?=ere2ObCK3ssRLRhQPaT@3aIPN'")
%JLdusm:A1)9GH0U`/YG2(;V=dIZ2eTD02*)G1=ElOd27ES!6RIP_7"I$#g%(%ZJ++GrgIJ2Q>$Epq-CmIit61^Dss4l",>.?m;.=
%l,Z;Ts/<RMOt-#NTIs&FOId>d&o.P?$+]A9RmlbUP+l)d@oFPtk..*hA$$HTgJ6o4\'4ungPWFBUa+0_s&WdH!q='t;IWb\P]bT3
%_/A*BW;\HT<Xikf5o+MXSaK70r<,Daeq5H-/=+p5AeeAV.F-@&[="'u=Y-ZtZr%"bldX@LJkThCmulZW'kjsbVPCTMUPkXVqN]9n
%jd+-a^q8*FV6PZ=0-W8_3b1-ber7A=?G7ReK[F5'3F"@3l;I@W!u#XKd4[oc.m=<=R49)PY5t"K,[bb<K>lubJhH3INNekZ#%(%C
%WqqL$<HN(7[W8<nSlTB`0qK'/ASm60JV%D5K6o#8gMrS&h]NSD;("F<Y9=bqJ0K;]FCc[_\j)qQ)R\pdJ9>u[B=8q/m"hnA-Mn@)
%Z)Dg&BK@0<XHL:-;+c:j99!.T<.5XS.d<IeZ-d+3)kO-G!?$<(Xb+W0lPX82U%hY7OIdXqZ6Y5iEQt%"+HqPr"lW7h8s[\p<J"n^
%6B^F_g!m@>J%DTZ(]lH]@Y(HPY0P>-:"^@h7)n't/6"7cVWR#c<qGTs],:mOf>%js8N:Ep>^,F8,G(`\:fqYk1RbAi+c,i'OHG8P
%\X*^.?F?jq-Rn<.\k\q+eb^#q'dYJi`LfMj^Oo)`,19o:,"]L\q,c8[6'L5)%5F&cWu8WbHLG8U!t+g>GNeX(jJu$n3_$rIi&jZE
%dlr^bibk#t`Nuq&-Ikaf0I8,;TrN>/'P^b'9T>jPnY&pAlrF@2(H:3P/P6GX'%@cn\0;iNhCn0]mB0LIJ*&X-D>WrZ@6lF8S1%S3
%-#3j/Cirm>DId[/IK;3eX;<fiJ:I`-W_.@Vi#Dg(*=F`_`hf@/TZ0Dn!c8:t.i5GSGs1K7gu.7>VlkZMEDn8<7FMK6&7'K'djsm3
%6hOgk_)S4br"r[i^h%?[Ke4@V=m6iIOoe"X<Yp?;GZ;ka`?WA?O`43/Dspl*4)XI!^oNAa>baqWF7j]lYloFIc^6Pn+[J(5=L"=+
%GHHs8FNb4_R=8lGq9(,k!#jUDF'<-L`bRY3abS>I[u3MEaq8FT=t>\oS*WN3Da"H-5)jEa^f%cAq9,]!kT6BV#8qh"f;a!:KNTki
%E<qK6[p?%R`lK(S`fk^@TOFDVJ-A6pf3Qi]VNVQ6jsiZW]9]WkTi+-D&(.Cl5FuU16Cu_96.Xp<->XG.I5rmNn>YE$/UlE0$-T?O
%LZM@7B#.*f5cM_\Ju.r_cqfFF2O`eQ>t3;Af(*\>)!YK=6.P%@i2c_iELMg2N-^_`Z2k:8>0E]>0eFg8HGaXJnlP</_P9GmP$]R"
%@.<R:GL^D=3Hp1cpdql#',\J_A)Og<ICJJiM#@nCjdYI0MqUlp_7G&\W,lkYrfB)b0k-UG0J]p&__U?)>Hb2SD9Jm=!A+r)l7]@+
%DbIFH8Pm`=;_O\oe8aeN.IOfua:r!cgmW(+;5Q8&79+U54G6RS(%&)<f*6]6n_e6uaf\+QhW8Np`Ql2u7a%F"L-C]aBXg43"jn]A
%qe,K4mZOZ)e'bnJ8(Z3KYNc@@b^]HWk)A?5'Wn'?[P9KYCP*Jqbch4J@mJb]c>0bZq.HFQ(M%$j/Si'>4,&>cg`J-RpuD0gmh@=Q
%QYaTU<?5Jl^&ILh0o`BcZ'>-Z[pp:76Z(G"@+;*fq"oPO0:r2(Hh$rZHh$i[qHb._*KsjjRe_07iD!mtC=M".9,7FLWbVGI9qQ%S
%-gM;Fau89I]gK3,[Jd0W*t%\6EaSJ0q_-P34^W6dL[NVHDaRRma'3mF?r&?MZ0$4!%AfXSN+BlQV&=:!o;CJlI,N$q^!FO8''6Sr
%3Me/%d_;8pLc&gb5$g9^o7&D[oPnRBr7)1'Cb-*$c]^h!l[FnQCeh@alf,<Kn%.sXPu*t0?R\,@dt0R,=cd/eAUf,-IXC^,_XP]'
%>uoatZOk,Ngsa/q0%WhO.bm,X0(;'dW#!SRDJR^%;LH?g75Vn7=LO%RO4*/+Nn[j$h?<L0kaJMnWG8_!+eN;FB+tJ7!DD+W)`K^f
%UrGI.)^Spjr,3N#5(C9`4[4F1oR+<hk?C,ub1H+\(m3uiqrQI:U]3#:3YPE0hdTmHB)5(<5#p`4W?*nb6Ts?"pHcdU=2Dp4H!Eua
%$gqLr5-3N5[JdB*+*WP8KC/WuqnJ06s/D%$5AEEEFT!.!N#Bfg0+Z+1Wc#6Dj3j6o;J].a+rWN`I296h>#s2=JGmAOq0AEXS@9#P
%o>b22k<J$80pgJDQ]co!,qrqia$-<k\+0:7%egKXk,6?JW2j`(;WYU5Fm;7_e*L<K3I>qZ\jSX4?+@?%ap#E#(Z4ZXIg+`t+'7@/
%+`\cdV[gRg_$.aWArZelT9K+8mgk<GUcn_tp\]Ag>/&5P]-;VPbQ!B1*rg[eQm[du]-""^!,Q_&bm316"A:JS^=d7]4dV8Y(%>pJ
%-St?GQ&/:9>0B(=Iqg\Ne\!(YL]WH_(UUZ`(uEL%(:qcgX'O,02oWtt1-uJI/dD!\Nt/tI(nOK;gs'X>6h1,@&JDu#AD4193AU*5
%ih&c30^:g(+O47nj.^]1r0o=5F,X-rn]OTnA9X2kJEnV1mX?Sa_rE\JA;]#9)._>,3OB03^([Xk$FbcVb=*8bJ(6tmJ9f12?f?<J
%n5W1B+ZM3!\'\bJ3\F<P4RB'!:9/N'%g=!>i/cg>'tE@Tnd96WJB]`S<.*<=(,Xo+iueN8GtR5`=XUnU*:6DWi6XKiX4l`XUZ")s
%<2"/)2`2130a//QI$[i?e8En9X0.;]>':eCps).G>\Wl,+/0]+S^6FUb:c:(Iq_d'QYTf;:g'-6pZ,]8c7GYe`VUVOlbCY\-$$fZ
%);j;iK$gS);k'2j>IE#3L,Yf9G7;k86De7AaH!A%:OC^AX2f?&pBL73mRBGC`:S=>P*NmDJ,okr,4O/+A3q%S8qBAUnA!:k=&km'
%h^+O12?PVF&TjKuo?Ee<TBb\oC=_.s%\V>+ll2IC`Yt/8k20,e8a26K+"L=9HmS_*j4,)i`!gVT1EEqE<F:/Si<pf\[8;n_["L$?
%j.Y!^`3VS%"@$:m57p'5N*07j9$QO=o@k<t:6ElKU1<q@<<;tY6k3+H>?"T%4@/;n`o*NeSl\0b^,oc_UCst'S%0.W.0O,U)Rl?=
%n-R@:m/Yq'TtU8Qp;%bT[M%@,Y#T$s)TK=gEr"LbQo#_uHg!<A]nal:[`(Zl<'<^@PC!,.6!J`LYP:+'/0PC6LAPnC/YqAQ%I(]*
%pUL[]R3nmd3Y&#p1M%CW6uh8jBe-N$?0$?]QB$.:G&pDN&rUk+N1;#4+:i11_eG)7h`"3kb7))cEE:j(+UW>#fuLi>fCR*Or^D8f
%L]Z*"H*N>249oi>;6eod#`Wr&[\<8)2On;9C45tJSVAk-(r=6Q>R3Q>2WmQH0Ql%#r2kc$n%gAK$d#9D&*3%tq"BnN%8m]rLOG(O
%E[N]k'BN2"OH]HD9.Y\>Ma/Fpps]^uDCi7dBd+X-`FngUO6P^C/@<E4Zps5B!0J4WO.Xh<N2gDT6ki`2RW1Q7;'K9QkPGM\'G!6W
%S.?7=)P9?E!#kp48kHP@Cn:Ke<-2!Np$%C.nMQHa#sC/.HQ:.5A4URC9Iq?u58`gI+?pudaN\RnT\n\+8Y-L>VpPAtY7Opm-MWjH
%kQ^g[pm[2&Y[,S[q;Hj"=l^#D\K.:-r8_*(IXcf8QI&t9]9+9_NDQr]5%s5Yb)87C)7DIkgm*8n9b`f#&(`aJgL&>-EdEstQ,RU_
%ddn/%Z6BLc/npYgCj.j@O.F0PRu:OTJR<d8Rupo6=*iVQ.h)pP5e">m)^AfX\#4QCZ2YpH(,LIJ\%5(9lK6dT^SO:Rctn=NA[:*A
%HRpWOm!3Atref=cI24?^Mtgn=8d8MNY[1;VgFNB\/4"j2]Zq>eCcL2BjW:Pp9'eRr)i<'-^#%OT"V*LLYL.fg?]LCe6C#\&Ka,ls
%ZrKQ`2j_.LB#ES<_FHKdJ*Wf3fS)['CEYOu_7Fs!3MJNAJ87+`];L?\QeB`G9lOk=l!XcIK3mpPL97:dK!\RTVJ-6n]e4\fM@_[r
%mW\1F/=s3<PpqLIL!oq'4#"fsLkGCpYP;4GSVq!^+$SSt_;a-:Sl>"V<s=>fo5/a$=62(miI%1#q#34)oJDSf!/peT>5)?Jlmh^:
%TCEre^qSi5#sDnGPfBAq3TcgGG/Hd"D-1n7`jBpCd7soN%LXr.^I8PQ2C%F4UIG3J)]c=<2Ik=%q8V&k$t8PLLT>jBj@g]h2/uYp
%3m*I6RKeqDBjRS?Z]:rW)377'do`^l4E96APFnj"GTSXni<o4n23Id2h_e[.bMP#Aip^(HnU#2R%h%RL$rLQAD4%OQo$$6N7`44#
%Z2OC=\")qkh8"q&(q]W`ibW"<:2aAgJgJu-/*/HI&:JhfQGi@lIAdinL<2li`n@`gVl8J2LXj8T"uNcJj5>@;10^Z93ZQEVL5GXV
%;Jg=VYYEStf:0js$7@]*]?LZL!H&`"?155<m8%Q7[b,.q:]YZrrQ?*Dj;EZ>7rr[B$[S'V1q#uKd2n$o7`ZcUa)gNmfVUpf_Vm05
%itb,q_!*gUH`NNu@0<(/6^u^:?l&I\oC%K5"A\A0q[nd1HQaRF=`_mk'kWO\em/U=9q#e3=*RI2C.1o'U_FBVT>EY=+e`cX1j(GW
%09d\tl8G*\Nh(rMIMG4hAr,[QX`$^@KTu8!.?mgg6fm!NP]KnN(/CYnn'a,8%U'nrDWd_KCb_Uek@[L3rclWLY4__?+@"W<<Ia>3
%gXL?9Z[qfEMGDfV9Q4@O`.-=7g?0tE=P)J&]S9);_\coL\FJ0+oc;ol\>hq.Z#qlEdQDNj%E#m2P0Oh[-DHIg"WDBIR&lBXFVlm"
%#0=rT%I8&(7)ULej>43]0]F_0PUpp%Z_%V<Kb\q[I+)uK>2_ndOi/t-HG>f&KL'oHDAuA!.cQ0e6]9hGm+?2K?KIruJMk.V++n:T
%(/_a`K'Hskqt?gEB\#W1'Bb\40i]Wf"hk_?:kItEbKMPiK572<Kl,^\Gh27eW#F@c`r-YtV[;5lj1-lsPa<FlI5L""M]T`ZYd)jg
%;'kT_Xe>"O/cEVG0Z1mbPN+AWl89R&o"5"5Ul]0QF<\4*6^<3E'`i!G%6PXVbi?nS&7c[Zr7men6^W^*e[TD4ORuJgPTkOr_PT0S
%)h;p.SgpKa)?S?'5\=@<2-8o*!8V=I&/jUfcV9#?3&V;5=OgE8K`Aj4)cs2d:!4"4nZ!X[2Cu4Y'VGq7m)hfs6;jP@_"AC/V*lq<
%\32E"O$lk:`[n9_1jCdQ==,JLGKDac;.Xbd#>`2`-Nj5dX[\,kW@:7(0Z#:eI*O+)b)28,L.PGa_m9c1oO*J61`HNq<KEaHc5aSn
%4=[9#Jsg=3S8F)og=3pVE(]_po#A)1D8\8n!DRn/.Wo*I7D(5SH&YL[7#ag2g4W=Rgpb9EboqLL2P3Z75ljToH/*:Q"!P61`BZ/L
%+n&ksA@TAt?,/qS=uXZH;cg-Yk!aoj>ts&`?[0S$mub$^^oTD<'8Bu8M"`FrD1E5%[QpU^8"5X]1V.k`N;]J=g(sRhY`jd?BT]n8
%OhKdc)?.@5j#VZ?CJNYHlMpqAY%8UR^kaH"B![:%6?%irK(3N!73k0Z8pWfL+r5'3PH32`9VP%\,-\se)0PH8Dn1uB6`P5?bP`c5
%UQt9mpN2:d1[+X((?t%AOq4+8#F;YNou8M2.nIHc!RWGlE:S)FULDK<_1-5F)=Lh;Z,_O4C]Q(n&M[mu2*tN/I579'gT\asem:WV
%4#Zlr6XGR(jp'G"E^\^-<nW2C1kL@k%cHhmBF(S3YN3T:K:`Peg1pap)=b*8d*16h+^ftUL_BZ`>hR)[qIF'+`f#>J6C3mrjK'7b
%6^118TbKnI&gVpZ5FFlI$*5WT@D#8d3CO4`f+s-mf[QcsFGh3c*N(ZooIKIZ_>mVGB_hp/=h/A%!\DipVphkp9Tt(,iMMGJosfou
%#TVs"Zda]!;n8LhbbU_uF3%FP9c8NGeqF:Z";!<tQ2@ZDX8P=<8\SB$k"0'Q4AK'<Uu9A6oLS)6Rr'Pm;c'E%)bc?b&WV].1j-a'
%#;MXVQ_q?VP_XAP?mZDT&KdHLmj0P6#%#`NY_<T+L.GbV2hdfSXiaXh"aHH'QQ?]`AgjSciFTGc)RgMVFGpFUGH3u.@2PI+b'+Bc
%CM\_*VF\CW>@o\r"N\9ek4u.!fMpEjb-"aM7&!Tq$b>A-0^6!&%Z6M/I<#TOP?B2"*B=6_Kb/A\O_mnuUMiBQnl]V%e!rd]g,c"X
%%BJd18gcW\jRAT_SRaF%XXn3+*/[(LB8.!be8D$[N4-490IDh__sH=o#?3`U=gb$Gi'fbs'TKAp'2C6Ul$6ec1/DM)k9ZR6kCI%^
%+(CC3@0/SjlPg:*0]<E-&>G1a)QS%K[0)N,dmVI54?H"RcQH`"W4OVFP=2(@bg8d8TP5E*-tqY8/kE0ADPT=8'"`;(Er_%$4p`02
%;J,2:d_k[X,>.@s>H\@7W'N90%'XQP@Dm8Q`n2,@NnKMdOk+eU(%4b=24d*<!'BQ!*11N&*9l8(mk5`r[c")U&ctBj#+ocAi<Z#t
%Z>d,Ee"+n2S-8"U6E9p9GC*m\Iq*-Lmjlk9$O=s^?_cP3<eb`aRjRSjS>Z,9(&">T[qp=@L+mZ&M"L".O3%`[#a_X:Crbtm$&P$X
%S0u\e?b%t83fA(1c`sLOF-F&DW[o%*:7lEZ3!6cB$mVuUm[<$$F^WS,EoHFsA(_GuD":?==d,9JAsH:Qk=ZC)VU=>#B^R7\2L#_W
%MJs$%8f46l/oTo>2=?#2eTT')^fdT07`3Zs'eu8qKCRHuT/[j'79Tp:5"i?9l>c2KnNohL/F1t>'3NPhd-k?UG.FW2/4K]D*cd`G
%#Q15jT(]kVa#ZVY`])c@R\?Q74uJtnK4ppr20][t9j0QZ0T(7:FZO$\K4*FI2MkTnUVm`rK!\-6YS1.!UGn6E!4K"R==tjQl>at3
%jRDS?cm807#+5J-N1DOMOW]$^i[.G[7R9"=orsVr=O+M?%6[DA=-_#70-^mZN/q1XaO77nX;h-aN]aL-ml)9iqJ<Q!_Oen2j@put
%`Gb8<bgoPsi?rVjo]T=oCQA;7,<Usc3'ZOu-HgOo$RgeHJ"LjOCt<C$YZO+`4idtqL.t#^?5Gm0q[be1fX;UfL<P`mW->/0(sC?Q
%JroPMg7Ae)ln8OFN#.f\BB*#D6PPEP&4n]NHc:LI]UqVf=lBe^moQ/)GRZN*3,k#(^l,32!2l66j5ncM.j[&sA!@&)oO9Zp`AYHM
%W+j2mQ]a1kOot3rMe=.6orla[R?2W.Vh*d]'^k([Eq&Smm'iJNk;SGt7:i>o@.%0nRqKFP:>6\',\K4=XbWO!c#e"_bt:IZFDG/(
%=)UpoYa`[e=!7M,6F^pS4S.CS?osS=/>(.d=OFO6g/in8mbj[QV%FuEV0?Mi#ZI[l]u7seTR<%"N$:#WOW0d'f\AZB*4*V&eBVS]
%&`W%JCd@ABOZ^:'+SDO3oiGsBXO`l'/p"(Fei,9$[)FmM&AWgqpXib6-?#LM]h5k^E<[kWD_SDO.p'NSIJpUhlP6qS7>;L9];j^s
%+#<WH@%cHeRbOMA$EtW3nMP3Mm<6t>o$m<m9i!*\Q^bMZkmlC0G\SH]7T.TFXIg`)dZ[2&(bcW@/1Us5:G."Y`imt]S[i!D-N)P:
%DEJc])_R:QMl>A\\@,Z_cY)),[42AM=[&nQnG*c7Z0fNEQa'NEEG`_8GBF?Q^(af/[4((\^9m^tf_^t2$(%HEh9Q=nmsbcW9R0V)
%J="`=*AC4TJLI7P4g7C`K_P0Xi<kck^cn-.F<:<qKWSo</6Q39fX#6M]KQ\7@FGFkqrE3.fN5t*m-F9*T%Xi2#8;GnCn7H3L0_&8
%m>LRD9PkE"U6;4F<@QDLXX5e'X%!N@1R&kI8mV4DM<48YFiR%\T+Ps@2[=F\Z"kI`9pN@L*k9WtpaPAAi)LSCG?]3(^fQq:Ti%tJ
%3.TO,9kC!_\3jA.#DdL31C(0i`#d"Ee_(F!F?hI5mQ`o>5ZT4XZq\ra@>2B$*dOGr`sd2fZbu>pE0`blCt^NPBT5<bC9=`ABpBjS
%.^_c?C[@UCC"5Lmn@FVu5df>*E%[ui^pSL$M,bGtZB\RFcDj,kN4"E8gQbKLf%L5_ZI.\$Q3)luP`$R?8sAW(4m*:6WX%TgGeZCT
%C0$JKEA!Se,19I%dNrSmRTbtY=5eFN>>\Fo?!8tr!3u$rZ+/47)^']VQ,(&FR18c14Jgn2YK$+'(BdH_HPN,XX!u.NAi/USQK`7$
%]>E]uBiCAD@B7BoF.-8@d&sASYc3l&PaUQoH7B.$X0`@8"Tet,IC*13EPPtAj[OGh!JIkN$&/%_1Z.0oFjQ+=-5?c=.Zn0oFK:b.
%V;G`s3f[(&'e#=VGXn_G3?Kj]+#m8`cXX9$5cSR,<S!@o<OG)m%TXm7WLHK[dAg65Wn@-3lrL01a^V$kTdQ\Zq5j^jAtVqp#^r[D
%,ahW7Itq_@r9$:Q[q>K!H0BgVM_XH6j_O2dT!UQ7N,@[M*Ds[7@U4H=%7j(R(Y>Mp:e=5-fh.rj/2^P1FniW9IKtXV8SoJ]8aq0e
%acujmE\*$)k`QQ)XIcu?9D-(j*Qt,W9Y%K)jN8eGKmW9uYSH(iFdsJU*Mb+hetf0$A7BQpG$ii1>f&18]SVq/(q/XSQOS4Cbj+Nl
%#LI*3\=]phQCq0R#?+_]fjUeel1nSF5/:+>JN^,%lq'm(EBTiU;rQ#(WTS"lbZgICadiE_&u!6S0-,X21HPjGV*'u&kQGBJDkmu"
%8fTG-[-7TZ-*@HY5V`R@Pb=VTI3P(E>uqZ>D6FGFE-jN/$MEs1D^j^3;N6c;&q.\jQTJ*o@j)^A:oPE[P%*H_GVsUr0?))`".<oJ
%SpcVnkqpeB[u5gM=GcDqqBeCkkfdBY4LUZ@e1T>W3<2rW5@Bn_C":KLVAd=N.(TKj\%H]^)g5.`S8QfG$ZO2M6*"an<IN;<1"@A^
%<Flah/N.DF=<U\f<mJ6XbI7kdRX1AgV'F_#05"o[^fEA6*O]_<goi$+"`RK"V:Z@M*SI)9eXt*]$bTC.bOqD2]i'"/CpH9c?]@dO
%L+bMOYR4)Wq&1*9\0KZ03ZZ13=Wiu$2#t^4:IMKb.,9rd<!1@eJRsg0XJud)]3V_GaQ3?$WSaf30*IqjoB^s-q"`6UP]1ek)<-uM
%+9VQ4/:tF9$_A4u6nu.gi*)bZLh5Fa5h3"RLs1b,R2&PbncF1m=^F?4apcXM2fPNJiF>t!I,kL-XR#rA=pB\pO<22c`6nb=l:MU)
%$OHh_T,`Cj;k&mo0b/Fkn[%%a!7D!j<hdCr9GCkI5bb8*1'NgZWZb:`l`tEfA"G3TOKi7YA]l:6o)%fnPpXr`nl!>TDs@NZPbOBC
%H:4&S;"d`6J;kjN)Mgd.dr+qOa1hPCl57SX;O3G*.IVE5BkiZDqa&*Gm#a&6/%@A:Q4do#*'Y+P(s7^jrCEhPN6.+F^-6e-Q]b1b
%KQ)e2H'Pe&W+,qO1VIhiHJ&qq\R)6cgT(ScbXi*PfD`7HmT$_OWZ#b,Gpk2;oDfK8X5>,ebIZ',^1p^*=!,Z`C/p[/D<ThljNr4T
%>m7cGWQ[p5g._MrbSmMkib-LnS!AA1HOWlgRQbSXs()GX[58AWNe#-:-moUcl^Y7R(-M3/^AY]3ag*VSN'*'"kMO0\;J&[tb6B.*
%UIB?\\^d9PJM#!m0lW<HljIVI`ppJP)5]sH\0a<*9iXb&,tCi;AAUG\j-l\!iGC&ds/_*lT`JJMIO`*DR7)`bq!4A@ZR?J#fGKLB
%.I"jtaVO>>]11N!KEJq`i_@6QkD;.nUtue>o@G$U^);jN2u85?A!d1slY^1!fFI!l%p_ORS!\qWeO=KYeM\SbF'5UqUW1l(c_sE0
%3AkF>S=61D1W>j8+77CHh:DRIGg*BWjma&6.t%pYMLZiJZnhTeBF'uWPM\Ef3kM`G/`onagF\W;*#R!5DF5bCS#-EkbO+0<#bgn%
%:82]a7,apuU<@?/bS;`X>IYh\G]#94GD8-knqA#gSRO_^5^t<PB(FnO)K,1#<eK$7dY:QWE(8]'&oZ>t.V'$%`nmkpRWi?lA\i-(
%PfOmuOZtrUo7o-*)C(d]i`%.Z\>-=3:F#HhR:rY!&_E4;XS."gR@e]mTW5Q:oC=jcc_Q)$CWp$F+?MBgcrk5BEm:.nL1?\_:WC]!
%.GT>W_\0W/X40=<h\(&&-'*9_89Krqik+$DB9Q40G[8%JAai@oMlEaSeW+$?1CrBB\lh/#bD0sXlR'3p4%#JMh!2b[>pfL;m-5c"
%G2'1\r+[34S70)@_n,7ZYM4f!F0+JGG=/0sAK<"Bnc7`-lcKH=$ge/'3Y`-geHSa$,7RZ3UbK6"*?;H.a.i++e#"(5/`XA8TlWHe
%:1cp$P5;_XB^'k=@!_XpWY[LXRi&$LNVWgHEW#-SWGpE,KcO2g1CW@s.Vi*B_hCqFU,G0;f+YEW]Q`_6=lc;FR>X'B[4/2DYr\\G
%^!O`cr"=W3^!]??7!gRoQ@Y/Bk%(J3s0gU&_9pe.$m*`/PE=")rj*qHd"Tm^ik6,f$F")IgGJ4t#Z8:\S/\*47*lnT*Sj4bd>Dhi
%XWGO*Jo_pKoJ.2pk453fj0bA5\[ad`@i%JNe[kAtIJ]GQ;Q%Y_U2W,E]lOa&D'&B?0O,2Wd19XAV8RGU*P3&Cb<4bPjZ6`aMTZTY
%gZU&a^V_mHiOEp;+s87aV.l\D+ZVhtbJ$h>\[=hrZEptCgp"kF>g@O/Mp#\FE84OsXD0*<ma(0(;'Gsa$dC-tkSg[.n(T5B=Z57:
%69esK4Oo`WO/HU0>[7P9&_/uM9jN5<@SE%_bK9Kc>FePl2,1JtgOhYt7cJA+Q&/Yqs%l>TH,"f?n(RP2RkRr#:LC)B@molma(Daq
%1#^n+2h<5Pkd=R4DQsD&U"(CrO[0eWGuLNW[T0Z*``:!$/pN,j<OK>fk6(BJX\4R!J1R9c#6e;W?Q5!7g4oJr$#]29f.TR1>U7@l
%>B3spXB$@4p8#:!U.Zi!l9C@3C?n7m>mkD15I7JmOX4'g$sgU%5IUsucIU<XWKIn+\sS4%X5btD?<^q*FX?K6"58"gba#I3Ah'9V
%AA5'M?]3o]cTCkW01snoc<tC/\D#6X!1`@[NCC!>((5D+Qo75)8%ut_.PmArCsX"<NM,aG(W<*u6smE[(i.)\R)!td^5JGD6k2[A
%\R==cdc/U8b%&1"-`12s>:@uES\h96#9XFL(a=^9^@\J6EF^^RUdhjcXEM*IQeO[qLuBV)j7QEPU,aUYbKUERLm$eY::mJL5$MQK
%meA>j:CZ4QXlT*'FgXtbDjmi'\1lPo<Op>S(@lB!n#[>FJqoBb]E?8I;*h$NJ0BmUPo@22e"cn[)GGS)`MT9bWk@J/(bO'>6!_+2
%M!oSIX/_gpP!^cf6d+_0H',h,aWS3Car1DkPaGe;;'Ku3^gf-DbM4OZZ0C,r\T8X%e!Gpp'ShC$ad2`^5EpfDQ?^q92OgjB@SO4)
%#2\J-O@M$<AF";RF_6Ak`0Y=%i3]I9DFo<@13-$G"SB&3Y:[rOUA=Z@UqgQ*mrW;KC+W-@l"*A6hJm&qW\p05PjDMp_DI3aHM%Rh
%Wd+2nb+,<O,8dLHTop,9.SqBj[(T6.$P74/bl0)_d-QDjlR>UrFhJne'U<WNer!(1(;e.Q1O0jnU8"/P_;>;n$Wcjs;-QA^aZMNf
%PRp@Sne+CD9MT%m()'2.I>K@+OZNqEA<!(A!f@o.7WjLngo7,:IUk1+!OX"A%'VneYq6.0dUGq26O/V"G%(t:k!AF5bIW.^?=Sei
%\/3k$;l"I/Dh(b>qXu_K6._rYC=F(Ur*Ibj8[S/%9<Fng9>g(AfB/sCQ(=<XQh,UD`_k0bZTgR+:76glk+H],;GfpCm'j>jhaB&9
%dDpkc/s`L7`o^M393nVkJKu:Q\Vk0A]Io+nJCC3ffO=cJS!qKqoZe'-.?'8\\ej_J;&3AD2&f7ZiG"KIMfXcH@u6-oU!fi)[%>F-
%R.49*&Gq>EZ&]1GkY&FCJ/D2M$&)+Ghc2Vh\;rEe`8%cePGIJ"bP"*b+([WJPLKM%f7)SMA4a7'3Mg:l0'iBfR!.6:#p+Wj]N_de
%G:J\W<:OSckRK,`JqH8)CZ]W`1u"I\7pGQ/`5lU1a6M&RdkL-9>]DmT6E`XSHjn:+a<eQl*OQ`p>=Curp[V.eX_2-Z%$%DCE(`eH
%2WPT%f.nc`>[(_dmh#T]lWYS%g6PriOg3Sh#$<&=\nLW*A9eX=?oP4bRT1F%/n[>>9V]mq8=aB]hq(n,[LFY2AtDW2c;&/#frq#n
%**L?HO,/#qjiq0"a>fQjpKlCPmO3RNBo8@'f'XLeI8#o:o@S\Z#LZGf\'>>"m1b840fWpF[I+Ka?LNfWf^>u"Q0e,&/;j/_>LC/9
%Wu_"4[LWrR/)42A$hm'j3Vf^^]!!lLS%:BqXdcr&^!0DV^+V;1Cc123hPrj/E^/6PrDPT22I?2?`N*Z\)-dFrA:e%a0PP(3'9[Is
%Vop?h;nHt)O3uAm2llO.N2hUtAbXjNMpD:F-\"3n.atp<`qmBG8Q&$[e#g9_M,N9s*eU=aOQQ-$i\8#;A90h*eSCWWc"NN;jjd)R
%\=*8$X)F^N_LBr'![giG385SL&gu\h?B3@_q0hn6Eag96$^_>h>f2/_0_M;%DS!/ee_n4!'A&?KCEt8lPG`r`D7*qKfoUlt<UcgO
%b^q3BC!M1QKfW"/4_]IgN&ma%8a`[,U3uJc#B5\4P-^K>R0PS4S(;FA)/@\Io!!2k1d1<^cQ8ieBbm6Y$BT*X4/_E]kG#P%W-4F>
%U:^gJ4Ai.#7Fn9dTi.#RiP9VXC9pT!Q7Ra#X+llOcP`J%3t4@Cg7>tTK(Z&T?ZB&'McrQLPZX#_3q_'];H:in0D!L-`Q/<qHB,4j
%$7ef8<#3]n*A:-@Z^;K*Wf30FX=,M.H$8Wso5Z3-VCQrl)uDqcbGcn'F"^8M1$S5..TcFdDAJ+n.=:4r^f(:%QBgXGLPKN$1JjIe
%is4Y+FP<VtaZZ3R;ucl1(e?=FKMs7p&5\L2hq]XDa^a'qC.,G]*PsL(@bOK`n\X[0K#)4`O0DiBghYMLdS2B:BjN4>]Tb$s+e\C(
%@HCuK/2*f&?AQ.>7$.(qW6bq*ToY)GIRK.^V-MdBDr1+[jb_uH%oQ5b>#?s7Ug?Se]bI=>Qu^^bH)jI6X,gt*]b&V<+gq!9a2MPg
%mjV8*U_9r89>sdJ18X7uAU3\0m4YF/5:Y5c<=-!/*Q"XQC(qu4UKPO[,tr#DWr*!^M;)-HbhB,IT^pn__[mREUon\e5I!,VCsNO`
%khfjMoHRm@9EMP$i)k_g$L9[S1Z&'<iI$D]9MmN<.GbJFMoH(+Z>@?7!NWTi<ELCYiZ%4Y`CG;L&H5Ndrk\:p?2j'6P=,:BUn0J$
%Ch8n*W7bbeQ9tq+]=TX99udJ`qIXF8]BCpXrK]PjWXH'sOea#MC6PX\nJP8^(V4B:N"?lg<Op.ERPn',OJpC$1l5m5k&FsL[G:FZ
%Iu5WdD,$(_`;5V!D5'Eln%Xbn-$DIMK<*.]:i"SiMDg-,d&DpiJY*u@)j,JlNF.r1M.G-tW1q*0(1uKjNu@X?q'4RW(gI<p#4H:s
%ng?W$G3!"&)<>FF8)2OA:@78U^<mnPZI2f@hh][8co6PhO\ar+Wj6180D\047.N9Dr1E)0<0pW3.nniV#glO%4rs"Y24Gu@Yc5L;
%PIO1]alm@]8?_!]c?ch1JK##fr-p;Wj8a-.B4:'%4*,//M']R-:PgCN@g;7Fem$aqJC8]=9,:>RkL%F<e!"bbMn%<l)Jup/ZajL,
%)YhsH2R,A&5+9I(=BDA7)GDbCPr0^l"%YuMej,6Hn8HiZdVhYC+4!/u]"*0"(_;@mD]Q[+2BRp(3X7G16X@j?'533e^Q[A)ZJ?h$
%c%b3t$cU(;6]ket1duhp9qNq7V.6f]?WG8BAE@nhge_+33n6Q#M4MO&"-1iR(o!atC<`/@(Mu@)FWiO=ZugW`Z8FhFl_5h\8mEV[
%U1EeWB;B9>QLW/U3Yb-Z>P2#lU[+YuM[!P!l7mq9;tg#=[1I`6<Nq]M1U)/m2*geg=>a0>a&"HYZBkCS:TMIg6<t1g1#K)4YZ+MG
%T=W4HE?3jtA1SK721nMCi$?'ucXfdpQptbXBO/MOZ2R#A[jE*bJlGBO8a\/jQ,1.AL\@+g-GMB1)MW#^C/6HrUFd1fn=(cj3(hn\
%H89Ao+s%/lK_!SiKmAs2>!%V%7`CB6`;<T?,:Vu2;]5mg;2+tlT\>VTT=Yjnk,+jk._Jo,[So.5"DDt=ZBn"k4UNEA*q(*!.W^h=
%O>&%T9nH+K6^=t.92W:?'=2GTD"VdHooR#Q[Nh;MoK\eLC/ZZ-4?KQ(&>31sHWB;r[PtRqS*cW[54uCp8C^S7/unP&Ybln:3DZQ!
%eWAuEO"M0MY+k(CgpHm;W%I+V(N=S;G5A8phI#C<rZ^It4q6k,q7C!^p#CgWqY'4chu<-DgE6Ijo_2rJ:VZbNpE-"+k,[BEht>Oo
%+27^=]5QU+o^2D1r6)\_J,&!sJ,Ak^G1Ah0Iiu.gT*hE<5P?<5j39f0`VprdM*Dal^A5gmnC;IRmsb66n)(eVj1?C_q9-tNjhJM-
%k2!fPq"EJ2hYm5g0>@8Hm=2isHMd[85C@_QiSAugs7Gs.O7.PonAC=USppOR&-$2V].%Xmo#kD?lT]mhMuNucBSo%~>
%AI9_PrivateDataEnd
